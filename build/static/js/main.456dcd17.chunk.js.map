{"version":3,"sources":["static/bettorsight-logo.svg","components/Layout.js","components/LargeLogo.js","store/actions/teamStatsActions.js","components/SmallLogo.js","components/stats_cards_components/stats_cards_components.js","components/stats_cards_components/basketball-nba-tabs/MatchTab.js","components/stats_cards_components/basketball-nba-tabs/InjuriesTab.js","components/stats_cards_components/basketball-nba-tabs/OddsTab.js","utils/utils.js","components/stats_cards_components/basketball-nba-tabs/TrendsTab.js","components/stats_cards_components/basketball-nba-tabs/StreaksTab.js","views/StatsTabsCard.js","components/StatsCardWrapper.js","views/GamePage.js","components/GetFromAPI.js","views/InjuriesPage.js","views/PowerRankingsPage.js","App.js","store/reducers/teamStatsReducer.js","store/reducers/rootReducer.js","components/ScrollToTop.js","index.js"],"names":["Layout","props","className","src","bettorsightLogo","alt","to","target","href","children","LargeLogo","image","bgColor","style","backgroundColor","set_status_at_key_action","obj","dispach","getState","type","err","console","log","message","SmallLogo","get_n","n","parseFloat","split","reverse","higher_better","a","b","lower_better","both","structure_raw_row_from_key_mapping","raw","key_mapping","map","row","reduce","acc","key_init","key_final","$t","key_mapping_matchup","key_head","side_eval","key_mapping_matchup_sag","structure_matchup_data","data_ar","raw_matchup","feed","entry","raw_matchup_sag","str_matchup","_","keyBy","merge","stat_structure","stat_key","key_mapping_injuries","key_mapping_odds","get_team_data","team","teamDataJSON","get_sheet_url","sheet_id","sheet_no","key_mapping_trends","key_mapping_streaks","dispatch_structured_data","category","subcategory","structured_data","store","dispatch","post_fetch_api_at_stat_key","structure_data","status_key","StatsTabsCard","get_each_config","config","key","ob","apis","status_update","i","length","fetch","then","resp","json","data","push","catch","compose","connect","state","useDispatch","configs","useState","inti_once","set_inti_once","useSelector","teamStats","status","stats","useEffect","Object","entries","forEach","set_a","setTimeout","GamePage","GetFromAPI","api","api_data","set_api_data","done_once","set_done_once","fetch_complete","set_fetch_complete","React","cloneElement","structure_injuries_raw_data","search","structured","stru_ar","keys","player","position","updated","injury","injurystatus","search_ar","teamName","check","trim","toLowerCase","word","eac","match","replace","includes","injuries","EachTeamInjuries","team_ob","teamImg","positionno","colSpan","InjuriesJSX","set_search","onChange","e","value","placeholder","InjuriesPage","key_mapping_powerrankings","EachTeamPowerRanking","ranking","PowerRankingsJSX","structure_powerrankings_raw_data","PowerRankingsPage","exact","path","initialState","basketball","nba","matchup","odds","trends","streaks","raw_injuries","str_injuries","groupBy","raw_odds","str_odds","raw_trends","str_trends","raw_streaks","str_streaks","game","rootReducer","combineReducers","action","ScrollToTop","prevProps","this","location","window","scrollTo","Component","withRouter","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.456dcd17.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bettorsight-logo.d52d7cc2.svg\";","import React from 'react'\nimport { NavLink } from 'react-router-dom';\nimport bettorsightLogo from \"../static/bettorsight-logo.svg\";\n\nfunction Layout(props) {\n  return (\n    <div className=\"container\">\n      <div className=\"logo-continer\">\n        <img src={bettorsightLogo} alt=\"\" />\n      </div>\n      <div className=\"row-flex \">\n        <NavLink to=\"/powerrankings\"><div className=\"btn black-btn m5\">Power Rankings</div></NavLink>\n        <NavLink to=\"/injuries\"><div className=\"btn black-btn m5\">Injuries</div></NavLink>\n        {/* <NavLink to=\"/trends\"><div className=\"btn black-btn m5\">Trends</div></NavLink> */}\n      </div>\n      <div className=\"rankings-container\">\n        <div className=\"row\">\n          <div className=\"col s12\">\n            <div className=\"side-card top-side-card\">\n              <h5 className=\"center\">BEST NBA ODDS</h5>\n              <div className=\"center\">\n                <a target=\"_blank\" href=\"https://jgexchange.com/bet.html/\">\n                  <div className=\"btn black-btn\">click here</div>\n                </a>\n              </div>\n            </div>\n          </div>\n          <div className=\"col s12 m10 offset-m1 l8 offset-l2\">\n            {props.children}\n          </div>\n          <div className=\"col s12 m10 offset-m1 l2 side-card side-side-card\">\n            <h5 className=\"center\">BEST NBA ODDS</h5>\n            <div className=\"center\">\n              <div className=\"btn black-btn\">click here</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Layout\n","import React from 'react'\n\nfunction LargeLogo(props) {\n    const {image, bgColor= 'transparent'} = props\n    return (\n        <div className=\"large-logo-container\" style={{\n            backgroundColor: bgColor\n         }}>\n            <img src={image} />\n        </div>\n    )\n}\n\nexport default LargeLogo\n","export const updateTeamStatsAction = (obj) => {\n  return (dispach, getState) => {\n    // console.log('in updateTeamStatsAction', obj)\n    return dispach({\n      type: \"SET_TEAM_STATS_DATA_FOR_SUBCAT\",\n      ...obj,\n    });\n  };\n};\n\nexport const set_stats_at_key_action = (obj) => {\n  return (dispach, getState) => {\n    try{\n      return dispach({ type: \"SET_STATS_AT_KEY\", ...obj });\n    }catch(err){\n      console.log('err in updateTeamStatsAction', obj)\n    }\n  };\n};\n\nexport const set_status_at_key_action = (obj) => {\n  return (dispach, getState) => {\n    try{\n      return dispach({ type: \"SET_STATUS_AT_KEY\", ...obj });\n    }catch(err){\n      console.log('err in updateTeamStatsAction', obj, err.message)\n    }\n  };\n};\n\nexport const updateGameStreaksAction = (obj) => {\n  return (dispach, getState) => {\n    // console.log('in updateGameStreaksAction', obj)\n    return dispach({\n      type: \"SET_GAME_STREAKS_DATA_FOR_SUBCAT\",\n      ...obj,\n    });\n  };\n};\n\nexport const get_team_stats_at_key_only_action = ({ team, category, subcategory, key }) => {\n  return (dispach, getState) => {\n    try {\n      return getState().teamStats[category][subcategory].stats[key][team];\n    } catch (err) {\n      return [];\n    }\n  };\n};\nexport const get_all_team_stats_action = (ob) => {\n  return (dispach, getState) => {\n    const { team, category, subcategory, keys } = ob;\n    const store = getState();\n    try {\n      return  Object.fromEntries(\n        keys.map(key=>[key, dispach(get_team_stats_at_key_only_action({...ob, key}))])\n      )\n      \n    } catch (err) {\n      return [];\n    }\n  };\n};\n","import React from 'react'\n\nfunction SmallLogo(props) {\n    const {image} = props\n    return (\n        <div className=\"small-logo-container\">\n            <img src={image} />\n        </div>\n    )\n}\n\nexport default SmallLogo\n","import React from 'react';\nimport LargeLogo from '../LargeLogo';\n\nexport const BarLine = (props) => {\n  const { left, right, colorA, colorB, side } = props;\n  return (\n    <div className=\"row-flex barline\">\n      <div\n        style={{\n          backgroundColor: colorA,\n          width: `${left - 0.3}%`,\n          opacity: side != -1 ? (side == 0 ? \"1\" : \"0.2\") : \"1\",\n        }}\n        className=\"bar-left mh-10px\"\n      ></div>\n      <div\n        style={{ backgroundColor: \"white\", width: `${0.6}%` }}\n        className=\"bar-left mh-10px\"\n      ></div>\n      <div\n        style={{\n          backgroundColor: colorB,\n          width: `${right - 0.3}%`,\n          opacity: side != -1 ? (side == 1 ? \"1\" : \"0.2\") : \"1\",\n        }}\n        className=\"bar-right mh-10px\"\n      ></div>\n    </div>\n  );\n};\n\nexport const TeamBar = ({ teamA, teamB, teamA_Img, teamB_Img, midTitle }) => {\n  return (\n    <div className=\"row-flex justify-space-between\">\n      <div className=\"col-flex\">\n        <LargeLogo image={teamA_Img} />\n        <span className=\"bold center\">{teamA}</span>\n      </div>\n      <h5 className=\"center\">{midTitle}</h5>\n      <div className=\"col-flex\">\n        <LargeLogo image={teamB_Img} />\n        <span className=\"bold center\">{teamB}</span>\n      </div>\n    </div>\n  );\n};\n\nexport const SingleStat = ({\n  statLeft,\n  statRight,\n  statTitle,\n  barBottomText,\n  colorA,\n  colorB,\n  side = -1,\n  show_line = false,\n  lval = 50,\n  rval = 50,\n}) => {\n  const left = (lval * 100) / (lval + rval);\n  const right = (rval * 100) / (lval + rval);\n  return (\n    <div className=\"SingleStatContainer w-100\">\n      <div className=\"row-flex justify-space-between\">\n        <span>{statLeft}</span>\n        <span className=\"bold\">{statTitle}</span>\n        <span>{statRight}</span>\n      </div>\n      {show_line && <BarLine {...{ left, right, colorA, colorB, side }} />}\n      {barBottomText && <p className=\"center grey-text\">{barBottomText}</p>}\n      {!barBottomText && <div className=\"spacing-5px\"></div>}\n    </div>\n  );\n};\n\nexport const get_n = (n) => {\n  parseFloat(n?.split(\" \")?.reverse()[0] || '')\n};\nexport const higher_better = (a, b) => {\n  a = get_n(a);\n  b = get_n(b);\n  return a > b ? 0 : 1;\n};\nexport const lower_better = (a, b) => {\n  a = get_n(a);\n  b = get_n(b);\n  return b > a ? 0 : 1;\n};\nexport const both = (a, b) => -1;\n\n\nexport const structure_raw_row_from_key_mapping = ({raw, key_mapping})=>(\n  raw.map((row) =>key_mapping.reduce((acc,{ key_init, key_final }) => ({ ...acc, [key_final]: row[key_init]?.$t }),{}))\n)","import _ from 'lodash'\nimport {\n  both,\n  higher_better,\n  lower_better,\n  SingleStat,\n  structure_raw_row_from_key_mapping,\n  TeamBar,\n} from \"../stats_cards_components\";\n\nconst key_mapping_matchup = [\n  {\n    key_head: \"Team\",\n    key_init: \"gsx$teams\",\n    key_final: \"team\",\n    side_eval: null,\n  },\n  {\n    key_head: \"Against The Spread\",\n    key_init: \"gsx$_d6ua4\",\n    key_final: \"ATS\",\n    side_eval: higher_better,\n  },\n  {\n    key_head: \"Straight Up\",\n    key_init: \"gsx$_d5fpr\",\n    key_final: \"SU\",\n    side_eval: higher_better,\n  },\n  {\n    key_head: \"O/U\",\n    key_init: \"gsx$_dkvya\",\n    key_final: \"O/U\",\n    side_eval: both,\n  },\n  {\n    key_head: \"Average Line\",\n    key_init: \"gsx$_d88ul\",\n    key_final: \"avg_line\",\n    side_eval: lower_better,\n  },\n  {\n    key_head: \"Average Total\",\n    key_init: \"gsx$_dmair\",\n    key_final: \"avg_total\",\n    side_eval: both,\n  },\n  {\n    key_head: \"FG\",\n    key_init: \"gsx$teams_2\",\n    key_final: \"FG\",\n    side_eval: higher_better,\n  },\n  {\n    key_head: \"FG%\",\n    key_init: \"gsx$_dp3nl\",\n    key_final: \"FG%\",\n    side_eval: higher_better,\n  },\n  {\n    key_head: \"FT\",\n    key_init: \"gsx$_df9om\",\n    key_final: \"FT\",\n    side_eval: higher_better,\n  },\n  {\n    key_head: \"FT%\",\n    key_init: \"gsx$_dgo93\",\n    key_final: \"FT%\",\n    side_eval: higher_better,\n  },\n  {\n    key_head: \"3s\",\n    key_init: \"gsx$_di2tg\",\n    key_final: \"3s\",\n    side_eval: higher_better,\n  },\n  {\n    key_head: \"3s%\",\n    key_init: \"gsx$_djhdx\",\n    key_final: \"3s%\",\n    side_eval: higher_better,\n  },\n  {\n    key_head: \"BLKS\",\n    key_init: \"gsx$_dw4je\",\n    key_final: \"BLKS\",\n    side_eval: higher_better,\n  },\n  {\n    key_head: \"O-RBND\",\n    key_init: \"gsx$_dxj3v\",\n    key_final: \"O-RBND\",\n    side_eval: higher_better,\n  },\n  {\n    key_head: \"RBND\",\n    key_init: \"gsx$_dyxo8\",\n    key_final: \"RBND\",\n    side_eval: higher_better,\n  },\n  {\n    key_head: \"Fouls\",\n    key_init: \"gsx$_e0c8p\",\n    key_final: \"Fouls\",\n    side_eval: lower_better,\n  },\n  {\n    key_head: \"AST\",\n    key_init: \"gsx$_dqi9q\",\n    key_final: \"AST\",\n    side_eval: higher_better,\n  },\n  {\n    key_head: \"Turnovers\",\n    key_init: \"gsx$_drwu7\",\n    key_final: \"Turnovers\",\n    side_eval: lower_better,\n  },\n  {\n    key_head: \"Q1\",\n    key_init: \"gsx$_dtbek\",\n    key_final: \"Q1\",\n    side_eval: higher_better,\n  },\n  {\n    key_head: \"Q2\",\n    key_init: \"gsx$_dupz1\",\n    key_final: \"Q2\",\n    side_eval: higher_better,\n  },\n  {\n    key_head: \"Q3\",\n    key_init: \"gsx$_e7d2q\",\n    key_final: \"Q3\",\n    side_eval: higher_better,\n  },\n  {\n    key_head: \"Q4\",\n    key_init: \"gsx$_e8rn7\",\n    key_final: \"Q4\",\n    side_eval: higher_better,\n  },\n  {\n    key_head: \"Avg Score\",\n    key_init: \"gsx$_ea67k\",\n    key_final: \"Avg_Score\",\n    side_eval: higher_better,\n  },\n  {\n    key_head: \"Opp FG\",\n    key_init: \"gsx$opps\",\n    key_final: \"Opp FG\",\n    side_eval: lower_better,\n  },\n  {\n    key_head: \"Opp FG%\",\n    key_init: \"gsx$_e1qt2\",\n    key_final: \"Opp FG%\",\n    side_eval: lower_better,\n  },\n  {\n    key_head: \"Opp FT\",\n    key_init: \"gsx$_e35dj\",\n    key_final: \"Opp FT\",\n    side_eval: lower_better,\n  },\n  {\n    key_head: \"Opp FT%\",\n    key_init: \"gsx$_e4jxw\",\n    key_final: \"Opp FT%\",\n    side_eval: lower_better,\n  },\n  {\n    key_head: \"Opp 3s\",\n    key_init: \"gsx$_e5yid\",\n    key_final: \"Opp 3s\",\n    side_eval: lower_better,\n  },\n  {\n    key_head: \"Opp 3s%\",\n    key_init: \"gsx$_eilm2\",\n    key_final: \"Opp 3s%\",\n    side_eval: lower_better,\n  },\n  {\n    key_head: \"Opp BLKS\",\n    key_init: \"gsx$_ek06j\",\n    key_final: \"Opp BLKS\",\n    side_eval: lower_better,\n  },\n  {\n    key_head: \"Opp O-RBND\",\n    key_init: \"gsx$_eleqw\",\n    key_final: \"Opp O-RBND\",\n    side_eval: lower_better,\n  },\n  {\n    key_head: \"Opp RBND\",\n    key_init: \"gsx$_emtbd\",\n    key_final: \"Opp RBND\",\n    side_eval: lower_better,\n  },\n  {\n    key_head: \"Opp Fouls\",\n    key_init: \"gsx$_eczce\",\n    key_final: \"Opp Fouls\",\n    side_eval: higher_better,\n  },\n  {\n    key_head: \"Opp AST\",\n    key_init: \"gsx$_eedwv\",\n    key_final: \"Opp AST\",\n    side_eval: lower_better,\n  },\n  {\n    key_head: \"Opp Turnovers\",\n    key_init: \"gsx$_efsh8\",\n    key_final: \"Opp Turnovers\",\n    side_eval: higher_better,\n  },\n  {\n    key_head: \"Opp Q1\",\n    key_init: \"gsx$_eh71p\",\n    key_final: \"Opp Q1\",\n    side_eval: lower_better,\n  },\n  {\n    key_head: \"Opp Q2\",\n    key_init: \"gsx$_etu5e\",\n    key_final: \"Opp Q2\",\n    side_eval: lower_better,\n  },\n  {\n    key_head: \"Opp Q3\",\n    key_init: \"gsx$_ev8pv\",\n    key_final: \"Opp Q3\",\n    side_eval: lower_better,\n  },\n  {\n    key_head: \"Opp Q4\",\n    key_init: \"gsx$_ewna8\",\n    key_final: \"Opp Q4\",\n    side_eval: lower_better,\n  },\n  {\n    key_head: \"Opp Avg Score\",\n    key_init: \"gsx$_ey1up\",\n    key_final: \"Opp Avg Score\",\n    side_eval: lower_better,\n  },\n];\n\nconst key_mapping_matchup_sag = [\n  {\n    key_head: \"Team\",\n    key_init: \"gsx$teams\",\n    key_final: \"team\",\n    side_eval: null,\n  },\n  {\n    key_head: \"Power Ranking\",\n    key_init: \"gsx$points\",\n    key_final: \"points\",\n    side_eval: lower_better,\n  },\n  {\n    key_head: \"Sagarin Rating\",\n    key_init: \"gsx$rating\",\n    key_final: \"rating\",\n    side_eval: higher_better,\n  },\n];\n\nexport const structure_matchup_data = (data_ar) => {\n  var raw_matchup = data_ar[0].feed.entry;\n  var raw_matchup_sag = data_ar[1].feed.entry;\n  raw_matchup = structure_raw_row_from_key_mapping({raw: raw_matchup, key_mapping: key_mapping_matchup});\n  raw_matchup_sag = structure_raw_row_from_key_mapping({raw: raw_matchup_sag, key_mapping: key_mapping_matchup_sag});\n  // console.log(\"raw_matchup=>\", raw_matchup);\n  \n  var str_matchup =  _.keyBy(\n    _.merge(_.keyBy(raw_matchup, 'team'), _.keyBy(raw_matchup_sag, 'team'), ),\n    'team');\n  delete str_matchup[''];\n  // console.log(\"str_matchup=>\", str_matchup);  \n  return { stat_structure: str_matchup, stat_key: 'matchup' };\n};\n\nexport const MatchupTab = ({ statA, statB }) => {\n  const { teamA, teamA_Img, colorA } = statA;\n  const matchA = (statA && statA?.stats?.matchup) || {};\n  const { teamB, teamB_Img, colorB } = statB;\n  const matchB = (statB && statB?.stats?.matchup) || {};\n  // console.log('matchup tab', matchA, matchB)\n  const ats_records = key_mapping_matchup.slice(1, 6);\n  const team_matchup = [\n    ...key_mapping_matchup_sag.slice(1),\n    ...key_mapping_matchup.slice(6),\n  ];\n\n  return (matchA && Object.keys(matchA).length != 0) ||\n    (matchB && Object.keys(matchB).length != 0) ? (\n    <div className=\"card-content\">\n      <TeamBar\n        midTitle={\"ATS Records\"}\n        {...{ teamA, teamA_Img, teamB, teamB_Img }}\n      />\n      <div className=\"bottom-margin-30px\"></div>\n      {ats_records.map((stat_row) => (\n        <>\n          <div className=\"spacing-10px\"></div>\n\n          <SingleStat\n            statLeft={matchA && matchA[stat_row.key_final]}\n            statRight={matchB && matchB[stat_row.key_final]}\n            side={\n              stat_row.side_eval\n                ? stat_row.side_eval(matchA[stat_row.key_final], matchB[stat_row.key_final])\n                : -1\n            }\n            show_line={true}\n            statTitle={stat_row.key_head}\n            {...{ colorA, colorB }}\n          />\n        </>\n      ))}\n\n      <div className=\"bottom-margin-30px\"></div>\n\n      <TeamBar\n        midTitle={\"Team Matchup\"}\n        {...{ teamA, teamA_Img, teamB, teamB_Img }}\n      />\n      {team_matchup.map((stat_row) => (\n        <>\n          <div className=\"spacing-10px\"></div>\n\n          <SingleStat\n            statLeft={matchA && matchA[stat_row.key_final]}\n            statRight={matchB && matchB[stat_row.key_final]}\n            side={\n              stat_row.side_eval\n                ? stat_row.side_eval(matchA[stat_row.key_final], matchB[stat_row.key_final])\n                : -1\n            }\n            show_line={true}\n            statTitle={stat_row.key_head}\n            {...{ colorA, colorB }}\n          />\n        </>\n      ))}\n    </div>\n  ) : (\n    <div className=\"card-content\">\n      <p className=\"flow-text center\">No Data Fetched at the moment</p>\n    </div>\n  );\n};\n","import _ from \"lodash\";\nimport { useState } from \"react\";\nimport LargeLogo from \"../../LargeLogo\";\nimport { structure_raw_row_from_key_mapping } from \"../stats_cards_components\";\n\nconst key_mapping_injuries = [\n  {\n    key_head: \"Team\",\n    key_init: \"gsx$teamid\",\n    key_final: \"team\",\n  },\n  {\n    key_head: \"Team\",\n    key_init: \"gsx$team\",\n    key_final: \"teams\",\n  },\n  {\n    key_head: \"Player\",\n    key_init: \"gsx$player\",\n    key_final: \"player\",\n  },\n  {\n    key_head: \"Position\",\n    key_init: \"gsx$position\",\n    key_final: \"position\",\n  },\n  {\n    key_head: \"Updated\",\n    key_init: \"gsx$updated\",\n    key_final: \"updated\",\n  },\n  {\n    key_head: \"Injury\",\n    key_init: \"gsx$injury\",\n    key_final: \"injury\",\n  },\n  {\n    key_head: \"Injury Status\",\n    key_init: \"gsx$injurystatus\",\n    key_final: \"injurystatus\",\n  },\n  {\n    key_head: \"PositionNo\",\n    key_init: \"gsx$positionno\",\n    key_final: \"positionno\",\n  },\n];\n\nexport const structure_injuries_data = (data_ar) => {\n  var raw_injuries = data_ar[0].feed.entry;\n  raw_injuries = structure_raw_row_from_key_mapping({\n    raw: raw_injuries,\n    key_mapping: key_mapping_injuries,\n  });\n  // console.log(\"raw_injuries\", raw_injuries);\n  var str_injuries = _.groupBy(raw_injuries, \"team\");\n  delete str_injuries[\"\"];\n  // console.log(\"str_injuries\", str_injuries);\n  return { stat_structure: str_injuries, stat_key: \"injuries\" };\n};\n\nexport const InjuriesTab = ({ statA, statB }) => {\n  const { teamA, teamA_Img, colorA } = statA;\n  const injuriesA = (statA && statA?.stats?.injuries) || [];\n  const { teamB, teamB_Img, colorB } = statB;\n  const injuriesB = (statB && statB?.stats?.injuries) || [];\n  const [injuries_big_ar, set_in_big] = useState([\n    { injuries: injuriesA, team_Img: teamA_Img, team: teamA },\n    { injuries: injuriesB, team_Img: teamB_Img, team: teamB },\n  ] || []);\n  // console.log(\"injuries_big_ar\", injuries_big_ar);\n  // console.log(\"injuries\", {injuriesA, injuriesB});\n  // return <></>\n  return (\n    <div className=\"card-content\">\n      <h5 className=\"center\">Injuries</h5>\n      {injuries_big_ar && injuries_big_ar?.map(({ injuries, team_Img = '', team= '' }) => (\n        <>\n          <div className=\"row-flex flex-start\">\n            <LargeLogo image={team_Img} />\n            <h5 className=\"bold center\">{team}</h5>\n          </div>\n          <div className=\"spacing-10px\"></div>\n\n          {injuries && injuries?.length != 0 ? (\n            <>\n              <div className=\"hide-on-small-only\">\n                <table>\n                  <tbody>\n                    <tr>\n                      <th>Player</th>\n                      <th>Position</th>\n                      <th>Updated</th>\n                      <th>Injury</th>\n                      <th>Injury Status</th>\n                    </tr>\n                    {injuries &&\n                      injuries?.map(\n                        ({\n                          player,\n                          position,\n                          updated,\n                          injury,\n                          injurystatus,\n                          positionno,\n                        }) => (\n                          <>\n                            <tr>\n                              <th>{player}</th>\n                              <td>\n                                {position}/{positionno}\n                              </td>\n                              <td>{updated}</td>\n                              <td>{injury}</td>\n                              <td>{injurystatus}</td>\n                            </tr>\n                          </>\n                        )\n                      )}\n                  </tbody>\n                </table>\n              </div>\n              <div className=\"hide-on-med-and-up\">\n                <table className=\"small-table\">\n                  <tbody>\n                    <tr>\n                      <th>Player</th>\n                      <th>Position</th>\n                      <th>Updated</th>\n                      <th>Injury</th>\n                    </tr>\n                    {injuries && injuries?.map(\n                      ({\n                        player,\n                        position,\n                        updated,\n                        injury,\n                        injurystatus,\n                        positionno,\n                      }) => (\n                        <>\n                          <tr>\n                            <th>{player}</th>\n                            <td>\n                              {position}/{positionno}\n                            </td>\n                            <td>{updated}</td>\n                            <td>{injury}</td>\n                          </tr>\n                          <tr>\n                            <td colSpan=\"4\">\n                              <span className=\"head\">Status: </span>\n                              {injurystatus}\n                            </td>\n                          </tr>\n                        </>\n                      )\n                    )}\n                  </tbody>\n                </table>\n              </div>\n            </>\n          ) : (\n            <h6 className=\"center head\">No Injuries</h6>\n          )}\n        </>\n      ))}\n    </div>\n  );\n};\n","import _ from \"lodash\";\nimport LargeLogo from \"../../LargeLogo\";\nimport { SingleStat, structure_raw_row_from_key_mapping } from \"../stats_cards_components\";\n\nconst key_mapping_odds = [\n  {\n    key_head: \"Team\",\n    key_init: \"gsx$team\",\n    key_final: \"team\",\n  },\n  {\n    key_init: \"gsx$open\",\n    key_final: \"open\",\n    key_head: \"Open\",\n  },\n  {\n    key_init: \"gsx$consensus\",\n    key_final: \"consensus\",\n    key_head: \"Consensus\",\n  },\n  {\n    key_init: \"gsx$betmgm\",\n    key_final: \"betmgm\",\n    key_head: \"Betmgm\",\n  },\n  {\n    key_init: \"gsx$sportsbetting\",\n    key_final: \"sportsbetting\",\n    key_head: \"Sports Betting\",\n  },\n  {\n    key_init: \"gsx$wynn\",\n    key_final: \"wynn\",\n    key_head: \"Wynn\",\n  },\n  {\n    key_init: \"gsx$wh\",\n    key_final: \"wh\",\n    key_head: \"WH\",\n  },\n  {\n    key_init: \"gsx$dk\",\n    key_final: \"dk\",\n    key_head: \"DK\",\n  },\n  {\n    key_init: \"gsx$circa\",\n    key_final: \"circa\",\n    key_head: \"Circa\",\n  },\n];\n\nexport const structure_odds_data = (data_ar) => {\n  var raw_odds = data_ar[0].feed.entry;\n  raw_odds = structure_raw_row_from_key_mapping({\n    raw: raw_odds,\n    key_mapping: key_mapping_odds,\n  });\n  // console.log(\"raw_odds\", raw_odds);\n  var str_odds = _.keyBy(raw_odds, \"team\");\n  delete str_odds[\"\"];\n  // console.log(\"str_odds\", str_odds);\n  return { stat_structure: str_odds, stat_key: \"odds\" };\n};\n\nexport const OddsTab = ({ statA, statB }) => {\n  const { teamA, teamA_Img, colorA } = statA;\n  const oddsA = (statA && statA?.stats[\"odds\"]) || {};\n  const { teamB, teamB_Img, colorB } = statB;\n  const oddsB = (statB && statB?.stats[\"odds\"]) || {};\n  // console.log(\"odds\", { oddsA, oddsB });\n  // return <></>\n  return (\n    <div className=\"card-content\">\n      {oddsA && Object.keys(oddsA).length != 0 ? (\n        <>\n          <div className=\"row-flex align-\">\n            <div className=\"col-flex w-200px justify-flex-start\">\n              <LargeLogo image={teamA_Img} />\n              <span className=\"bold center\">{teamA}</span>\n            </div>\n            <h5 className=\"center\">vs</h5>\n            <div className=\"col-flex w-200px justify-flex-start\">\n              <LargeLogo image={teamB_Img} />\n              <span className=\"bold center\">{teamB}</span>\n            </div>\n          </div>\n          <div className=\"spacing-20px\"></div>\n          <h5 className=\"center\">Odds</h5>\n          <div className=\"spacing-20px\"></div>\n          <div className=\"m-auto max_w-250px\">\n            {key_mapping_odds.map(({ key_head, key_final }) => (\n              <>\n                <SingleStat\n                  statLeft={key_head}\n                  statRight={oddsA[key_final]}\n                  lval={20}\n                  rval={80}\n                  // statTitle={key_head}\n                  {...{ colorA, colorB }}\n                />\n                <div className=\"spacing-10px\"></div>\n              </>\n            ))}\n          </div>\n        </>\n      ) : (\n        <h5 className=\"center\">No Odds yet</h5>\n      )}\n    </div>\n  );\n};\n","import teamDataJSON from \"../static/teamData.json\";\n\nconst fetch_data = (url) => {\n  return new Promise((resolve, reject) => {\n    return fetch(url)\n      .then((resp) => resp.json())\n      .then((data) => resolve(data));\n  });\n};\n\nexport const get_team_data = (team) => {\n  if (team == \"76ers\" || team == \"Seventysixers\")\n    return teamDataJSON[\"Seventysixers\"] || {};\n  if (team == \"Blazers\" || team == \"Trailblazers\")\n    return teamDataJSON[\"Trailblazers\"] || {};\n  return teamDataJSON[team] || {};\n};\n\nexport const get_all_teams = () => {\n  return Object.keys(teamDataJSON);\n};\n\nexport const get_sheet_url = ({ sheet_id, sheet_no }) =>\n  `https://spreadsheets.google.com/feeds/list/${sheet_id}/${sheet_no}/public/values?alt=json`;\n\nexport const get_colors_combo = ({ colorsA, colorsB }) => {\n  try {\n    const colorsA = colorsA.map((ea) => ea.split(1));\n    const colorsB = colorsB.map((ea) => ea.split(1));\n    const diffs = [\n      Math.abs(parseInt(colorsA[0], 16) - parseInt(colorsB[0], 16)),\n      Math.abs(parseInt(colorsA[0], 16) - parseInt(colorsB[1], 16)),\n      Math.abs(parseInt(colorsA[1], 16) - parseInt(colorsB[0], 16)),\n      Math.abs(parseInt(colorsA[1], 16) - parseInt(colorsB[1], 16)),\n    ];\n    var indicies = diffs.findIndex((diff) => diff == Math.max(...diffs));\n    indicies =\n      (indicies == 0 && [0, 0]) ||\n      (indicies == 1 && [0, 1]) ||\n      (indicies == 2 && [1, 0]) ||\n      (indicies == 3 && [1, 1]) ||\n      console.log({ indicies });\n    if (!(colorsA[indicies[0]] == 0 || colorsB[indicies[1]] == 0)) {\n      var colorA_final = \"#\" + colorsA[indicies[0]];\n      var colorB_final = \"#\" + colorsB[indicies[1]];\n      return { colorA: colorA_final, colorB: colorB_final };\n    }\n  } catch (err) {\n    return { colorA: colorsA[0], colorB: colorsB[0] };\n  }\n};\n","import _ from \"lodash\";\nimport LargeLogo from \"../../LargeLogo\";\nimport {\n  SingleStat,\n  structure_raw_row_from_key_mapping,\n  TeamBar,\n} from \"../stats_cards_components\";\n\nconst key_mapping_trends = [\n  {\n    key_head: \"Team\",\n    key_final: \"team\",\n    key_init: \"gsx$team\",\n  },\n  {\n    key_head: \"Teams\",\n    key_final: \"teams\",\n    key_init: \"gsx$teams\",\n  },\n  {\n    key_head: \"Win Loss\",\n    key_final: \"win-loss\",\n    key_init: \"gsx$win-loss\",\n  },\n  {\n    key_head: \"Streak\",\n    key_final: \"streak\",\n    key_init: \"gsx$streak\",\n  },\n  {\n    key_head: \"ATS\",\n    key_init: \"gsx$ats\",\n    key_final: \"ats\",\n  },\n  {\n    key_head: \"Open\",\n    key_final: \"open\",\n    key_init: \"gsx$open\",\n  },\n  {\n    key_head: \"Side\",\n    key_final: \"side\",\n    key_init: \"gsx$side\",\n  },\n  {\n    key_head: \"Money\",\n    key_final: \"money\",\n    key_init: \"gsx$money\",\n  },\n  {\n    key_head: \"OU\",\n    key_final: \"ou\",\n    key_init: \"gsx$ou\",\n  },\n];\n\nexport const structure_trends_data = (data_ar) => {\n  var raw_trends = data_ar[0].feed.entry;\n  raw_trends = structure_raw_row_from_key_mapping({\n    raw: raw_trends,\n    key_mapping: key_mapping_trends,\n  });\n  // console.log(\"raw_trends\", raw_trends);\n  var str_trends = _.keyBy(raw_trends, \"team\");\n  delete str_trends[\"\"];\n  // console.log(\"str_trends\", str_trends);\n  return { stat_structure: str_trends, stat_key: \"trends\" };\n};\n\nexport const TrendsTab = ({ statA, statB }) => {\n  const { teamA, teamA_Img, colorA } = statA;\n  const trendsA = (statA && statA?.stats?.trends) || {};\n  const { teamB, teamB_Img, colorB } = statB;\n  const trendsB = (statB && statB?.stats?.trends) || {};\n  // console.log(\"trends\", { trendsA, trendsB },);\n  // return <></>\n  return (trendsA && Object.keys(trendsA).length != 0) ||\n    (trendsB && Object.keys(trendsB).length != 0) ? (\n    <div className=\"card-content\">\n      <TeamBar\n        midTitle={\"Trends\"}\n        {...{ teamA, teamA_Img, teamB, teamB_Img }}\n      />\n      <div className=\"bottom-margin-30px\"></div>\n      <table className=\"hide-on-small-only\">\n        <tbody>\n          <tr>\n            <td>Teams</td>\n            {key_mapping_trends.map(({ key_head, key_final }) => (\n              <td>{key_head}</td>\n            ))}\n          </tr>\n          <tr>\n            <td style={{ borderBottom: `3px solid ${colorA}` }}>\n              {trendsA[\"teams\"]}\n            </td>\n            {key_mapping_trends.map(({ key_head, key_final }) => (\n              <td>{trendsA[key_final]}</td>\n            ))}\n          </tr>\n          <tr>\n            <td style={{ borderBottom: `4px solid ${colorB}` }}>\n              {trendsB[\"teams\"]}\n            </td>\n            {key_mapping_trends.map(({ key_head, key_final }) => (\n              <td>{trendsB[key_final]}</td>\n            ))}\n          </tr>\n        </tbody>\n      </table>\n      <table className=\"hide-on-med-and-up\">\n        <tbody>\n          {key_mapping_trends.map(({ key_head, key_final }) => (\n            <SingleStat\n              statLeft={trendsA[key_final]}\n              statRight={trendsB[key_final]}\n              show_line={true}\n              statTitle={key_head}\n              {...{ colorA, colorB }}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  ) : (\n    <div className=\"card-content\">\n      <p className=\"flow-text center\">No Trends at the moment</p>\n    </div>\n  );\n};\n","import _ from \"lodash\";\nimport LargeLogo from \"../../LargeLogo\";\nimport {\n  SingleStat,\n  structure_raw_row_from_key_mapping,\n  TeamBar,\n} from \"../stats_cards_components\";\n\nconst key_mapping_streaks = [\n  { key_init: \"gsx$game\", key_final: \"game\", key_head: \"Game\" },\n  { key_init: \"gsx$streaks\", key_final: \"streaks\", key_head: \"Streaks\" },\n];\n\nexport const structure_streaks_data = (data_ar) => {\n  var raw_streaks = data_ar[0].feed.entry;\n  raw_streaks = structure_raw_row_from_key_mapping({\n    raw: raw_streaks,\n    key_mapping: key_mapping_streaks,\n  });\n  // console.log(\"raw_streaks\", raw_streaks);\n  const str_streaks = raw_streaks.reduce((acc,{game,streaks})=>({\n    ...acc,\n    [game]:[\n      ...(acc[game] || []),\n      streaks\n    ]\n  }),{})\n  delete str_streaks[\"\"];\n  // console.log(\"str_streaks\", str_streaks);\n  \n  return { stat_structure: str_streaks, stat_key: \"streaks\" };\n};\n\nexport const StreaksTab = ({ statA, statB, streaks }) => {\n  const { teamA, teamA_Img, colorA } = statA;\n  const { teamB, teamB_Img, colorB } = statB;\n  // console.log('streaks=>',streaks);\n  // return <></>\n  return (\n    <div className=\"card-content streaks-tab\">\n      <TeamBar\n        midTitle={\"Streaks\"}\n        {...{ teamA, teamA_Img, teamB, teamB_Img }}\n      />\n      {streaks && streaks?.length > 0 ? (\n        streaks?.map((streak) => (\n          <>\n            <div className=\"spacing-20px\"></div>\n            <p>{streak}</p>\n            <div className=\"spacing-5px\"></div>\n            <hr />\n          </>\n        ))\n      ) : (\n        <h5 className=\"center head\">No Streaks</h5>\n      )}\n    </div>\n  );\n};","import { relativeTimeRounding } from \"moment\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Tabs, Tab } from \"react-materialize\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { store } from \"..\";\nimport LargeLogo from \"../components/LargeLogo\";\nimport SmallLogo from \"../components/SmallLogo\";\nimport {\n  MatchupTab,\n  structure_matchup_data,\n} from \"../components/stats_cards_components/basketball-nba-tabs/MatchTab\";\nimport { InjuriesTab } from \"../components/stats_cards_components/basketball-nba-tabs/InjuriesTab\";\nimport { OddsTab } from \"../components/stats_cards_components/basketball-nba-tabs/OddsTab\";\nimport {\n  both,\n  higher_better,\n  lower_better,\n  SingleStat,\n  TeamBar,\n} from \"../components/stats_cards_components/stats_cards_components\";\nimport {\n  get_all_team_stats_action,\n  get_team_stats_at_key_only_action,\n  set_stats_at_key_action,\n  set_status_at_key_action,\n} from \"../store/actions/teamStatsActions\";\nimport { get_colors_combo, get_team_data } from \"../utils/utils\";\nimport { TrendsTab } from \"../components/stats_cards_components/basketball-nba-tabs/TrendsTab\";\nimport { StreaksTab } from \"../components/stats_cards_components/basketball-nba-tabs/StreaksTab\";\n\nexport const dispatch_structured_data = ({\n  category,\n  subcategory,\n  structured_data,\n}) => {\n  var { stat_key, stat_structure } = structured_data;\n  return store.dispatch(\n    set_stats_at_key_action({\n      category,\n      subcategory,\n      stat_key,\n      stat_structure,\n    })\n  );\n};\nexport const dispatch_status_loaded = ({ category, subcategory, stat_key }) => {\n  return store.dispatch(\n    set_status_at_key_action({\n      category,\n      subcategory,\n      status_key: stat_key,\n      status_update: \"loaded\",\n    })\n  );\n};\nexport const post_fetch_api_at_stat_key = ({\n  data_ar,\n  structure_data,\n  category,\n  subcategory,\n}) => {\n  const structured_data = structure_data(data_ar);\n  const { status_key } = structured_data;\n  dispatch_structured_data({\n    category,\n    subcategory,\n    structured_data,\n  });\n};\n\nconst get_team_stats = ({ team, configs, category, subcategory, stats }) => {\n  if (!stats) return {};\n  var ar = Object.keys(configs).map(([key]) => [\n    [key],\n    [stats[key][team]] || null,\n  ]);\n  return Object.entries(ar);\n};\n\nfunction StatsTabsCard(props) {\n  console.log(\"StatsTabCard 2\");\n  const dispatch = useDispatch();\n\n  const { category, subcategory, GameID, teamsData } = props;\n  // console.log(category, subcategory, GameID)\n  var [teamA_mini, teamB_mini] = GameID.split(\"@\").map(\n    (ea) => ea.split(\" \").reverse()[0]\n  );\n  const configs = {\n    matchup: {\n      apis: [\n        // match_api,\n        \"https://spreadsheets.google.com/feeds/list/1cUcZSRXi5ksKsHqTnQGTtWkhflNbxUpTTwaPmLv-cmk/1/public/values?alt=json\",\n        // sag_api\n        \"https://spreadsheets.google.com/feeds/list/1cUcZSRXi5ksKsHqTnQGTtWkhflNbxUpTTwaPmLv-cmk/4/public/values?alt=json\",\n      ],\n      structure_data: structure_matchup_data,\n    },\n  };\n  const { stats, status } = useSelector(\n    (store) => store.teamStats[category][subcategory]\n  );\n  if (!stats)\n    return (\n      <>\n        <div className=\"row\">\n          <div className=\"col s12\">\n            <div className=\"card round-card\">\n              <div className=\"card-content\">\n                <h1 className=\"center\">Loading...</h1>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n\n  const team_dataA = get_team_data(teamA_mini);\n  const team_dataB = get_team_data(teamB_mini);\n  const keys = [\"matchup\", \"injuries\", \"odds\", \"trends\"];\n\n  const { colorA, colorB } = get_colors_combo({\n    colorsA: [team_dataA.color1, team_dataA.color2],\n    colorsB: [team_dataB.color1, team_dataB.color2],\n  });\n\n  const statA = {\n    teamA: team_dataA.teamName,\n    teamA_Img: team_dataA.teamImg,\n    colorA,\n    stats: dispatch(\n      get_all_team_stats_action({\n        team: teamA_mini,\n        category,\n        subcategory,\n        keys,\n      })\n    ),\n  };\n  const statB = {\n    teamB: team_dataB.teamName,\n    teamB_Img: team_dataB.teamImg,\n    colorB,\n    stats: dispatch(\n      get_all_team_stats_action({\n        team: teamB_mini,\n        category,\n        subcategory,\n        keys,\n      })\n    ),\n  };\n\n  const streak_game_id = `${teamA_mini}@${teamB_mini}`;\n  const streaks = (() => {\n    try {\n      return stats[\"streaks\"][streak_game_id];\n    } catch (err) {\n      return [];\n    }\n  })();\n\n  console.log(\"stats\", { statA, statB });\n  // console.log(\"streaks\", streak_game_id, streaks);\n\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col s12 m12\">\n          <div className=\"card round-card\">\n            <div className=\"card-content\">\n              {status[\"trends\"] == \"loaded\" &&\n                statA &&\n                statB &&\n                statA?.stats[\"trends\"] &&\n                statB?.stats[\"trends\"] && <TrendsTab {...{ statA, statB }} />}\n            </div>\n          </div>\n        </div>\n        <div className=\"col s12 m6\">\n          <div className=\"card round-card\">\n            <div className=\"card-content\">\n              {status[\"matchup\"] == \"loaded\" &&\n                statA &&\n                statB &&\n                statA?.stats[\"matchup\"] &&\n                statB?.stats[\"matchup\"] && <MatchupTab {...{ statA, statB }} />}\n            </div>\n          </div>\n        </div>\n        <div className=\"col s12 m6\">\n          <div className=\"card round-card\">\n            <div className=\"card-content\">\n              {status[\"injuries\"] == \"loaded\" &&\n                statA &&\n                statB &&\n                statA?.stats[\"injuries\"] &&\n                statB?.stats[\"injuries\"] && (\n                  <InjuriesTab {...{ statA, statB }} />\n                )}\n            </div>\n          </div>\n        </div>\n        <div className=\"col s12 m6\">\n          <div className=\"card round-card\">\n            <div className=\"card-content\">\n              {status[\"odds\"] == \"loaded\" &&\n                statA &&\n                statB &&\n                statA?.stats[\"odds\"] &&\n                statB?.stats[\"odds\"] && <OddsTab {...{ statA, statB }} />}\n            </div>\n          </div>\n        </div>\n        <div className=\"col s12 m6\">\n          <div className=\"card round-card\">\n            <div className=\"card-content\">\n              {status[\"streaks\"] == \"loaded\" && statA && statB && (\n                <StreaksTab {...{ statA, statB, streaks }} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default StatsTabsCard;\n","import React, { useEffect, useState } from \"react\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { set_status_at_key_action } from \"../store/actions/teamStatsActions\";\nimport {\n  dispatch_status_loaded,\n  post_fetch_api_at_stat_key,\n} from \"../views/StatsTabsCard\";\nimport { structure_matchup_data } from \"./stats_cards_components/basketball-nba-tabs/MatchTab\";\nimport { store } from \"../index\";\n\nconst get_each_config = async ({ config, category, subcategory, dispatch }) => {\n  const [key, ob] = config;\n  const { apis, structure_data } = ob;\n  var data_ar = [];\n  dispatch(\n    set_status_at_key_action({\n      category,\n      subcategory,\n      status_key: key,\n      status_update: \"loading\",\n    })\n  );\n  for (var i = 0; i < apis.length; i++) {\n    await fetch(apis[i])\n      .then((resp) => resp.json())\n      .then((data) => data_ar.push(data))\n      .catch(() => data_ar.push([]));\n  }\n  await post_fetch_api_at_stat_key({\n    data_ar,\n    category,\n    subcategory,\n    structure_data,\n  });\n  dispatch(\n    set_status_at_key_action({\n      category,\n      subcategory,\n      status_key: key,\n      status_update: \"loaded\",\n    })\n  );\n};\n\nfunction StatsCardWrapper(props) {\n  const dispatch = useDispatch();\n  const { category, subcategory, configs } = props;\n\n  const [inti_once, set_inti_once] = useState(false);\n  const {status, stats} = useSelector(({teamStats})=>teamStats[category][subcategory])\n  const init_fetch = () => {\n    var data_ar = [];\n    set_inti_once(true);\n    Object.entries(configs).forEach((config) => {\n      if(status[config[0]]=='loaded') return;\n      else get_each_config({ config, category, subcategory, dispatch });\n    });\n  };\n  useEffect(() => {\n    if (inti_once) return;\n    init_fetch();\n  }, [inti_once]);\n  const [a, set_a] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      set_a(true);\n    }, 3000);\n  }, [a]);\n\n  return <>{props.children}</>;\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(\n  StatsCardWrapper\n);\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation, useRouteMatch } from \"react-router\";\nimport LargeLogo from \"../components/LargeLogo\";\nimport StatsCardWrapper from \"../components/StatsCardWrapper\";\nimport { get_team_data } from \"../utils/utils\";\n// import StatsTabsCard, { statsPostFetchFn } from \"./StatsTabsCard\";\nimport StatsTabsCard, { post_fetch_api_at_stat_key } from \"./StatsTabsCard\";\nimport {\n  updateGameStreaksAction,\n  updateTeamStatsAction,\n} from \"../store/actions/teamStatsActions\";\nimport { structure_matchup_data } from \"../components/stats_cards_components/basketball-nba-tabs/MatchTab\";\nimport { structure_injuries_data } from \"../components/stats_cards_components/basketball-nba-tabs/InjuriesTab\";\nimport { structure_odds_data } from \"../components/stats_cards_components/basketball-nba-tabs/OddsTab\";\nimport { structure_trends_data } from \"../components/stats_cards_components/basketball-nba-tabs/TrendsTab\";\nimport { structure_streaks_data } from \"../components/stats_cards_components/basketball-nba-tabs/StreaksTab\";\n\nfunction GamePage(props) {\n  const dispatch = useDispatch();\n  const match = useRouteMatch();\n  const { gameid } = match.params;\n  const category = \"basketball\";\n  const subcategory = \"nba\";\n  const GameID = gameid.replaceAll(\"_\", \" \");\n\n  var [teamA_mini, teamB_mini] = GameID.split(\"@\").map(\n    (ea) => ea.split(\" \").reverse()[0]\n  );\n\n  const teamAData = get_team_data(teamA_mini);\n  const teamBData = get_team_data(teamB_mini);\n  const teamsData = {\n    teamA: teamAData.teamName,\n    teamA_Img: teamAData.teamImg,\n    colorA: teamAData.color1,\n    teamB: teamBData.teamName,\n    colorB: teamBData.color1,\n    teamB_Img: teamBData.teamImg,\n  };\n\n  const { configs } = useSelector(\n    ({ teamStats }) => teamStats[category][subcategory]\n  );\n\n  return (\n    <div className=\"container\">\n      <StatsCardWrapper\n        {...{ category, subcategory, post_fetch_api_at_stat_key, configs }}\n      >\n        <StatsTabsCard {...{ category, subcategory, GameID, teamsData }} />\n      </StatsCardWrapper>\n    </div>\n  );\n}\n\nexport default GamePage;\n","import React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"react-query\";\n\nfunction GetFromAPI(props) {\n  const { api } = props;\n\n  const [api_data, set_api_data] = useState(null);\n  const [done_once, set_done_once] = useState(false);\n  const [fetch_complete, set_fetch_complete] = useState(false);\n\n  const init_fetch = () => {\n    fetch(api)\n      .then(resp => resp.json())\n      .then(data => { set_api_data(data); set_fetch_complete(true) })\n      .catch((err) => { set_fetch_complete(true) })\n  }\n\n  useEffect(() => {\n    if (done_once) return;\n    init_fetch();\n    set_done_once(true);\n  }, [done_once])\n\n\n  return (\n    <>\n      {fetch_complete && React.cloneElement(props.children, {api_data}) }\n      {!fetch_complete && (\n        <h5 className=\"center\">Loading..</h5>\n      )}\n    </>\n  );\n}\n\nexport default GetFromAPI;\n","import { functionsIn } from \"lodash\";\nimport React, { useState } from \"react\";\nimport GetFromAPI from \"../components/GetFromAPI\";\nimport LargeLogo from \"../components/LargeLogo\";\nimport SmallLogo from \"../components/SmallLogo\";\nimport { get_all_teams, get_sheet_url, get_team_data } from \"../utils/utils\";\n\nconst sheet_id = \"1cUcZSRXi5ksKsHqTnQGTtWkhflNbxUpTTwaPmLv-cmk\";\nconst sheet_no = \"7\";\n\nconst key_mapping_injuries = [\n  {\n    key_head: \"Team\",\n    key_init: \"gsx$teamid\",\n    key_final: \"team\",\n  },\n  {\n    key_head: \"Team\",\n    key_init: \"gsx$team\",\n    key_final: \"teams\",\n  },\n  {\n    key_head: \"Player\",\n    key_init: \"gsx$player\",\n    key_final: \"player\",\n  },\n  {\n    key_head: \"Position\",\n    key_init: \"gsx$position\",\n    key_final: \"position\",\n  },\n  {\n    key_head: \"Updated\",\n    key_init: \"gsx$updated\",\n    key_final: \"updated\",\n  },\n  {\n    key_head: \"Injury\",\n    key_init: \"gsx$injury\",\n    key_final: \"injury\",\n  },\n  {\n    key_head: \"Injury Status\",\n    key_init: \"gsx$injurystatus\",\n    key_final: \"injurystatus\",\n  },\n  {\n    key_head: \"PositionNo\",\n    key_init: \"gsx$positionno\",\n    key_final: \"positionno\",\n  }\n];\n\nconst isEmpty = (search) => !search || search.length == 0;\nconst match_in_search = ({ search, match }) =>\n  search &&\n  match &&\n  search\n    .trim()\n    .toLowerCase()\n    .split(\" \")\n    .reduce(\n      (sac, word) =>\n        sac | match.trim().toLowerCase().replace(\" \", \"\").includes(word),\n      false\n    );\n\nconst structure_injuries_raw_data = ({ raw, search }) => {\n  var structured = {},\n    stru_ar = [];\n  for (var row of raw) {\n    row = key_mapping_injuries.reduce(\n      (acc, { key_init, key_final, key_head }) => ({\n        ...acc,\n        [key_final]: row[key_init]?.$t,\n      }),\n      {}\n    );\n    stru_ar.push(row);\n  }\n  get_all_teams().map((team) => {\n    stru_ar.push({ team });\n  });\n\n  for (var row of stru_ar) {\n    var { player, team, position, updated, injury, injurystatus } = row;\n    var search_ar = [\n      player,\n      team,\n      get_team_data(team).teamName,\n      position,\n      updated,\n      injury,\n      injurystatus,\n    ];\n    var check =\n      search &&\n      search\n        .trim()\n        .toLowerCase()\n        .split(\" \")\n        .reduce(\n          (acc, word) =>\n            acc |\n            search_ar.reduce(\n              (eac, match = \"\") =>\n                eac | match.toLowerCase().replace(\" \", \"\").includes(word),\n              false\n            ),\n          false\n        );\n    if ((search && check) || !search || search.length == 0) {\n      structured[team] = {\n        ...(structured[team] || []),\n        injuries: player\n          ? [...(structured[team]?.injuries || []), row]\n          : structured[team]?.injuries,\n      };\n    }\n  }\n  for (var team in structured) {\n    structured[team] = {\n      ...structured[team],\n      ...get_team_data(team),\n    };\n  }\n  console.log({ structured });\n  return structured;\n};\n\nconst EachTeamInjuries = ({ team_ob }) => {\n  const { teamName, teamImg, injuries } = team_ob;\n  return (\n    <>\n      <div className=\"card\">\n        <div className=\"card-content resp-card-content\">\n          <div className=\"row-flex flex-start\">\n            <LargeLogo image={teamImg} />\n            <h5 className=\"bold center\">{teamName}</h5>\n          </div>\n          <div className=\"spacing-10px\"></div>\n          {injuries && injuries.length != 0 ? (\n            <>\n              <div className=\"hide-on-small-only\">\n                <table>\n                  <tbody>\n                    <tr>\n                      <th>Player</th>\n                      <th>Pos/Imp</th>\n                      <th>Updated</th>\n                      <th>Injury</th>\n                      <th>Injury Status</th>\n                    </tr>\n                    {injuries?.map(\n                      ({\n                        player,\n                        position,\n                        updated,\n                        injury,\n                        injurystatus,\n                        positionno,\n                      }) => (\n                        <>\n                          <tr>\n                            <th>{player}</th>\n                            <td>\n                              {position}/{positionno}\n                            </td>\n                            <td>{updated}</td>\n                            <td>{injury}</td>\n                            <td>{injurystatus}</td>\n                          </tr>\n                        </>\n                      )\n                    )}\n                  </tbody>\n                </table>\n              </div>\n              <div className=\"hide-on-med-and-up\">\n                <table className=\"small-table\">\n                  <tbody>\n                    <tr>\n                      <th>Player</th>\n                      <th>Pos/Imp</th>\n                      <th>Updated</th>\n                      <th>Injury</th>\n                    </tr>\n                    {injuries?.map(\n                      ({\n                        player,\n                        position,\n                        updated,\n                        injury,\n                        injurystatus,\n                        positionno,\n                      }) => (\n                        <>\n                          <tr>\n                            <th>{player}</th>\n                            <td>\n                              {position}/{positionno}\n                            </td>\n                            <td>{updated}</td>\n                            <td>{injury}</td>\n                          </tr>\n                          <tr>\n                            <td colSpan=\"4\">\n                              <span className=\"head\">Status: </span>\n                              {injurystatus}\n                            </td>\n                          </tr>\n                        </>\n                      )\n                    )}\n                  </tbody>\n                </table>\n              </div>\n            </>\n          ) : (\n            <h6 className=\"center head\">No Injuries</h6>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst InjuriesJSX = (props) => {\n  // console.log('injuries jsx props=>', props);\n  const { api_data } = props;\n  const raw = api_data.feed.entry;\n  // console.log('injuries jsx raw=>', raw);\n\n  const [search, set_search] = useState(\"\");\n\n  const structured = structure_injuries_raw_data({ raw, search });\n  // console.log('injuries jsx strucured=>', structured);\n\n  return (\n    <div className=\"\">\n      <div className=\"center\">\n        <input\n          onChange={(e) => {\n            set_search(e.target.value);\n          }}\n          type=\"text\"\n          value={search}\n          placeholder=\"Search\"\n        />\n      </div>\n      {/* <p>{search}</p> */}\n      {structured && Object.keys(structured).length > 0 ? (\n        Object.keys(structured).map((team) => (\n          <>\n            <EachTeamInjuries {...{ team_ob: structured[team] }} />\n            <hr />\n          </>\n        ))\n      ) : (\n        <div className=\"card\">\n          <div className=\"card-content\">\n            <h5 className=\"center\">Nothing Found</h5>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction InjuriesPage() {\n  // console.log('injury page')\n  return (\n    <div>\n      <h5 className=\"center\">NBA Injuries</h5>\n      <GetFromAPI api={get_sheet_url({ sheet_id, sheet_no })}>\n        <InjuriesJSX />\n      </GetFromAPI>\n    </div>\n  );\n}\n\nexport default InjuriesPage;\n","import { functionsIn } from 'lodash';\nimport React, { useState } from 'react'\nimport GetFromAPI from '../components/GetFromAPI'\nimport LargeLogo from '../components/LargeLogo';\nimport SmallLogo from '../components/SmallLogo';\nimport { get_sheet_url, get_team_data } from '../utils/utils'\n\nconst sheet_id = \"1cUcZSRXi5ksKsHqTnQGTtWkhflNbxUpTTwaPmLv-cmk\";\nconst sheet_no = \"8\";\n\nconst key_mapping_powerrankings = [\n  {\n    key_head: \"Team\",\n    key_init: \"gsx$team\",\n    key_final: \"team\",\n  },\n  {\n    key_head: \"Ranking\",\n    key_init: \"gsx$ranking\",\n    key_final: \"ranking\",\n  },\n]\n\nconst structure_powerrankings_raw_data = ({ raw, search }) => {\n  var structured = {}, stru_ar = [];\n\n  for (var row of raw) {\n    row = key_mapping_powerrankings.reduce((acc, { key_init, key_final, key_head }) => ({ ...acc, [key_final]: row[key_init]?.$t }), {})\n    stru_ar.push(row);\n  }\n\n  // console.log(stru_ar);\n\n  for (var row of stru_ar) {\n    var { player, team, ranking } = row;\n    var search_ar = [team, get_team_data(team).teamName, ranking];\n    \n    var check = search && search.trim().toLowerCase().split(' ').reduce((acc, word) => (acc | search_ar.reduce((eac, match = '') => eac | match.toLowerCase().replace(' ', '').includes(word), false)), false)\n    if ((search && check) || (!search || search.length == 0)) {\n        structured[team] = {ranking}\n    }\n  }\n\n  for (var team in structured) {\n    structured[team] = {\n      ...structured[team],\n      ...get_team_data(team)\n    }\n  }\n  // console.log({ structured });\n  return structured\n}\n\nconst EachTeamPowerRanking = ({ team_ob }) => {\n  const { teamName, teamImg, ranking } = team_ob;\n  return (\n    <tr>\n      <td><div className=\"row-flex justify-flex-start\"><SmallLogo image={teamImg} /> <span>{teamName}</span></div></td>\n      <td>{ranking}</td>\n    </tr>\n  )\n}\n\nconst PowerRankingsJSX = (props) => {\n  // console.log('powerrankings jsx props=>', props);\n  const { api_data } = props;\n  const raw = api_data.feed.entry;\n  // console.log('powerrankings jsx raw=>', raw);\n\n  const [search, set_search] = useState('');\n\n  // const structured = {};\n  const structured = structure_powerrankings_raw_data({ raw, search });\n  console.log('powerrankings jsx strucured=>', structured);\n\n\n  return (\n    <div className=\"\">\n      <div className=\"center\">\n        <input onChange={(e) => { set_search(e.target.value) }} type=\"text\" value={search} placeholder=\"Search\" />\n      </div>\n      {\n        (structured && Object.keys(structured).length>0)?(\n          <table>\n          <tbody>\n            <tr>\n              <th>Team</th>\n              <th>Rankings</th>\n            </tr>\n            {Object.keys(structured).map(team =>\n              <EachTeamPowerRanking {...{ team_ob: structured[team] }} />\n            )}\n          </tbody>\n        </table>\n        ):(\n          <div className=\"card\">\n            <div className=\"card-content\">\n              <h5 className=\"center\">Nothing Found</h5>\n            </div>\n          </div>\n        )\n      }\n    </div>\n  )\n}\n\nfunction PowerRankingsPage() {\n  // console.log('injury page')\n  return (\n    <div>\n      <h5 className=\"center\">NBA Power Rankings</h5>\n      <GetFromAPI\n        // api={\"https://spreadsheets.google.com/feeds/list/1cUcZSRXi5ksKsHqTnQGTtWkhflNbxUpTTwaPmLv-cmk/8/public/values?alt=json\"}\n        api={get_sheet_url({ sheet_id, sheet_no })}\n      >\n        <PowerRankingsJSX />\n      </GetFromAPI>\n    </div>\n  )\n}\n\nexport default PowerRankingsPage\n","import React from \"react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { Route, Switch } from \"react-router\";\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport Layout from \"./components/Layout\";\nimport GamePage from \"./views/GamePage\";\nimport InjuriesPage from \"./views/InjuriesPage\";\nimport PowerRankingsPage from \"./views/PowerRankingsPage\";\nimport TeamPage from \"./views/TeamPage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\">\n            <Layout></Layout>\n          </Route>\n          <Route exact path=\"/injuries\">\n            <Layout>\n              <InjuriesPage />\n            </Layout>\n          </Route>\n          <Route exact path=\"/powerrankings\">\n            <Layout>\n              <PowerRankingsPage />\n            </Layout>\n          </Route>\n          {/* <Route exact path=\"/team/:teamid\">\n            <TeamPage />\n          </Route>\n          <Route exact path=\"/game/:gameid\">\n            <GamePage />\n          </Route> */}\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state)=>{\n  // console.log('state=>', state);\n  return {}\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n  return {}\n}\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps)\n)(App);\n","import { structure_matchup_data } from \"../../components/stats_cards_components/basketball-nba-tabs/MatchTab\";\nimport { structure_injuries_data } from \"../../components/stats_cards_components/basketball-nba-tabs/InjuriesTab\";\nimport { structure_odds_data } from \"../../components/stats_cards_components/basketball-nba-tabs/OddsTab\";\nimport { structure_trends_data } from \"../../components/stats_cards_components/basketball-nba-tabs/TrendsTab\";\nimport { structure_streaks_data } from \"../../components/stats_cards_components/basketball-nba-tabs/StreaksTab\";\n\nconst initialState = {\n  basketball: {\n    nba: {\n      status: {\n        matchup: \"not_loaded\",\n        injuries: \"not_loaded\",\n        odds: \"not_loaded\",\n        trends: \"not_loaded\",\n        streaks: \"not_loaded\",\n      },\n      configs: {\n        matchup: {\n          apis: [\n            // match_api,\n            \"https://spreadsheets.google.com/feeds/list/1cUcZSRXi5ksKsHqTnQGTtWkhflNbxUpTTwaPmLv-cmk/1/public/values?alt=json\",\n            // sag_api\n            \"https://spreadsheets.google.com/feeds/list/1cUcZSRXi5ksKsHqTnQGTtWkhflNbxUpTTwaPmLv-cmk/4/public/values?alt=json\",\n          ],\n          structure_data: structure_matchup_data,\n        },\n        injuries: {\n          apis: [\n            \"https://spreadsheets.google.com/feeds/list/1cUcZSRXi5ksKsHqTnQGTtWkhflNbxUpTTwaPmLv-cmk/7/public/values?alt=json\",\n          ],\n          structure_data: structure_injuries_data,\n        },\n        odds: {\n          apis: [\n            \"https://spreadsheets.google.com/feeds/list/1cUcZSRXi5ksKsHqTnQGTtWkhflNbxUpTTwaPmLv-cmk/3/public/values?alt=json\",\n          ],\n          structure_data: structure_odds_data,\n        },\n        trends: {\n          apis: [\n            \"https://spreadsheets.google.com/feeds/list/1cUcZSRXi5ksKsHqTnQGTtWkhflNbxUpTTwaPmLv-cmk/5/public/values?alt=json\",\n          ],\n          structure_data: structure_trends_data,\n        },\n        streaks: {\n          apis: [\n            \"https://spreadsheets.google.com/feeds/list/1cUcZSRXi5ksKsHqTnQGTtWkhflNbxUpTTwaPmLv-cmk/9/public/values?alt=json\",\n          ],\n          structure_data: structure_streaks_data,\n        },\n      },\n    },\n  },\n};\n\nexport const teamStatsReducer = (state = initialState, action) => {\n  // console.log(action.type);\n  switch (action.type) {\n    case \"SET_STATUS_AT_KEY\":\n      return {\n        ...state,\n        [action.category]: {\n          ...state[action.category],\n          [action.subcategory]: {\n            ...state[action.category][action.subcategory],\n            status: {\n              ...state[action.category][action.subcategory].status,\n              [action.status_key]: action.status_update,\n            },\n          },\n        },\n      };\n    case \"SET_STATS_AT_KEY\":\n      return {\n        ...state,\n        [action.category]: {\n          ...state[action.category],\n          [action.subcategory]: {\n            ...state[action.category][action.subcategory],\n            stats: {\n              ...state[action.category][action.subcategory].stats,\n              [action.stat_key]: action.stat_structure,\n            },\n          },\n        },\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\"\nimport { teamStatsReducer } from \"./teamStatsReducer\"\n\nconst rootReducer = combineReducers({\n  teamStats: teamStatsReducer,\n})\n\nexport default rootReducer","import React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nclass ScrollToTop extends React.Component {\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location) {\n      window.scrollTo(0, 0)\n    }\n  }\n\n  render() {\n    return this.props.children\n  }\n}\n\nexport default withRouter(ScrollToTop)","//importing defaults\n//----------------------------------------------------------\nimport React, { Children } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\n//importing 'redux': Redux Store\n//createStore: create our redux store\n//applyMiddleware: extend Redux with custom functionality\nimport { createStore, applyMiddleware, compose } from 'redux';\n \n//importing 'react-redux': binding layer between the store and the dom\n//Provider: makes our store available to be used in our components\nimport { Provider, useSelector } from \"react-redux\";\n// import { Provider } from \"react-redux\";\n//----------------------------------------------------------\n\n\n//Reducers: handles the store opertations and data mutations\n//import rootReducer \nimport  rootReducer from './store/reducers/rootReducer';\n\n//import thunk\n//thunk: is a middleware that allows us to return a function instead of an action-creator\n//these asynchronous funcitons send a call do the processing and then dispatch a synchronous action \nimport thunk from 'redux-thunk';\nimport { BrowserRouter } from 'react-router-dom';\nimport ScrollToTop from './components/ScrollToTop';\n\n\n//firebase\n//----------------------------------------------------------\n//importing Firebase \n\n\n//importing react-redux-firebase\n//ReactReduxFirebaseProvider: lets rrfProps(store content from firebase) be available to our redux store\n//getFirebase: used to manipulate data in firebase\n//isLoaded: hepler funciton, detects if data from redux state has been loaded or not\n// import { ReactReduxFirebaseProvider, getFirebase, isLoaded, firebaseConnect  } from \"react-redux-firebase\";\n\n//importing redux-firestore\n//createFirestoreInstance: in v3.0.0 version this is introduced that is passed in rrfProps\n//getFirestore: used to manipulate data in firestore\n//reduxFirestore: v2.0.0 way to firebase-store-enhancer\n// import { createFirestoreInstance, getFirestore, reduxFirestore } from 'redux-firestore'\n\n// import firebase from \"./config/FirebaseConfig\";\n// import LoadingFullScreen from './components/LoadingFullScreen';\n//----------------------------------------------------------\n\n//store\n//----------------------------------------------------------\n//create store\n//createStore( reducer, store-enhancer ) \n//[OR]  createStore( reducer, compose(...multiple-store-enhancers) ) \n//compose: use to apply multiple store enhancer. (programmatic utility)\n//thunk.withExtraArgument(object of store-enhacer): adds these encapsulated  store-enhancers as an extra-argument to the reducer\n//reduxFirestore(firebase): adds store-enhancer of Firestore \n\nexport const store = createStore(\n  rootReducer, \n  compose(\n    applyMiddleware(thunk),\n    // reduxFirestore(firebase)\n  )\n);\n\n//react-redux-firebase-configuration of store\n// const rrfConfig = {\n//   userProfile: 'users',\n//   useFirestoreForProfile: true\n// }\n//react-redux-firebase-props the actual contents of the store from firebase\n// const rrfProps = {\n//   firebase,\n//   config:   rrfConfig,\n//   dispatch: store.dispatch,\n//   createFirestoreInstance\n// }\n//----------------------------------------------------------\n\n//wait to load\n//----------------------------------------------------------\n// const AuthIsLoaded = ( {children} )=>{\n//   const auth = useSelector( state=>state.firebase.auth );\n//   if(!isLoaded(auth)) return (<LoadingFullScreen /> );\n//   return children;\n// }\n//----------------------------------------------------------\n\n//we are rendering our web app accordingly to the dom\n//----------------------------------------------------------\nReactDOM.render(\n  \n  <Provider store={store}>\n    {/* <ReactReduxFirebaseProvider {...rrfProps}> */}\n      {/* <AuthIsLoaded> */}\n      <BrowserRouter>\n        <ScrollToTop>\n          <App />\n        </ScrollToTop>\n      </BrowserRouter>\n      {/* </AuthIsLoaded> */}\n    {/* </ReactReduxFirebaseProvider> */}\n  </Provider>\n\n  ,document.getElementById('root')\n);\n//----------------------------------------------------------\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register();"],"sourceRoot":""}