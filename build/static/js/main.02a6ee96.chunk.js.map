{"version":3,"sources":["static/bettorsight-logo.svg","components/Layout.js","components/GetFromAPI.js","components/LargeLogo.js","components/SmallLogo.js","utils/utils.js","views/InjuriesPage.js","App.js","reportWebVitals.js","index.js"],"names":["Layout","props","className","src","bettorsightLogo","alt","target","href","children","GetFromAPI","api","useState","api_data","set_api_data","done_once","set_done_once","fetch_complete","set_fetch_complete","useEffect","console","log","fetch","then","resp","json","data","catch","err","React","cloneElement","LargeLogo","image","bgColor","style","backgroundColor","SmallLogo","get_team_data","team","teamDataJSON","get_sheet_url","sheet_id","sheet_no","injuries_key_mapping","key_head","key_init","key_final","EachTeamInjuries","team_ob","teamName","teamImg","injuries","length","slice","map","inj","InjuriesJSX","raw","feed","entry","search","set_search","structured","filter","row","content","$t","replace","toLowerCase","includes","reduce","acc","structure_injuries_raw_data","onChange","e","value","type","placeholder","Object","keys","InjuriesPage","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02a6ee96.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bettorsight-logo.d52d7cc2.svg\";","import React from 'react'\nimport bettorsightLogo from \"../static/bettorsight-logo.svg\";\n\nfunction Layout(props) {\n  return (\n    <div className=\"container\">\n      <div className=\"logo-continer\">\n        <img src={bettorsightLogo} alt=\"\" />\n      </div>\n      <div className=\"rankings-container\">\n        <div className=\"row\">\n          <div className=\"col s12\">\n            <div className=\"side-card top-side-card\">\n              <h5 className=\"center\">BEST NBA ODDS</h5>\n              <div className=\"center\">\n                <a target=\"_blank\" href=\"https://jgexchange.com/bet.html/\">\n                  <div className=\"btn black-btn\">click here</div>\n                </a>\n              </div>\n            </div>\n          </div>\n          <div className=\"col s12 m10 offset-m1 l8 offset-l2\">\n            {props.children}\n          </div>\n          <div className=\"col s12 m10 offset-m1 l2 side-card side-side-card\">\n            <h5 className=\"center\">BEST NBA ODDS</h5>\n            <div className=\"center\">\n              <div className=\"btn black-btn\">click here</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Layout\n","import React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"react-query\";\n\nfunction GetFromAPI(props) {\n  const { api } = props;\n\n  const [api_data, set_api_data] = useState(null);\n  const [done_once, set_done_once] = useState(false);\n  const [fetch_complete, set_fetch_complete] = useState(false);\n\n  const init_fetch = () => {\n    fetch(api)\n      .then(resp => resp.json())\n      .then(data => { console.log('load success'); set_api_data(data); set_fetch_complete(true) })\n      .catch((err) => { set_fetch_complete(true) })\n  }\n\n  useEffect(() => {\n    if (done_once) return;\n    console.log('fetching api', api);\n    init_fetch();\n    set_done_once(true);\n  }, [done_once])\n\n\n  return (\n    <>\n      {fetch_complete && React.cloneElement(props.children, {api_data}) }\n      {!fetch_complete && (\n        <h5 className=\"center\">Loading..</h5>\n      )}\n    </>\n  );\n}\n\nexport default GetFromAPI;\n","import React from 'react'\n\nfunction LargeLogo(props) {\n    const {image, bgColor= 'transparent'} = props\n    return (\n        <div className=\"large-logo-container\" style={{\n            backgroundColor: bgColor\n         }}>\n            <img src={image} />\n        </div>\n    )\n}\n\nexport default LargeLogo\n","import React from 'react'\n\nfunction SmallLogo(props) {\n    const {image} = props\n    return (\n        <div className=\"small-logo-container\">\n            <img src={image} />\n        </div>\n    )\n}\n\nexport default SmallLogo\n","import teamDataJSON from \"../static/teamData.json\";\n\nconst fetch_data = (url) => {\n    return new Promise((resolve, reject) => {\n        return fetch(url)\n            .then((resp) => resp.json())\n            .then((data) => resolve(data));\n    });\n};\n\nexport const get_team_data = (team)=>{\n    return teamDataJSON[team];\n}\n\nexport const get_sheet_url = ({ sheet_id, sheet_no }) =>\n    `https://spreadsheets.google.com/feeds/list/${sheet_id}/${sheet_no}/public/values?alt=json`;","import { functionsIn } from 'lodash';\nimport React, { useState } from 'react'\nimport GetFromAPI from '../components/GetFromAPI'\nimport LargeLogo from '../components/LargeLogo';\nimport SmallLogo from '../components/SmallLogo';\nimport { get_sheet_url, get_team_data } from '../utils/utils'\n\nconst sheet_id = \"1cUcZSRXi5ksKsHqTnQGTtWkhflNbxUpTTwaPmLv-cmk\";\nconst sheet_no = \"7\";\n\nconst injuries_key_mapping = [\n  {\n    key_head: \"Team\",\n    key_init: \"gsx$teamid\",\n    key_final: \"team\",\n  },\n  {\n    key_head: \"Team\",\n    key_init: \"gsx$team\",\n    key_final: \"teams\",\n  },\n  {\n    key_head: \"Player\",\n    key_init: \"gsx$player\",\n    key_final: \"player\",\n  },\n  {\n    key_head: \"Position\",\n    key_init: \"gsx$position\",\n    key_final: \"position\",\n  },\n  {\n    key_head: \"Updated\",\n    key_init: \"gsx$updated\",\n    key_final: \"updated\",\n  },\n  {\n    key_head: \"Injury\",\n    key_init: \"gsx$injury\",\n    key_final: \"injury\",\n  },\n  {\n    key_head: \"Injury Status\",\n    key_init: \"gsx$injurystatus\",\n    key_final: \"injurystatus\",\n  },\n]\n\nconst structure_injuries_raw_data = ({ raw, search }) => {\n  var structured = {};\n  if (search?.length > 0) {\n    const filter = raw.filter(row =>\n      row.content.$t\n        .replace(' ', '')\n        .replace('player', '')\n        .replace('pos', '')\n        .replace('date', '')\n        .replace('injury', '')\n        .replace('status', '')\n        .replace('expectedreturn', '')\n        .replace('comments', '')\n        .replace(':', '')\n        .toLowerCase()\n      .includes(search.toLowerCase()));\n    raw = filter;\n  }\n\n\n  for (var row of raw) {\n    row = injuries_key_mapping.reduce((acc, { key_init, key_final, key_head }) => ({ ...acc, [key_final]: row[key_init]?.$t }), {})\n\n    var team = row['team']\n    structured[team] = {\n      ...(structured[team] || []),\n      injuries: [...(structured[team]?.injuries || []), row]\n    }\n  }\n  for (var team in structured) {\n    structured[team] = {\n      ...structured[team],\n      ...get_team_data(team)\n    }\n  }\n  return structured\n}\n\nconst EachTeamInjuries = ({ team_ob }) => {\n  const { teamName, teamImg, injuries } = team_ob;\n  return (\n    <>\n      <div className=\"card\">\n        <div className=\"card-content\">\n          <div className=\"row-flex flex-start\">\n            <LargeLogo image={teamImg} />\n            <h5 className=\"bold center\">{teamName}</h5>\n          </div>\n          <div className=\"spacing-10px\"></div>\n\n          {injuries && injuries.length != 0 ? (\n            <>\n              <table>\n                <tbody>\n                  <tr>\n                    {injuries_key_mapping.slice(2).map(({ key_head }) => (\n                      <th>{key_head}</th>\n                    ))}\n                  </tr>\n                  {injuries?.map((inj) => (\n                    <>\n                      <tr>\n                        <th>{inj['player']}</th>\n                        {injuries_key_mapping.slice(3).map(({ key_final }) => (\n                          <td>{inj[key_final]}</td>\n                        ))}\n                      </tr>\n                    </>\n                  ))}\n                </tbody>\n              </table>\n            </>\n          ) : (\n              <h6 className=\"center head\">No Injuries</h6>\n            )}\n        </div>\n      </div>\n    </>\n  )\n}\n\nconst InjuriesJSX = (props) => {\n  // console.log('injuries jsx props=>', props);\n  const { api_data } = props;\n  const raw = api_data.feed.entry;\n  console.log('injuries jsx raw=>', raw);\n\n  const [search, set_search] = useState('');\n\n  const structured = structure_injuries_raw_data({ raw, search });\n  console.log('injuries jsx strucured=>', structured);\n\n\n  return (\n    <div className=\"\">\n      <h5 className=\"center\">Injuries JSX</h5>\n      <div className=\"center\">\n        <input onChange={(e) => { set_search(e.target.value) }} type=\"text\" value={search} placeholder=\"Search\" />\n      </div>\n      {Object.keys(structured).map(team =>\n        <>\n          <EachTeamInjuries {...{ team_ob: structured[team] }} />\n          <hr />\n        </>\n      )}\n    </div>\n  )\n}\n\nfunction InjuriesPage() {\n  console.log('injury page')\n  return (\n    <div>\n      <h1 className=\"center\">NBA Injuries</h1>\n      <GetFromAPI api={get_sheet_url({ sheet_id, sheet_no })} >\n        <InjuriesJSX />\n      </GetFromAPI>\n    </div>\n  )\n}\n\nexport default InjuriesPage\n","import React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { BrowserRouter } from 'react-router-dom';\nimport Layout from './components/Layout';\nimport InjuriesPage from './views/InjuriesPage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\">\n            <Layout>\n              <InjuriesPage />\n            </Layout>\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}