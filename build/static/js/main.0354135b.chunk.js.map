{"version":3,"sources":["static/bettorsight-logo.svg","components/Layout.js","components/GetFromAPI.js","components/LargeLogo.js","components/SmallLogo.js","utils/utils.js","views/InjuriesPage.js","views/PowerRankingsPage.js","App.js","reportWebVitals.js","index.js"],"names":["Layout","props","className","src","bettorsightLogo","alt","to","target","href","children","GetFromAPI","api","useState","api_data","set_api_data","done_once","set_done_once","fetch_complete","set_fetch_complete","useEffect","fetch","then","resp","json","data","catch","err","React","cloneElement","LargeLogo","image","bgColor","style","backgroundColor","SmallLogo","get_team_data","team","teamDataJSON","get_sheet_url","sheet_id","sheet_no","key_mapping_injuries","key_head","key_init","key_final","EachTeamInjuries","team_ob","teamName","teamImg","injuries","length","slice","map","inj","colSpan","InjuriesJSX","raw","feed","entry","search","set_search","structured","stru_ar","row","reduce","acc","$t","push","player","position","updated","injury","injurystatus","search_ar","check","trim","toLowerCase","split","word","eac","replace","includes","structure_injuries_raw_data","onChange","e","value","type","placeholder","Object","keys","InjuriesPage","key_mapping_powerrankings","EachTeamPowerRanking","ranking","PowerRankingsJSX","structure_powerrankings_raw_data","PowerRankingsPage","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0354135b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bettorsight-logo.d52d7cc2.svg\";","import React from 'react'\nimport { NavLink } from 'react-router-dom';\nimport bettorsightLogo from \"../static/bettorsight-logo.svg\";\n\nfunction Layout(props) {\n  return (\n    <div className=\"container\">\n      <div className=\"logo-continer\">\n        <img src={bettorsightLogo} alt=\"\" />\n      </div>\n      <div className=\"row-flex \">\n        <NavLink to=\"/powerrankings\"><div className=\"btn black-btn m5\">Power Rankings</div></NavLink>\n        <NavLink to=\"/injuries\"><div className=\"btn black-btn m5\">Injuries</div></NavLink>\n        {/* <NavLink to=\"/trends\"><div className=\"btn black-btn m5\">Trends</div></NavLink> */}\n      </div>\n      <div className=\"rankings-container\">\n        <div className=\"row\">\n          <div className=\"col s12\">\n            <div className=\"side-card top-side-card\">\n              <h5 className=\"center\">BEST NBA ODDS</h5>\n              <div className=\"center\">\n                <a target=\"_blank\" href=\"https://jgexchange.com/bet.html/\">\n                  <div className=\"btn black-btn\">click here</div>\n                </a>\n              </div>\n            </div>\n          </div>\n          <div className=\"col s12 m10 offset-m1 l8 offset-l2\">\n            {props.children}\n          </div>\n          <div className=\"col s12 m10 offset-m1 l2 side-card side-side-card\">\n            <h5 className=\"center\">BEST NBA ODDS</h5>\n            <div className=\"center\">\n              <div className=\"btn black-btn\">click here</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Layout\n","import React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"react-query\";\n\nfunction GetFromAPI(props) {\n  const { api } = props;\n\n  const [api_data, set_api_data] = useState(null);\n  const [done_once, set_done_once] = useState(false);\n  const [fetch_complete, set_fetch_complete] = useState(false);\n\n  const init_fetch = () => {\n    fetch(api)\n      .then(resp => resp.json())\n      .then(data => { set_api_data(data); set_fetch_complete(true) })\n      .catch((err) => { set_fetch_complete(true) })\n  }\n\n  useEffect(() => {\n    if (done_once) return;\n    init_fetch();\n    set_done_once(true);\n  }, [done_once])\n\n\n  return (\n    <>\n      {fetch_complete && React.cloneElement(props.children, {api_data}) }\n      {!fetch_complete && (\n        <h5 className=\"center\">Loading..</h5>\n      )}\n    </>\n  );\n}\n\nexport default GetFromAPI;\n","import React from 'react'\n\nfunction LargeLogo(props) {\n    const {image, bgColor= 'transparent'} = props\n    return (\n        <div className=\"large-logo-container\" style={{\n            backgroundColor: bgColor\n         }}>\n            <img src={image} />\n        </div>\n    )\n}\n\nexport default LargeLogo\n","import React from 'react'\n\nfunction SmallLogo(props) {\n    const {image} = props\n    return (\n        <div className=\"small-logo-container\">\n            <img src={image} />\n        </div>\n    )\n}\n\nexport default SmallLogo\n","import teamDataJSON from \"../static/teamData.json\";\n\nconst fetch_data = (url) => {\n    return new Promise((resolve, reject) => {\n        return fetch(url)\n            .then((resp) => resp.json())\n            .then((data) => resolve(data));\n    });\n};\n\nexport const get_team_data = (team)=>{\n    return teamDataJSON[team];\n}\n\nexport const get_sheet_url = ({ sheet_id, sheet_no }) =>\n    `https://spreadsheets.google.com/feeds/list/${sheet_id}/${sheet_no}/public/values?alt=json`;","import { functionsIn } from 'lodash';\nimport React, { useState } from 'react'\nimport GetFromAPI from '../components/GetFromAPI'\nimport LargeLogo from '../components/LargeLogo';\nimport SmallLogo from '../components/SmallLogo';\nimport { get_sheet_url, get_team_data } from '../utils/utils'\n\nconst sheet_id = \"1cUcZSRXi5ksKsHqTnQGTtWkhflNbxUpTTwaPmLv-cmk\";\nconst sheet_no = \"7\";\n\nconst key_mapping_injuries = [\n  {\n    key_head: \"Team\",\n    key_init: \"gsx$teamid\",\n    key_final: \"team\",\n  },\n  {\n    key_head: \"Team\",\n    key_init: \"gsx$team\",\n    key_final: \"teams\",\n  },\n  {\n    key_head: \"Player\",\n    key_init: \"gsx$player\",\n    key_final: \"player\",\n  },\n  {\n    key_head: \"Position\",\n    key_init: \"gsx$position\",\n    key_final: \"position\",\n  },\n  {\n    key_head: \"Updated\",\n    key_init: \"gsx$updated\",\n    key_final: \"updated\",\n  },\n  {\n    key_head: \"Injury\",\n    key_init: \"gsx$injury\",\n    key_final: \"injury\",\n  },\n  {\n    key_head: \"Injury Status\",\n    key_init: \"gsx$injurystatus\",\n    key_final: \"injurystatus\",\n  },\n]\n\nconst structure_injuries_raw_data = ({ raw, search }) => {\n  var structured = {}, stru_ar = [];\n\n  for (var row of raw) {\n    row = key_mapping_injuries.reduce((acc, { key_init, key_final, key_head }) => ({ ...acc, [key_final]: row[key_init]?.$t }), {})\n    stru_ar.push(row);\n  }\n\n  // console.log(stru_ar);\n\n  for (var row of stru_ar) {\n    var { player, team, position, updated, injury, injurystatus } = row;\n    var search_ar = [player, team, get_team_data(team).teamName, position, updated, injury, injurystatus];\n    var check = search && search.trim().toLowerCase().split(' ').reduce((acc, word) => (acc | search_ar.reduce((eac, match = '') => eac | match.toLowerCase().replace(' ', '').includes(word), false)), false)\n    if ((search && check) || (!search || search.length == 0)) {\n      structured[team] = {\n        ...(structured[team] || []),\n        injuries: [...(structured[team]?.injuries || []), row]\n      }\n    }\n  }\n\n  for (var team in structured) {\n    structured[team] = {\n      ...structured[team],\n      ...get_team_data(team)\n    }\n  }\n  // console.log({ structured });\n  return structured\n}\n\nconst EachTeamInjuries = ({ team_ob }) => {\n  const { teamName, teamImg, injuries } = team_ob;\n  return (\n    <>\n      <div className=\"card\">\n        <div className=\"card-content\">\n          <div className=\"row-flex flex-start\">\n            <LargeLogo image={teamImg} />\n            <h5 className=\"bold center\">{teamName}</h5>\n          </div>\n          <div className=\"spacing-10px\"></div>\n\n          {injuries && injuries.length != 0 ? (\n            <>\n              <div className=\"hide-on-small-only\">\n                <table>\n                  <tbody>\n                    <tr>\n                      {key_mapping_injuries.slice(2).map(({ key_head }) => (\n                        <th>{key_head}</th>\n                      ))}\n                    </tr>\n                    {injuries?.map((inj) => (\n                      <>\n                        <tr>\n                          <th>{inj['player']}</th>\n                          {key_mapping_injuries.slice(3).map(({ key_final }) => (\n                            <td>{inj[key_final]}</td>\n                          ))}\n                        </tr>\n                      </>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n              <div className=\"hide-on-med-and-up\">\n              <table>\n                  <tbody>\n                    <tr>\n                      {key_mapping_injuries.slice(2,6).map(({ key_head }) => (\n                        <th>{key_head}</th>\n                      ))}\n                    </tr>\n                    {injuries?.map((inj) => (\n                      <>\n                        <tr>\n                          <th>{inj['player']}</th>\n                          {key_mapping_injuries.slice(3,6).map(({ key_final }) => (\n                            <td>{inj[key_final]}</td>\n                          ))}\n                        </tr>\n                        <tr>\n                          <td colSpan=\"4\"><span className=\"head\">status: </span>{inj[key_mapping_injuries[6].key_final]}</td>\n                        </tr>\n                      </>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </>\n          ) : (\n              <h6 className=\"center head\">No Injuries</h6>\n            )}\n        </div>\n      </div>\n    </>\n  )\n}\n\nconst InjuriesJSX = (props) => {\n  // console.log('injuries jsx props=>', props);\n  const { api_data } = props;\n  const raw = api_data.feed.entry;\n  // console.log('injuries jsx raw=>', raw);\n\n  const [search, set_search] = useState('');\n\n  const structured = structure_injuries_raw_data({ raw, search });\n  // console.log('injuries jsx strucured=>', structured);\n\n\n  return (\n    <div className=\"\">\n      <div className=\"center\">\n        <input onChange={(e) => { set_search(e.target.value) }} type=\"text\" value={search} placeholder=\"Search\" />\n      </div>\n      {/* <p>{search}</p> */}\n      {(structured && Object.keys(structured).length > 0) ? (\n        Object.keys(structured).map(team =>\n          <>\n            <EachTeamInjuries {...{ team_ob: structured[team] }} />\n            <hr />\n          </>\n        )\n      ) : (\n          <div className=\"card\">\n            <div className=\"card-content\">\n              <h5 className=\"center\">Nothing Found</h5>\n            </div>\n          </div>\n        )}\n    </div>\n  )\n}\n\nfunction InjuriesPage() {\n  // console.log('injury page')\n  return (\n    <div>\n      <h5 className=\"center\">NBA Injuries</h5>\n      <GetFromAPI api={get_sheet_url({ sheet_id, sheet_no })} >\n        <InjuriesJSX />\n      </GetFromAPI>\n    </div>\n  )\n}\n\nexport default InjuriesPage\n","import { functionsIn } from 'lodash';\nimport React, { useState } from 'react'\nimport GetFromAPI from '../components/GetFromAPI'\nimport LargeLogo from '../components/LargeLogo';\nimport SmallLogo from '../components/SmallLogo';\nimport { get_sheet_url, get_team_data } from '../utils/utils'\n\nconst sheet_id = \"1cUcZSRXi5ksKsHqTnQGTtWkhflNbxUpTTwaPmLv-cmk\";\nconst sheet_no = \"8\";\n\nconst key_mapping_powerrankings = [\n  {\n    key_head: \"Team\",\n    key_init: \"gsx$team\",\n    key_final: \"team\",\n  },\n  {\n    key_head: \"Ranking\",\n    key_init: \"gsx$ranking\",\n    key_final: \"ranking\",\n  },\n]\n\nconst structure_powerrankings_raw_data = ({ raw, search }) => {\n  var structured = {}, stru_ar = [];\n\n  for (var row of raw) {\n    row = key_mapping_powerrankings.reduce((acc, { key_init, key_final, key_head }) => ({ ...acc, [key_final]: row[key_init]?.$t }), {})\n    stru_ar.push(row);\n  }\n\n  // console.log(stru_ar);\n\n  for (var row of stru_ar) {\n    var { player, team, ranking } = row;\n    var search_ar = [team, get_team_data(team).teamName, ranking];\n    \n    var check = search && search.trim().toLowerCase().split(' ').reduce((acc, word) => (acc | search_ar.reduce((eac, match = '') => eac | match.toLowerCase().replace(' ', '').includes(word), false)), false)\n    if ((search && check) || (!search || search.length == 0)) {\n        structured[team] = {ranking}\n    }\n  }\n\n  for (var team in structured) {\n    structured[team] = {\n      ...structured[team],\n      ...get_team_data(team)\n    }\n  }\n  // console.log({ structured });\n  return structured\n}\n\nconst EachTeamPowerRanking = ({ team_ob }) => {\n  const { teamName, teamImg, ranking } = team_ob;\n  return (\n    <tr>\n      <td><div className=\"col-flex align-flex-start\"><SmallLogo image={teamImg} /> <span>{teamName}</span></div></td>\n      <td>{ranking}</td>\n    </tr>\n  )\n}\n\nconst PowerRankingsJSX = (props) => {\n  // console.log('powerrankings jsx props=>', props);\n  const { api_data } = props;\n  const raw = api_data.feed.entry;\n  // console.log('powerrankings jsx raw=>', raw);\n\n  const [search, set_search] = useState('');\n\n  // const structured = {};\n  const structured = structure_powerrankings_raw_data({ raw, search });\n  // console.log('powerrankings jsx strucured=>', structured);\n\n\n  return (\n    <div className=\"\">\n      <div className=\"center\">\n        <input onChange={(e) => { set_search(e.target.value) }} type=\"text\" value={search} placeholder=\"Search\" />\n      </div>\n      {\n        (structured && Object.keys(structured).length>0)?(\n          <table>\n          <tbody>\n            <tr>\n              <th>Team</th>\n              <th>Rankings</th>\n            </tr>\n            {Object.keys(structured).map(team =>\n              <EachTeamPowerRanking {...{ team_ob: structured[team] }} />\n            )}\n          </tbody>\n        </table>\n        ):(\n          <div className=\"card\">\n            <div className=\"card-content\">\n              <h5 className=\"center\">Nothing Found</h5>\n            </div>\n          </div>\n        )\n      }\n    </div>\n  )\n}\n\nfunction PowerRankingsPage() {\n  // console.log('injury page')\n  return (\n    <div>\n      <h5 className=\"center\">NBA Power Rankings</h5>\n      <GetFromAPI api={get_sheet_url({ sheet_id, sheet_no })} >\n        <PowerRankingsJSX />\n      </GetFromAPI>\n    </div>\n  )\n}\n\nexport default PowerRankingsPage\n","import React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { BrowserRouter } from 'react-router-dom';\nimport Layout from './components/Layout';\nimport InjuriesPage from './views/InjuriesPage';\nimport PowerRankingsPage from './views/PowerRankingsPage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\">\n            <Layout>\n            </Layout>\n          </Route>\n          <Route exact path=\"/injuries\">\n            <Layout>\n              <InjuriesPage />\n            </Layout>\n          </Route>\n          <Route exact path=\"/powerrankings\">\n            <Layout>\n              <PowerRankingsPage />\n            </Layout>\n          </Route>\n          <Route exact path=\"/trends\">\n            <Layout>\n              \n            </Layout>\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}