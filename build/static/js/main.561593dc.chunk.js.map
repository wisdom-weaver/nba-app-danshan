{"version":3,"sources":["static/bettorsight-logo.svg","components/Layout.js","components/GetFromAPI.js","components/LargeLogo.js","components/SmallLogo.js","utils/utils.js","views/InjuriesPage.js","views/PowerRankingsPage.js","views/TeamPage.js","App.js","store/reducers/rootReducer.js","components/ScrollToTop.js","index.js"],"names":["Layout","props","className","src","bettorsightLogo","alt","to","target","href","children","GetFromAPI","api","useState","api_data","set_api_data","done_once","set_done_once","fetch_complete","set_fetch_complete","useEffect","fetch","then","resp","json","data","catch","err","React","cloneElement","LargeLogo","image","bgColor","style","backgroundColor","SmallLogo","get_team_data","team","teamDataJSON","get_sheet_url","sheet_id","sheet_no","key_mapping_injuries","key_head","key_init","key_final","structure_injuries_raw_data","raw","search","structured","stru_ar","row","reduce","acc","$t","push","Object","keys","map","player","position","updated","injury","injurystatus","search_ar","teamName","check","trim","toLowerCase","split","word","eac","match","replace","includes","length","injuries","console","log","EachTeamInjuries","team_ob","teamImg","positionno","colSpan","InjuriesJSX","feed","entry","set_search","onChange","e","value","type","placeholder","InjuriesPage","key_mapping_powerrankings","EachTeamPowerRanking","ranking","PowerRankingsJSX","structure_powerrankings_raw_data","PowerRankingsPage","TeamPage","teamid","useRouteMatch","params","teamData","App","exact","path","rootReducer","combineReducers","ScrollToTop","prevProps","this","location","window","scrollTo","Component","withRouter","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.561593dc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bettorsight-logo.d52d7cc2.svg\";","import React from 'react'\nimport { NavLink } from 'react-router-dom';\nimport bettorsightLogo from \"../static/bettorsight-logo.svg\";\n\nfunction Layout(props) {\n  return (\n    <div className=\"container\">\n      <div className=\"logo-continer\">\n        <img src={bettorsightLogo} alt=\"\" />\n      </div>\n      <div className=\"row-flex \">\n        <NavLink to=\"/powerrankings\"><div className=\"btn black-btn m5\">Power Rankings</div></NavLink>\n        <NavLink to=\"/injuries\"><div className=\"btn black-btn m5\">Injuries</div></NavLink>\n        {/* <NavLink to=\"/trends\"><div className=\"btn black-btn m5\">Trends</div></NavLink> */}\n      </div>\n      <div className=\"rankings-container\">\n        <div className=\"row\">\n          <div className=\"col s12\">\n            <div className=\"side-card top-side-card\">\n              <h5 className=\"center\">BEST NBA ODDS</h5>\n              <div className=\"center\">\n                <a target=\"_blank\" href=\"https://jgexchange.com/bet.html/\">\n                  <div className=\"btn black-btn\">click here</div>\n                </a>\n              </div>\n            </div>\n          </div>\n          <div className=\"col s12 m10 offset-m1 l8 offset-l2\">\n            {props.children}\n          </div>\n          <div className=\"col s12 m10 offset-m1 l2 side-card side-side-card\">\n            <h5 className=\"center\">BEST NBA ODDS</h5>\n            <div className=\"center\">\n              <div className=\"btn black-btn\">click here</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Layout\n","import React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"react-query\";\n\nfunction GetFromAPI(props) {\n  const { api } = props;\n\n  const [api_data, set_api_data] = useState(null);\n  const [done_once, set_done_once] = useState(false);\n  const [fetch_complete, set_fetch_complete] = useState(false);\n\n  const init_fetch = () => {\n    fetch(api)\n      .then(resp => resp.json())\n      .then(data => { set_api_data(data); set_fetch_complete(true) })\n      .catch((err) => { set_fetch_complete(true) })\n  }\n\n  useEffect(() => {\n    if (done_once) return;\n    init_fetch();\n    set_done_once(true);\n  }, [done_once])\n\n\n  return (\n    <>\n      {fetch_complete && React.cloneElement(props.children, {api_data}) }\n      {!fetch_complete && (\n        <h5 className=\"center\">Loading..</h5>\n      )}\n    </>\n  );\n}\n\nexport default GetFromAPI;\n","import React from 'react'\n\nfunction LargeLogo(props) {\n    const {image, bgColor= 'transparent'} = props\n    return (\n        <div className=\"large-logo-container\" style={{\n            backgroundColor: bgColor\n         }}>\n            <img src={image} />\n        </div>\n    )\n}\n\nexport default LargeLogo\n","import React from 'react'\n\nfunction SmallLogo(props) {\n    const {image} = props\n    return (\n        <div className=\"small-logo-container\">\n            <img src={image} />\n        </div>\n    )\n}\n\nexport default SmallLogo\n","import teamDataJSON from \"../static/teamData.json\";\n\nconst fetch_data = (url) => {\n    return new Promise((resolve, reject) => {\n        return fetch(url)\n            .then((resp) => resp.json())\n            .then((data) => resolve(data));\n    });\n};\n\nexport const get_team_data = (team)=>{\n    if (team == '76ers' || team == 'Seventysixers') return teamDataJSON['Seventysixers'] || {};\n    if (team == 'Blazers' || team == 'Trailblazers') return teamDataJSON['Trailblazers'] || {};\n    return teamDataJSON[team] || {};\n}\n\nexport const get_all_teams = ()=>{\n    return Object.keys(teamDataJSON);\n}\n\nexport const get_sheet_url = ({ sheet_id, sheet_no }) =>\n    `https://spreadsheets.google.com/feeds/list/${sheet_id}/${sheet_no}/public/values?alt=json`;","import { functionsIn } from \"lodash\";\nimport React, { useState } from \"react\";\nimport GetFromAPI from \"../components/GetFromAPI\";\nimport LargeLogo from \"../components/LargeLogo\";\nimport SmallLogo from \"../components/SmallLogo\";\nimport { get_all_teams, get_sheet_url, get_team_data } from \"../utils/utils\";\n\nconst sheet_id = \"1cUcZSRXi5ksKsHqTnQGTtWkhflNbxUpTTwaPmLv-cmk\";\nconst sheet_no = \"7\";\n\nconst key_mapping_injuries = [\n  {\n    key_head: \"Team\",\n    key_init: \"gsx$teamid\",\n    key_final: \"team\",\n  },\n  {\n    key_head: \"Team\",\n    key_init: \"gsx$team\",\n    key_final: \"teams\",\n  },\n  {\n    key_head: \"Player\",\n    key_init: \"gsx$player\",\n    key_final: \"player\",\n  },\n  {\n    key_head: \"Position\",\n    key_init: \"gsx$position\",\n    key_final: \"position\",\n  },\n  {\n    key_head: \"Updated\",\n    key_init: \"gsx$updated\",\n    key_final: \"updated\",\n  },\n  {\n    key_head: \"Injury\",\n    key_init: \"gsx$injury\",\n    key_final: \"injury\",\n  },\n  {\n    key_head: \"Injury Status\",\n    key_init: \"gsx$injurystatus\",\n    key_final: \"injurystatus\",\n  },\n  {\n    key_head: \"PositionNo\",\n    key_init: \"gsx$positionno\",\n    key_final: \"positionno\",\n  }\n];\n\nconst isEmpty = (search) => !search || search.length == 0;\nconst match_in_search = ({ search, match }) =>\n  search &&\n  match &&\n  search\n    .trim()\n    .toLowerCase()\n    .split(\" \")\n    .reduce(\n      (sac, word) =>\n        sac | match.trim().toLowerCase().replace(\" \", \"\").includes(word),\n      false\n    );\n\nconst structure_injuries_raw_data = ({ raw, search }) => {\n  var structured = {},\n    stru_ar = [];\n  for (var row of raw) {\n    row = key_mapping_injuries.reduce(\n      (acc, { key_init, key_final, key_head }) => ({\n        ...acc,\n        [key_final]: row[key_init]?.$t,\n      }),\n      {}\n    );\n    stru_ar.push(row);\n  }\n  get_all_teams().map((team) => {\n    stru_ar.push({ team });\n  });\n\n  for (var row of stru_ar) {\n    var { player, team, position, updated, injury, injurystatus } = row;\n    var search_ar = [\n      player,\n      team,\n      get_team_data(team).teamName,\n      position,\n      updated,\n      injury,\n      injurystatus,\n    ];\n    var check =\n      search &&\n      search\n        .trim()\n        .toLowerCase()\n        .split(\" \")\n        .reduce(\n          (acc, word) =>\n            acc |\n            search_ar.reduce(\n              (eac, match = \"\") =>\n                eac | match.toLowerCase().replace(\" \", \"\").includes(word),\n              false\n            ),\n          false\n        );\n    if ((search && check) || !search || search.length == 0) {\n      structured[team] = {\n        ...(structured[team] || []),\n        injuries: player\n          ? [...(structured[team]?.injuries || []), row]\n          : structured[team]?.injuries,\n      };\n    }\n  }\n  for (var team in structured) {\n    structured[team] = {\n      ...structured[team],\n      ...get_team_data(team),\n    };\n  }\n  console.log({ structured });\n  return structured;\n};\n\nconst EachTeamInjuries = ({ team_ob }) => {\n  const { teamName, teamImg, injuries } = team_ob;\n  return (\n    <>\n      <div className=\"card\">\n        <div className=\"card-content resp-card-content\">\n          <div className=\"row-flex flex-start\">\n            <LargeLogo image={teamImg} />\n            <h5 className=\"bold center\">{teamName}</h5>\n          </div>\n          <div className=\"spacing-10px\"></div>\n          {injuries && injuries.length != 0 ? (\n            <>\n              <div className=\"hide-on-small-only\">\n                <table>\n                  <tbody>\n                    <tr>\n                      <th>Player</th>\n                      <th>Position</th>\n                      <th>Updated</th>\n                      <th>Injury</th>\n                      <th>Injury Status</th>\n                    </tr>\n                    {injuries?.map(\n                      ({\n                        player,\n                        position,\n                        updated,\n                        injury,\n                        injurystatus,\n                        positionno,\n                      }) => (\n                        <>\n                          <tr>\n                            <th>{player}</th>\n                            <td>\n                              {position}/{positionno}\n                            </td>\n                            <td>{updated}</td>\n                            <td>{injury}</td>\n                            <td>{injurystatus}</td>\n                          </tr>\n                        </>\n                      )\n                    )}\n                  </tbody>\n                </table>\n              </div>\n              <div className=\"hide-on-med-and-up\">\n                <table className=\"small-table\">\n                  <tbody>\n                    <tr>\n                      <th>Player</th>\n                      <th>Position</th>\n                      <th>Updated</th>\n                      <th>Injury</th>\n                    </tr>\n                    {injuries?.map(\n                      ({\n                        player,\n                        position,\n                        updated,\n                        injury,\n                        injurystatus,\n                        positionno,\n                      }) => (\n                        <>\n                          <tr>\n                            <th>{player}</th>\n                            <td>\n                              {position}/{positionno}\n                            </td>\n                            <td>{updated}</td>\n                            <td>{injury}</td>\n                          </tr>\n                          <tr>\n                            <td colSpan=\"4\">\n                              <span className=\"head\">Status: </span>\n                              {injurystatus}\n                            </td>\n                          </tr>\n                        </>\n                      )\n                    )}\n                  </tbody>\n                </table>\n              </div>\n            </>\n          ) : (\n            <h6 className=\"center head\">No Injuries</h6>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst InjuriesJSX = (props) => {\n  // console.log('injuries jsx props=>', props);\n  const { api_data } = props;\n  const raw = api_data.feed.entry;\n  // console.log('injuries jsx raw=>', raw);\n\n  const [search, set_search] = useState(\"\");\n\n  const structured = structure_injuries_raw_data({ raw, search });\n  // console.log('injuries jsx strucured=>', structured);\n\n  return (\n    <div className=\"\">\n      <div className=\"center\">\n        <input\n          onChange={(e) => {\n            set_search(e.target.value);\n          }}\n          type=\"text\"\n          value={search}\n          placeholder=\"Search\"\n        />\n      </div>\n      {/* <p>{search}</p> */}\n      {structured && Object.keys(structured).length > 0 ? (\n        Object.keys(structured).map((team) => (\n          <>\n            <EachTeamInjuries {...{ team_ob: structured[team] }} />\n            <hr />\n          </>\n        ))\n      ) : (\n        <div className=\"card\">\n          <div className=\"card-content\">\n            <h5 className=\"center\">Nothing Found</h5>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction InjuriesPage() {\n  // console.log('injury page')\n  return (\n    <div>\n      <h5 className=\"center\">NBA Injuries</h5>\n      <GetFromAPI api={get_sheet_url({ sheet_id, sheet_no })}>\n        <InjuriesJSX />\n      </GetFromAPI>\n    </div>\n  );\n}\n\nexport default InjuriesPage;\n","import { functionsIn } from 'lodash';\nimport React, { useState } from 'react'\nimport GetFromAPI from '../components/GetFromAPI'\nimport LargeLogo from '../components/LargeLogo';\nimport SmallLogo from '../components/SmallLogo';\nimport { get_sheet_url, get_team_data } from '../utils/utils'\n\nconst sheet_id = \"1cUcZSRXi5ksKsHqTnQGTtWkhflNbxUpTTwaPmLv-cmk\";\nconst sheet_no = \"8\";\n\nconst key_mapping_powerrankings = [\n  {\n    key_head: \"Team\",\n    key_init: \"gsx$team\",\n    key_final: \"team\",\n  },\n  {\n    key_head: \"Ranking\",\n    key_init: \"gsx$ranking\",\n    key_final: \"ranking\",\n  },\n]\n\nconst structure_powerrankings_raw_data = ({ raw, search }) => {\n  var structured = {}, stru_ar = [];\n\n  for (var row of raw) {\n    row = key_mapping_powerrankings.reduce((acc, { key_init, key_final, key_head }) => ({ ...acc, [key_final]: row[key_init]?.$t }), {})\n    stru_ar.push(row);\n  }\n\n  // console.log(stru_ar);\n\n  for (var row of stru_ar) {\n    var { player, team, ranking } = row;\n    var search_ar = [team, get_team_data(team).teamName, ranking];\n    \n    var check = search && search.trim().toLowerCase().split(' ').reduce((acc, word) => (acc | search_ar.reduce((eac, match = '') => eac | match.toLowerCase().replace(' ', '').includes(word), false)), false)\n    if ((search && check) || (!search || search.length == 0)) {\n        structured[team] = {ranking}\n    }\n  }\n\n  for (var team in structured) {\n    structured[team] = {\n      ...structured[team],\n      ...get_team_data(team)\n    }\n  }\n  // console.log({ structured });\n  return structured\n}\n\nconst EachTeamPowerRanking = ({ team_ob }) => {\n  const { teamName, teamImg, ranking } = team_ob;\n  return (\n    <tr>\n      <td><div className=\"row-flex justify-flex-start\"><SmallLogo image={teamImg} /> <span>{teamName}</span></div></td>\n      <td>{ranking}</td>\n    </tr>\n  )\n}\n\nconst PowerRankingsJSX = (props) => {\n  // console.log('powerrankings jsx props=>', props);\n  const { api_data } = props;\n  const raw = api_data.feed.entry;\n  // console.log('powerrankings jsx raw=>', raw);\n\n  const [search, set_search] = useState('');\n\n  // const structured = {};\n  const structured = structure_powerrankings_raw_data({ raw, search });\n  console.log('powerrankings jsx strucured=>', structured);\n\n\n  return (\n    <div className=\"\">\n      <div className=\"center\">\n        <input onChange={(e) => { set_search(e.target.value) }} type=\"text\" value={search} placeholder=\"Search\" />\n      </div>\n      {\n        (structured && Object.keys(structured).length>0)?(\n          <table>\n          <tbody>\n            <tr>\n              <th>Team</th>\n              <th>Rankings</th>\n            </tr>\n            {Object.keys(structured).map(team =>\n              <EachTeamPowerRanking {...{ team_ob: structured[team] }} />\n            )}\n          </tbody>\n        </table>\n        ):(\n          <div className=\"card\">\n            <div className=\"card-content\">\n              <h5 className=\"center\">Nothing Found</h5>\n            </div>\n          </div>\n        )\n      }\n    </div>\n  )\n}\n\nfunction PowerRankingsPage() {\n  // console.log('injury page')\n  return (\n    <div>\n      <h5 className=\"center\">NBA Power Rankings</h5>\n      <GetFromAPI\n        // api={\"https://spreadsheets.google.com/feeds/list/1cUcZSRXi5ksKsHqTnQGTtWkhflNbxUpTTwaPmLv-cmk/8/public/values?alt=json\"}\n        api={get_sheet_url({ sheet_id, sheet_no })}\n      >\n        <PowerRankingsJSX />\n      </GetFromAPI>\n    </div>\n  )\n}\n\nexport default PowerRankingsPage\n","import React from \"react\";\nimport { useLocation, useRouteMatch } from \"react-router\";\nimport LargeLogo from \"../components/LargeLogo\";\nimport { get_team_data } from \"../utils/utils\";\n\nfunction TeamPage(props) {\n  const match = useRouteMatch();\n  const { teamid } = match.params;\n  console.log({ teamid });\n  const teamData = get_team_data(teamid);\n  console.log({ teamData });\n  return (\n    <div className=\"container\">\n      <div className=\"team-top-section\">\n        <div className=\"center\">\n          <LargeLogo image={teamData.teamImg} />\n        </div>\n        <h4 className=\"center\">{teamData.teamName}</h4>\n      </div>\n    </div>\n  );\n}\n\nexport default TeamPage;\n","import React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\nimport Layout from './components/Layout';\nimport InjuriesPage from './views/InjuriesPage';\nimport PowerRankingsPage from './views/PowerRankingsPage';\nimport TeamPage from './views/TeamPage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\">\n            <Layout>\n            </Layout>\n          </Route>\n          <Route exact path=\"/injuries\">\n            <Layout>\n              <InjuriesPage />\n            </Layout>\n          </Route>\n          <Route exact path=\"/powerrankings\">\n            <Layout>\n              <PowerRankingsPage />\n            </Layout>\n          </Route>\n          <Route exact path=\"/team/:teamid\">\n              <TeamPage />\n          </Route>\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\"\n\nconst rootReducer = combineReducers({\n\n})\n\nexport default rootReducer","import React from 'react'\nimport { withRouter } from 'react-router-dom'\n\nclass ScrollToTop extends React.Component {\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location) {\n      window.scrollTo(0, 0)\n    }\n  }\n\n  render() {\n    return this.props.children\n  }\n}\n\nexport default withRouter(ScrollToTop)","//importing defaults\n//----------------------------------------------------------\nimport React, { Children } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\n//importing 'redux': Redux Store\n//createStore: create our redux store\n//applyMiddleware: extend Redux with custom functionality\nimport { createStore, applyMiddleware, compose } from 'redux';\n \n//importing 'react-redux': binding layer between the store and the dom\n//Provider: makes our store available to be used in our components\nimport { Provider, useSelector } from \"react-redux\";\n// import { Provider } from \"react-redux\";\n//----------------------------------------------------------\n\n\n//Reducers: handles the store opertations and data mutations\n//import rootReducer \nimport  rootReducer from './store/reducers/rootReducer';\n\n//import thunk\n//thunk: is a middleware that allows us to return a function instead of an action-creator\n//these asynchronous funcitons send a call do the processing and then dispatch a synchronous action \nimport thunk from 'redux-thunk';\nimport { BrowserRouter } from 'react-router-dom';\nimport ScrollToTop from './components/ScrollToTop';\n\n\n//firebase\n//----------------------------------------------------------\n//importing Firebase \n\n\n//importing react-redux-firebase\n//ReactReduxFirebaseProvider: lets rrfProps(store content from firebase) be available to our redux store\n//getFirebase: used to manipulate data in firebase\n//isLoaded: hepler funciton, detects if data from redux state has been loaded or not\n// import { ReactReduxFirebaseProvider, getFirebase, isLoaded, firebaseConnect  } from \"react-redux-firebase\";\n\n//importing redux-firestore\n//createFirestoreInstance: in v3.0.0 version this is introduced that is passed in rrfProps\n//getFirestore: used to manipulate data in firestore\n//reduxFirestore: v2.0.0 way to firebase-store-enhancer\n// import { createFirestoreInstance, getFirestore, reduxFirestore } from 'redux-firestore'\n\n// import firebase from \"./config/FirebaseConfig\";\n// import LoadingFullScreen from './components/LoadingFullScreen';\n//----------------------------------------------------------\n\n//store\n//----------------------------------------------------------\n//create store\n//createStore( reducer, store-enhancer ) \n//[OR]  createStore( reducer, compose(...multiple-store-enhancers) ) \n//compose: use to apply multiple store enhancer. (programmatic utility)\n//thunk.withExtraArgument(object of store-enhacer): adds these encapsulated  store-enhancers as an extra-argument to the reducer\n//reduxFirestore(firebase): adds store-enhancer of Firestore \n\nexport const store = createStore(\n  rootReducer, \n  compose(\n    applyMiddleware(thunk),\n    // reduxFirestore(firebase)\n  )\n);\n\n//react-redux-firebase-configuration of store\n// const rrfConfig = {\n//   userProfile: 'users',\n//   useFirestoreForProfile: true\n// }\n//react-redux-firebase-props the actual contents of the store from firebase\n// const rrfProps = {\n//   firebase,\n//   config:   rrfConfig,\n//   dispatch: store.dispatch,\n//   createFirestoreInstance\n// }\n//----------------------------------------------------------\n\n//wait to load\n//----------------------------------------------------------\n// const AuthIsLoaded = ( {children} )=>{\n//   const auth = useSelector( state=>state.firebase.auth );\n//   if(!isLoaded(auth)) return (<LoadingFullScreen /> );\n//   return children;\n// }\n//----------------------------------------------------------\n\n//we are rendering our web app accordingly to the dom\n//----------------------------------------------------------\nReactDOM.render(\n  \n  <Provider store={store}>\n    {/* <ReactReduxFirebaseProvider {...rrfProps}> */}\n      {/* <AuthIsLoaded> */}\n      <BrowserRouter>\n        <ScrollToTop>\n          <App />\n        </ScrollToTop>\n      </BrowserRouter>\n      {/* </AuthIsLoaded> */}\n    {/* </ReactReduxFirebaseProvider> */}\n  </Provider>\n\n  ,document.getElementById('root')\n);\n//----------------------------------------------------------\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register();"],"sourceRoot":""}