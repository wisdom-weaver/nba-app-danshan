[{"/home/nox/Documents/projects/nba-injuries-report-app/src/index.js":"1","/home/nox/Documents/projects/nba-injuries-report-app/src/App.js":"2","/home/nox/Documents/projects/nba-injuries-report-app/src/reportWebVitals.js":"3","/home/nox/Documents/projects/nba-injuries-report-app/src/components/Layout.js":"4","/home/nox/Documents/projects/nba-injuries-report-app/src/components/GetFromAPI.js":"5","/home/nox/Documents/projects/nba-injuries-report-app/src/utils/utils.js":"6","/home/nox/Documents/projects/nba-injuries-report-app/src/views/InjuriesPage.js":"7","/home/nox/Documents/projects/nba-injuries-report-app/src/components/LargeLogo.js":"8","/home/nox/Documents/projects/nba-injuries-report-app/src/components/SmallLogo.js":"9","/home/nox/Documents/projects/nba-injuries-report-app/src/views/PowerRankingsPage.js":"10","/home/nox/Documents/projects/nba-injuries-report-app/src/views/TeamPage.js":"11","/home/nox/Documents/projects/nba-injuries-report-app/src/components/ScrollToTop.js":"12","/home/nox/Documents/projects/nba-injuries-report-app/src/store/reducers/rootReducer.js":"13","/home/nox/Documents/projects/nba-injuries-report-app/src/views/StatsTabsCard.js":"14","/home/nox/Documents/projects/nba-injuries-report-app/src/store/reducers/teamStatsReducer.js":"15","/home/nox/Documents/projects/nba-injuries-report-app/src/components/StatsCardWrapper.js":"16","/home/nox/Documents/projects/nba-injuries-report-app/src/store/actions/teamStatsActions.js":"17","/home/nox/Documents/projects/nba-injuries-report-app/src/views/GamePage.js":"18","/home/nox/Documents/projects/nba-injuries-report-app/src/views/StatsTabsCard2.js":"19","/home/nox/Documents/projects/nba-injuries-report-app/src/components/stats_cards_components/stats_cards_components.js":"20","/home/nox/Documents/projects/nba-injuries-report-app/src/components/stats_cards_components/basketball-nba-tabs/MatchTab.js":"21"},{"size":4305,"mtime":1612117522854,"results":"22","hashOfConfig":"23"},{"size":1356,"mtime":1612226054268,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1611861611543,"results":"25","hashOfConfig":"23"},{"size":1554,"mtime":1611976601254,"results":"26","hashOfConfig":"23"},{"size":850,"mtime":1611979393278,"results":"27","hashOfConfig":"23"},{"size":752,"mtime":1612100934386,"results":"28","hashOfConfig":"23"},{"size":7499,"mtime":1612128156517,"results":"29","hashOfConfig":"23"},{"size":304,"mtime":1611867696168,"results":"30","hashOfConfig":"23"},{"size":222,"mtime":1611868750040,"results":"31","hashOfConfig":"23"},{"size":3471,"mtime":1612112962594,"results":"32","hashOfConfig":"23"},{"size":3161,"mtime":1612131655292,"results":"33","hashOfConfig":"23"},{"size":333,"mtime":1612117493351,"results":"34","hashOfConfig":"23"},{"size":194,"mtime":1612131484204,"results":"35","hashOfConfig":"23"},{"size":26476,"mtime":1612131615699,"results":"36","hashOfConfig":"23"},{"size":1697,"mtime":1612229175789,"results":"37","hashOfConfig":"23"},{"size":1619,"mtime":1612233059454,"results":"38","hashOfConfig":"23"},{"size":1204,"mtime":1612234149521,"results":"39","hashOfConfig":"23"},{"size":2260,"mtime":1612231196773,"results":"40","hashOfConfig":"23"},{"size":18054,"mtime":1612233878669,"results":"41","hashOfConfig":"23"},{"size":2527,"mtime":1612223681925,"results":"42","hashOfConfig":"23"},{"size":7957,"mtime":1612228151894,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},"wrwo38",{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"47"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"47"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"47"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"47"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"47"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"47"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"47"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"47"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"47"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":44,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"47"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"47"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"47"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"47"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"47"},"/home/nox/Documents/projects/nba-injuries-report-app/src/index.js",["105","106"],"//importing defaults\n//----------------------------------------------------------\nimport React, { Children } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\n//importing 'redux': Redux Store\n//createStore: create our redux store\n//applyMiddleware: extend Redux with custom functionality\nimport { createStore, applyMiddleware, compose } from 'redux';\n \n//importing 'react-redux': binding layer between the store and the dom\n//Provider: makes our store available to be used in our components\nimport { Provider, useSelector } from \"react-redux\";\n// import { Provider } from \"react-redux\";\n//----------------------------------------------------------\n\n\n//Reducers: handles the store opertations and data mutations\n//import rootReducer \nimport  rootReducer from './store/reducers/rootReducer';\n\n//import thunk\n//thunk: is a middleware that allows us to return a function instead of an action-creator\n//these asynchronous funcitons send a call do the processing and then dispatch a synchronous action \nimport thunk from 'redux-thunk';\nimport { BrowserRouter } from 'react-router-dom';\nimport ScrollToTop from './components/ScrollToTop';\n\n\n//firebase\n//----------------------------------------------------------\n//importing Firebase \n\n\n//importing react-redux-firebase\n//ReactReduxFirebaseProvider: lets rrfProps(store content from firebase) be available to our redux store\n//getFirebase: used to manipulate data in firebase\n//isLoaded: hepler funciton, detects if data from redux state has been loaded or not\n// import { ReactReduxFirebaseProvider, getFirebase, isLoaded, firebaseConnect  } from \"react-redux-firebase\";\n\n//importing redux-firestore\n//createFirestoreInstance: in v3.0.0 version this is introduced that is passed in rrfProps\n//getFirestore: used to manipulate data in firestore\n//reduxFirestore: v2.0.0 way to firebase-store-enhancer\n// import { createFirestoreInstance, getFirestore, reduxFirestore } from 'redux-firestore'\n\n// import firebase from \"./config/FirebaseConfig\";\n// import LoadingFullScreen from './components/LoadingFullScreen';\n//----------------------------------------------------------\n\n//store\n//----------------------------------------------------------\n//create store\n//createStore( reducer, store-enhancer ) \n//[OR]  createStore( reducer, compose(...multiple-store-enhancers) ) \n//compose: use to apply multiple store enhancer. (programmatic utility)\n//thunk.withExtraArgument(object of store-enhacer): adds these encapsulated  store-enhancers as an extra-argument to the reducer\n//reduxFirestore(firebase): adds store-enhancer of Firestore \n\nexport const store = createStore(\n  rootReducer, \n  compose(\n    applyMiddleware(thunk),\n    // reduxFirestore(firebase)\n  )\n);\n\n//react-redux-firebase-configuration of store\n// const rrfConfig = {\n//   userProfile: 'users',\n//   useFirestoreForProfile: true\n// }\n//react-redux-firebase-props the actual contents of the store from firebase\n// const rrfProps = {\n//   firebase,\n//   config:   rrfConfig,\n//   dispatch: store.dispatch,\n//   createFirestoreInstance\n// }\n//----------------------------------------------------------\n\n//wait to load\n//----------------------------------------------------------\n// const AuthIsLoaded = ( {children} )=>{\n//   const auth = useSelector( state=>state.firebase.auth );\n//   if(!isLoaded(auth)) return (<LoadingFullScreen /> );\n//   return children;\n// }\n//----------------------------------------------------------\n\n//we are rendering our web app accordingly to the dom\n//----------------------------------------------------------\nReactDOM.render(\n  \n  <Provider store={store}>\n    {/* <ReactReduxFirebaseProvider {...rrfProps}> */}\n      {/* <AuthIsLoaded> */}\n      <BrowserRouter>\n        <ScrollToTop>\n          <App />\n        </ScrollToTop>\n      </BrowserRouter>\n      {/* </AuthIsLoaded> */}\n    {/* </ReactReduxFirebaseProvider> */}\n  </Provider>\n\n  ,document.getElementById('root')\n);\n//----------------------------------------------------------\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register();",["107","108"],"/home/nox/Documents/projects/nba-injuries-report-app/src/App.js",["109","110"],"import React from \"react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { Route, Switch } from \"react-router\";\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport Layout from \"./components/Layout\";\nimport GamePage from \"./views/GamePage\";\nimport InjuriesPage from \"./views/InjuriesPage\";\nimport PowerRankingsPage from \"./views/PowerRankingsPage\";\nimport TeamPage from \"./views/TeamPage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\">\n            <Layout></Layout>\n          </Route>\n          <Route exact path=\"/injuries\">\n            <Layout>\n              <InjuriesPage />\n            </Layout>\n          </Route>\n          <Route exact path=\"/powerrankings\">\n            <Layout>\n              <PowerRankingsPage />\n            </Layout>\n          </Route>\n          <Route exact path=\"/team/:teamid\">\n            <TeamPage />\n          </Route>\n          <Route exact path=\"/game/:gameid\">\n            <GamePage />\n          </Route>\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state)=>{\n  console.log('state=>', state);\n  return {}\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n  return {}\n}\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps)\n)(App);\n","/home/nox/Documents/projects/nba-injuries-report-app/src/reportWebVitals.js",[],"/home/nox/Documents/projects/nba-injuries-report-app/src/components/Layout.js",["111"],"import React from 'react'\nimport { NavLink } from 'react-router-dom';\nimport bettorsightLogo from \"../static/bettorsight-logo.svg\";\n\nfunction Layout(props) {\n  return (\n    <div className=\"container\">\n      <div className=\"logo-continer\">\n        <img src={bettorsightLogo} alt=\"\" />\n      </div>\n      <div className=\"row-flex \">\n        <NavLink to=\"/powerrankings\"><div className=\"btn black-btn m5\">Power Rankings</div></NavLink>\n        <NavLink to=\"/injuries\"><div className=\"btn black-btn m5\">Injuries</div></NavLink>\n        {/* <NavLink to=\"/trends\"><div className=\"btn black-btn m5\">Trends</div></NavLink> */}\n      </div>\n      <div className=\"rankings-container\">\n        <div className=\"row\">\n          <div className=\"col s12\">\n            <div className=\"side-card top-side-card\">\n              <h5 className=\"center\">BEST NBA ODDS</h5>\n              <div className=\"center\">\n                <a target=\"_blank\" href=\"https://jgexchange.com/bet.html/\">\n                  <div className=\"btn black-btn\">click here</div>\n                </a>\n              </div>\n            </div>\n          </div>\n          <div className=\"col s12 m10 offset-m1 l8 offset-l2\">\n            {props.children}\n          </div>\n          <div className=\"col s12 m10 offset-m1 l2 side-card side-side-card\">\n            <h5 className=\"center\">BEST NBA ODDS</h5>\n            <div className=\"center\">\n              <div className=\"btn black-btn\">click here</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Layout\n","/home/nox/Documents/projects/nba-injuries-report-app/src/components/GetFromAPI.js",["112","113"],"import React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"react-query\";\n\nfunction GetFromAPI(props) {\n  const { api } = props;\n\n  const [api_data, set_api_data] = useState(null);\n  const [done_once, set_done_once] = useState(false);\n  const [fetch_complete, set_fetch_complete] = useState(false);\n\n  const init_fetch = () => {\n    fetch(api)\n      .then(resp => resp.json())\n      .then(data => { set_api_data(data); set_fetch_complete(true) })\n      .catch((err) => { set_fetch_complete(true) })\n  }\n\n  useEffect(() => {\n    if (done_once) return;\n    init_fetch();\n    set_done_once(true);\n  }, [done_once])\n\n\n  return (\n    <>\n      {fetch_complete && React.cloneElement(props.children, {api_data}) }\n      {!fetch_complete && (\n        <h5 className=\"center\">Loading..</h5>\n      )}\n    </>\n  );\n}\n\nexport default GetFromAPI;\n","/home/nox/Documents/projects/nba-injuries-report-app/src/utils/utils.js",["114","115","116","117","118"],"import teamDataJSON from \"../static/teamData.json\";\n\nconst fetch_data = (url) => {\n    return new Promise((resolve, reject) => {\n        return fetch(url)\n            .then((resp) => resp.json())\n            .then((data) => resolve(data));\n    });\n};\n\nexport const get_team_data = (team)=>{\n    if (team == '76ers' || team == 'Seventysixers') return teamDataJSON['Seventysixers'] || {};\n    if (team == 'Blazers' || team == 'Trailblazers') return teamDataJSON['Trailblazers'] || {};\n    return teamDataJSON[team] || {};\n}\n\nexport const get_all_teams = ()=>{\n    return Object.keys(teamDataJSON);\n}\n\nexport const get_sheet_url = ({ sheet_id, sheet_no }) =>\n    `https://spreadsheets.google.com/feeds/list/${sheet_id}/${sheet_no}/public/values?alt=json`;","/home/nox/Documents/projects/nba-injuries-report-app/src/views/InjuriesPage.js",["119","120","121","122","123","124","125","126","127","128","129","130"],"import { functionsIn } from \"lodash\";\nimport React, { useState } from \"react\";\nimport GetFromAPI from \"../components/GetFromAPI\";\nimport LargeLogo from \"../components/LargeLogo\";\nimport SmallLogo from \"../components/SmallLogo\";\nimport { get_all_teams, get_sheet_url, get_team_data } from \"../utils/utils\";\n\nconst sheet_id = \"1cUcZSRXi5ksKsHqTnQGTtWkhflNbxUpTTwaPmLv-cmk\";\nconst sheet_no = \"7\";\n\nconst key_mapping_injuries = [\n  {\n    key_head: \"Team\",\n    key_init: \"gsx$teamid\",\n    key_final: \"team\",\n  },\n  {\n    key_head: \"Team\",\n    key_init: \"gsx$team\",\n    key_final: \"teams\",\n  },\n  {\n    key_head: \"Player\",\n    key_init: \"gsx$player\",\n    key_final: \"player\",\n  },\n  {\n    key_head: \"Position\",\n    key_init: \"gsx$position\",\n    key_final: \"position\",\n  },\n  {\n    key_head: \"Updated\",\n    key_init: \"gsx$updated\",\n    key_final: \"updated\",\n  },\n  {\n    key_head: \"Injury\",\n    key_init: \"gsx$injury\",\n    key_final: \"injury\",\n  },\n  {\n    key_head: \"Injury Status\",\n    key_init: \"gsx$injurystatus\",\n    key_final: \"injurystatus\",\n  },\n  {\n    key_head: \"PositionNo\",\n    key_init: \"gsx$positionno\",\n    key_final: \"positionno\",\n  }\n];\n\nconst isEmpty = (search) => !search || search.length == 0;\nconst match_in_search = ({ search, match }) =>\n  search &&\n  match &&\n  search\n    .trim()\n    .toLowerCase()\n    .split(\" \")\n    .reduce(\n      (sac, word) =>\n        sac | match.trim().toLowerCase().replace(\" \", \"\").includes(word),\n      false\n    );\n\nconst structure_injuries_raw_data = ({ raw, search }) => {\n  var structured = {},\n    stru_ar = [];\n  for (var row of raw) {\n    row = key_mapping_injuries.reduce(\n      (acc, { key_init, key_final, key_head }) => ({\n        ...acc,\n        [key_final]: row[key_init]?.$t,\n      }),\n      {}\n    );\n    stru_ar.push(row);\n  }\n  get_all_teams().map((team) => {\n    stru_ar.push({ team });\n  });\n\n  for (var row of stru_ar) {\n    var { player, team, position, updated, injury, injurystatus } = row;\n    var search_ar = [\n      player,\n      team,\n      get_team_data(team).teamName,\n      position,\n      updated,\n      injury,\n      injurystatus,\n    ];\n    var check =\n      search &&\n      search\n        .trim()\n        .toLowerCase()\n        .split(\" \")\n        .reduce(\n          (acc, word) =>\n            acc |\n            search_ar.reduce(\n              (eac, match = \"\") =>\n                eac | match.toLowerCase().replace(\" \", \"\").includes(word),\n              false\n            ),\n          false\n        );\n    if ((search && check) || !search || search.length == 0) {\n      structured[team] = {\n        ...(structured[team] || []),\n        injuries: player\n          ? [...(structured[team]?.injuries || []), row]\n          : structured[team]?.injuries,\n      };\n    }\n  }\n  for (var team in structured) {\n    structured[team] = {\n      ...structured[team],\n      ...get_team_data(team),\n    };\n  }\n  console.log({ structured });\n  return structured;\n};\n\nconst EachTeamInjuries = ({ team_ob }) => {\n  const { teamName, teamImg, injuries } = team_ob;\n  return (\n    <>\n      <div className=\"card\">\n        <div className=\"card-content resp-card-content\">\n          <div className=\"row-flex flex-start\">\n            <LargeLogo image={teamImg} />\n            <h5 className=\"bold center\">{teamName}</h5>\n          </div>\n          <div className=\"spacing-10px\"></div>\n          {injuries && injuries.length != 0 ? (\n            <>\n              <div className=\"hide-on-small-only\">\n                <table>\n                  <tbody>\n                    <tr>\n                      <th>Player</th>\n                      <th>Position</th>\n                      <th>Updated</th>\n                      <th>Injury</th>\n                      <th>Injury Status</th>\n                    </tr>\n                    {injuries?.map(\n                      ({\n                        player,\n                        position,\n                        updated,\n                        injury,\n                        injurystatus,\n                        positionno,\n                      }) => (\n                        <>\n                          <tr>\n                            <th>{player}</th>\n                            <td>\n                              {position}/{positionno}\n                            </td>\n                            <td>{updated}</td>\n                            <td>{injury}</td>\n                            <td>{injurystatus}</td>\n                          </tr>\n                        </>\n                      )\n                    )}\n                  </tbody>\n                </table>\n              </div>\n              <div className=\"hide-on-med-and-up\">\n                <table className=\"small-table\">\n                  <tbody>\n                    <tr>\n                      <th>Player</th>\n                      <th>Position</th>\n                      <th>Updated</th>\n                      <th>Injury</th>\n                    </tr>\n                    {injuries?.map(\n                      ({\n                        player,\n                        position,\n                        updated,\n                        injury,\n                        injurystatus,\n                        positionno,\n                      }) => (\n                        <>\n                          <tr>\n                            <th>{player}</th>\n                            <td>\n                              {position}/{positionno}\n                            </td>\n                            <td>{updated}</td>\n                            <td>{injury}</td>\n                          </tr>\n                          <tr>\n                            <td colSpan=\"4\">\n                              <span className=\"head\">Status: </span>\n                              {injurystatus}\n                            </td>\n                          </tr>\n                        </>\n                      )\n                    )}\n                  </tbody>\n                </table>\n              </div>\n            </>\n          ) : (\n            <h6 className=\"center head\">No Injuries</h6>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst InjuriesJSX = (props) => {\n  // console.log('injuries jsx props=>', props);\n  const { api_data } = props;\n  const raw = api_data.feed.entry;\n  // console.log('injuries jsx raw=>', raw);\n\n  const [search, set_search] = useState(\"\");\n\n  const structured = structure_injuries_raw_data({ raw, search });\n  // console.log('injuries jsx strucured=>', structured);\n\n  return (\n    <div className=\"\">\n      <div className=\"center\">\n        <input\n          onChange={(e) => {\n            set_search(e.target.value);\n          }}\n          type=\"text\"\n          value={search}\n          placeholder=\"Search\"\n        />\n      </div>\n      {/* <p>{search}</p> */}\n      {structured && Object.keys(structured).length > 0 ? (\n        Object.keys(structured).map((team) => (\n          <>\n            <EachTeamInjuries {...{ team_ob: structured[team] }} />\n            <hr />\n          </>\n        ))\n      ) : (\n        <div className=\"card\">\n          <div className=\"card-content\">\n            <h5 className=\"center\">Nothing Found</h5>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction InjuriesPage() {\n  // console.log('injury page')\n  return (\n    <div>\n      <h5 className=\"center\">NBA Injuries</h5>\n      <GetFromAPI api={get_sheet_url({ sheet_id, sheet_no })}>\n        <InjuriesJSX />\n      </GetFromAPI>\n    </div>\n  );\n}\n\nexport default InjuriesPage;\n","/home/nox/Documents/projects/nba-injuries-report-app/src/components/LargeLogo.js",["131"],"import React from 'react'\n\nfunction LargeLogo(props) {\n    const {image, bgColor= 'transparent'} = props\n    return (\n        <div className=\"large-logo-container\" style={{\n            backgroundColor: bgColor\n         }}>\n            <img src={image} />\n        </div>\n    )\n}\n\nexport default LargeLogo\n","/home/nox/Documents/projects/nba-injuries-report-app/src/components/SmallLogo.js",["132"],"import React from 'react'\n\nfunction SmallLogo(props) {\n    const {image} = props\n    return (\n        <div className=\"small-logo-container\">\n            <img src={image} />\n        </div>\n    )\n}\n\nexport default SmallLogo\n","/home/nox/Documents/projects/nba-injuries-report-app/src/views/PowerRankingsPage.js",["133","134","135","136","137","138","139","140"],"import { functionsIn } from 'lodash';\nimport React, { useState } from 'react'\nimport GetFromAPI from '../components/GetFromAPI'\nimport LargeLogo from '../components/LargeLogo';\nimport SmallLogo from '../components/SmallLogo';\nimport { get_sheet_url, get_team_data } from '../utils/utils'\n\nconst sheet_id = \"1cUcZSRXi5ksKsHqTnQGTtWkhflNbxUpTTwaPmLv-cmk\";\nconst sheet_no = \"8\";\n\nconst key_mapping_powerrankings = [\n  {\n    key_head: \"Team\",\n    key_init: \"gsx$team\",\n    key_final: \"team\",\n  },\n  {\n    key_head: \"Ranking\",\n    key_init: \"gsx$ranking\",\n    key_final: \"ranking\",\n  },\n]\n\nconst structure_powerrankings_raw_data = ({ raw, search }) => {\n  var structured = {}, stru_ar = [];\n\n  for (var row of raw) {\n    row = key_mapping_powerrankings.reduce((acc, { key_init, key_final, key_head }) => ({ ...acc, [key_final]: row[key_init]?.$t }), {})\n    stru_ar.push(row);\n  }\n\n  // console.log(stru_ar);\n\n  for (var row of stru_ar) {\n    var { player, team, ranking } = row;\n    var search_ar = [team, get_team_data(team).teamName, ranking];\n    \n    var check = search && search.trim().toLowerCase().split(' ').reduce((acc, word) => (acc | search_ar.reduce((eac, match = '') => eac | match.toLowerCase().replace(' ', '').includes(word), false)), false)\n    if ((search && check) || (!search || search.length == 0)) {\n        structured[team] = {ranking}\n    }\n  }\n\n  for (var team in structured) {\n    structured[team] = {\n      ...structured[team],\n      ...get_team_data(team)\n    }\n  }\n  // console.log({ structured });\n  return structured\n}\n\nconst EachTeamPowerRanking = ({ team_ob }) => {\n  const { teamName, teamImg, ranking } = team_ob;\n  return (\n    <tr>\n      <td><div className=\"row-flex justify-flex-start\"><SmallLogo image={teamImg} /> <span>{teamName}</span></div></td>\n      <td>{ranking}</td>\n    </tr>\n  )\n}\n\nconst PowerRankingsJSX = (props) => {\n  // console.log('powerrankings jsx props=>', props);\n  const { api_data } = props;\n  const raw = api_data.feed.entry;\n  // console.log('powerrankings jsx raw=>', raw);\n\n  const [search, set_search] = useState('');\n\n  // const structured = {};\n  const structured = structure_powerrankings_raw_data({ raw, search });\n  console.log('powerrankings jsx strucured=>', structured);\n\n\n  return (\n    <div className=\"\">\n      <div className=\"center\">\n        <input onChange={(e) => { set_search(e.target.value) }} type=\"text\" value={search} placeholder=\"Search\" />\n      </div>\n      {\n        (structured && Object.keys(structured).length>0)?(\n          <table>\n          <tbody>\n            <tr>\n              <th>Team</th>\n              <th>Rankings</th>\n            </tr>\n            {Object.keys(structured).map(team =>\n              <EachTeamPowerRanking {...{ team_ob: structured[team] }} />\n            )}\n          </tbody>\n        </table>\n        ):(\n          <div className=\"card\">\n            <div className=\"card-content\">\n              <h5 className=\"center\">Nothing Found</h5>\n            </div>\n          </div>\n        )\n      }\n    </div>\n  )\n}\n\nfunction PowerRankingsPage() {\n  // console.log('injury page')\n  return (\n    <div>\n      <h5 className=\"center\">NBA Power Rankings</h5>\n      <GetFromAPI\n        // api={\"https://spreadsheets.google.com/feeds/list/1cUcZSRXi5ksKsHqTnQGTtWkhflNbxUpTTwaPmLv-cmk/8/public/values?alt=json\"}\n        api={get_sheet_url({ sheet_id, sheet_no })}\n      >\n        <PowerRankingsJSX />\n      </GetFromAPI>\n    </div>\n  )\n}\n\nexport default PowerRankingsPage\n","/home/nox/Documents/projects/nba-injuries-report-app/src/views/TeamPage.js",["141"],"import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useLocation, useRouteMatch } from \"react-router\";\nimport LargeLogo from \"../components/LargeLogo\";\nimport StatsCardWrapper from \"../components/StatsCardWrapper\";\nimport { get_team_data } from \"../utils/utils\";\nimport StatsTabsCard, { statsPostFetchFn } from \"./StatsTabsCard\";\nimport {\n  updateGameStreaksAction,\n  updateTeamStatsAction,\n} from \"../store/actions/teamStatsActions\";\n\nfunction TeamPage(props) {\n  const match = useRouteMatch();\n  const { teamid } = match.params;\n  const teamData = get_team_data(teamid);\n  const category = \"basketball\";\n  const subcategory = \"nba\";\n  const GameID = \"Clippers@Knicks\";\n  var [teamA_mini, teamB_mini] = GameID.split(\"@\").map(\n    (ea) => ea.split(\" \").reverse()[0]\n    );\n    const teamAData = get_team_data(teamA_mini);\n    const teamBData = get_team_data(teamB_mini);\n    const dispatch = useDispatch();\n    const teamsData = {\n      teamA: teamAData.teamName,\n      teamA_Img: teamAData.teamImg,\n      colorA: teamAData.color1,\n      teamB: teamBData.teamName,\n      colorB: teamBData.color1,\n      teamB_Img: teamBData.teamImg,\n    }\n    console.log({ teamsData });\n  return (\n    <div className=\"container\">\n      <div className=\"team-top-section\">\n        <div className=\"center\">\n          <LargeLogo image={teamData.teamImg} />\n        </div>\n        <h4 className=\"center m0\">{teamData.teamName}</h4>\n\n        <StatsCardWrapper\n          match_api={\n            \"https://spreadsheets.google.com/feeds/list/1cUcZSRXi5ksKsHqTnQGTtWkhflNbxUpTTwaPmLv-cmk/1/public/values?alt=json\"\n          }\n          sag_api={\n            \"https://spreadsheets.google.com/feeds/list/1cUcZSRXi5ksKsHqTnQGTtWkhflNbxUpTTwaPmLv-cmk/4/public/values?alt=json\"\n          }\n          trends_api={\n            \"https://spreadsheets.google.com/feeds/list/1cUcZSRXi5ksKsHqTnQGTtWkhflNbxUpTTwaPmLv-cmk/5/public/values?alt=json\"\n          }\n          odds_api={\n            \"https://spreadsheets.google.com/feeds/list/1cUcZSRXi5ksKsHqTnQGTtWkhflNbxUpTTwaPmLv-cmk/3/public/values?alt=json\"\n          }\n          injuries_api={\n            \"https://spreadsheets.google.com/feeds/list/1cUcZSRXi5ksKsHqTnQGTtWkhflNbxUpTTwaPmLv-cmk/7/public/values?alt=json\"\n          }\n          streaks_api={\n            \"https://spreadsheets.google.com/feeds/list/1cUcZSRXi5ksKsHqTnQGTtWkhflNbxUpTTwaPmLv-cmk/9/public/values?alt=json\"\n          }\n          {...{ category, subcategory }}\n          postFetchFn={statsPostFetchFn}\n          pushFetchToRedux={(data) => {\n            console.log('pushFetchToRedux', data)\n            dispatch(\n              updateTeamStatsAction({\n                category,\n                subcategory,\n                stats: data.stats,\n              })\n            );\n            dispatch(\n              updateGameStreaksAction({\n                category,\n                subcategory,\n                streaks: data.streaks,\n              })\n            );\n          }}\n        >\n          <StatsTabsCard {...{ category, subcategory, GameID, teamsData }} />\n        </StatsCardWrapper>\n      </div>\n    </div>\n  );\n}\n\nexport default TeamPage;\n","/home/nox/Documents/projects/nba-injuries-report-app/src/components/ScrollToTop.js",[],"/home/nox/Documents/projects/nba-injuries-report-app/src/store/reducers/rootReducer.js",[],"/home/nox/Documents/projects/nba-injuries-report-app/src/views/StatsTabsCard.js",["142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185"],"import { relativeTimeRounding } from \"moment\";\nimport React, { Fragment } from \"react\";\nimport { Tabs, Tab } from \"react-materialize\";\nimport { useSelector } from \"react-redux\";\nimport LargeLogo from \"../components/LargeLogo\";\nimport SmallLogo from \"../components/SmallLogo\";\nimport { teamStatsReducer } from \"../store/reducers/teamStatsReducer\";\n\nconst BarLine = (props) => {\n  const { left, right, colorA, colorB, side } = props;\n  return (\n    <div className=\"row-flex barline\">\n      <div\n        style={{\n          backgroundColor: colorA,\n          width: `${left - 0.3}%`,\n          opacity: side != -1 ? (side == 0 ? \"1\" : \"0.2\") : \"1\",\n        }}\n        className=\"bar-left mh-10px\"\n      ></div>\n      <div\n        style={{ backgroundColor: \"white\", width: `${0.6}%` }}\n        className=\"bar-left mh-10px\"\n      ></div>\n      <div\n        style={{\n          backgroundColor: colorB,\n          width: `${right - 0.3}%`,\n          opacity: side != -1 ? (side == 1 ? \"1\" : \"0.2\") : \"1\",\n        }}\n        className=\"bar-right mh-10px\"\n      ></div>\n    </div>\n  );\n};\n\nconst TeamBar = ({ teamA, teamB, teamA_Img, teamB_Img, midTitle }) => {\n  return (\n    <div className=\"row-flex justify-space-between\">\n      <div className=\"col-flex\">\n        <LargeLogo image={teamA_Img} />\n        <span className=\"bold center\">{teamA}</span>\n      </div>\n      <h5 className=\"center\">{midTitle}</h5>\n      <div className=\"col-flex\">\n        <LargeLogo image={teamB_Img} />\n        <span className=\"bold center\">{teamB}</span>\n      </div>\n    </div>\n  );\n};\n\nconst SingleStat = ({\n  statLeft,\n  statRight,\n  statTitle,\n  barBottomText,\n  colorA,\n  colorB,\n  side = -1,\n  show_line = false,\n  lval = 50,\n  rval = 50,\n}) => {\n  const left = (lval * 100) / (lval + rval);\n  const right = (rval * 100) / (lval + rval);\n  return (\n    <div className=\"SingleStatContainer w-100\">\n      <div className=\"row-flex justify-space-between\">\n        <span>{statLeft}</span>\n        <span className=\"bold\">{statTitle}</span>\n        <span>{statRight}</span>\n      </div>\n      {show_line && <BarLine {...{ left, right, colorA, colorB, side }} />}\n      {barBottomText && <p className=\"center grey-text\">{barBottomText}</p>}\n      {!barBottomText && <div className=\"spacing-5px\"></div>}\n    </div>\n  );\n};\nconst get_n = (n) => parseFloat(n.split(\" \").reverse()[0]);\nconst higher_better = (a, b) => {\n  a = get_n(a);\n  b = get_n(b);\n  return a > b ? 0 : 1;\n};\nconst lower_better = (a, b) => {\n  a = get_n(a);\n  b = get_n(b);\n  return b > a ? 0 : 1;\n};\nconst both = (a, b) => -1;\n\nconst MatchupTab = ({ statA, statB }) => {\n  const { teamA, teamA_Img, colorA } = statA;\n  const matchA = (statA && statA?.stats?.matchup) || {};\n  const { teamB, teamB_Img, colorB } = statB;\n  const matchB = (statB && statB?.stats?.matchup) || {};\n\n  const ats_records = [\n    {\n      head: \"Against The Spread\",\n      key: \"ATS\",\n      side_eval: higher_better,\n    },\n    {\n      head: \"Straight Up\",\n      key: \"SU\",\n      side_eval: higher_better,\n    },\n    {\n      head: \"O/U\",\n      key: \"O/U\",\n      side_eval: both,\n    },\n    {\n      head: \"Average Line\",\n      key: \"avg line\",\n      side_eval: lower_better,\n    },\n    {\n      head: \"Average Total\",\n      key: \"avg total\",\n      side_eval: both,\n    },\n  ];\n\n  const team_matchup = [\n    {\n      head: \"Power Ranking\",\n      key: \"points\",\n      side_eval: lower_better,\n    },\n    {\n      head: \"Sagarin Rating\",\n      key: \"rating\",\n      side_eval: higher_better,\n    },\n    {\n      head: \"FG\",\n      key: \"FG\",\n      side_eval: higher_better,\n    },\n    {\n      head: \"FG%\",\n      key: \"FG%\",\n      side_eval: higher_better,\n    },\n    {\n      head: \"FT\",\n      key: \"FT\",\n      side_eval: higher_better,\n    },\n    {\n      head: \"FT%\",\n      key: \"FT%\",\n      side_eval: higher_better,\n    },\n    {\n      head: \"3s\",\n      key: \"3s\",\n      side_eval: higher_better,\n    },\n    {\n      head: \"3s%\",\n      key: \"3s%\",\n      side_eval: higher_better,\n    },\n    {\n      head: \"BLKS\",\n      key: \"BLKS\",\n      side_eval: higher_better,\n    },\n    {\n      head: \"O-RBND\",\n      key: \"O-RBND\",\n      side_eval: higher_better,\n    },\n    {\n      head: \"RBND\",\n      key: \"RBND\",\n      side_eval: higher_better,\n    },\n    {\n      head: \"Fouls\",\n      key: \"Fouls\",\n      side_eval: lower_better,\n    },\n    {\n      head: \"AST\",\n      key: \"AST\",\n      side_eval: higher_better,\n    },\n    {\n      head: \"Turnovers\",\n      key: \"Turnovers\",\n      side_eval: lower_better,\n    },\n    {\n      head: \"Q1\",\n      key: \"Q1\",\n      side_eval: higher_better,\n    },\n    {\n      head: \"Q2\",\n      key: \"Q2\",\n      side_eval: higher_better,\n    },\n    {\n      head: \"Q3\",\n      key: \"Q3\",\n      side_eval: higher_better,\n    },\n    {\n      head: \"Q4\",\n      key: \"Q4\",\n      side_eval: higher_better,\n    },\n    {\n      head: \"Avg Score\",\n      key: \"Avg Score\",\n      side_eval: higher_better,\n    },\n    {\n      head: \"Opp FG\",\n      key: \"Opp FG\",\n      side_eval: lower_better,\n    },\n    {\n      head: \"Opp FG%\",\n      key: \"Opp FG%\",\n      side_eval: lower_better,\n    },\n    {\n      head: \"Opp FT\",\n      key: \"Opp FT\",\n      side_eval: lower_better,\n    },\n    {\n      head: \"Opp FT%\",\n      key: \"Opp FT%\",\n      side_eval: lower_better,\n    },\n    {\n      head: \"Opp 3s\",\n      key: \"Opp 3s\",\n      side_eval: lower_better,\n    },\n    {\n      head: \"Opp 3s%\",\n      key: \"Opp 3s%\",\n      side_eval: lower_better,\n    },\n    {\n      head: \"Opp BLKS\",\n      key: \"Opp BLKS\",\n      side_eval: lower_better,\n    },\n    {\n      head: \"Opp O-RBND\",\n      key: \"Opp O-RBND\",\n      side_eval: lower_better,\n    },\n    {\n      head: \"Opp RBND\",\n      key: \"Opp RBND\",\n      side_eval: lower_better,\n    },\n    {\n      head: \"Opp Fouls\",\n      key: \"Opp Fouls\",\n      side_eval: higher_better,\n    },\n    {\n      head: \"Opp AST\",\n      key: \"Opp AST\",\n      side_eval: lower_better,\n    },\n    {\n      head: \"Opp Turnovers\",\n      key: \"Opp Turnovers\",\n      side_eval: higher_better,\n    },\n    {\n      head: \"Opp Q1\",\n      key: \"Opp Q1\",\n      side_eval: lower_better,\n    },\n    {\n      head: \"Opp Q2\",\n      key: \"Opp Q2\",\n      side_eval: lower_better,\n    },\n    {\n      head: \"Opp Q3\",\n      key: \"Opp Q3\",\n      side_eval: lower_better,\n    },\n    {\n      head: \"Opp Q4\",\n      key: \"Opp Q4\",\n      side_eval: lower_better,\n    },\n    {\n      head: \"Opp Avg Score\",\n      key: \"Opp Avg Score\",\n      side_eval: lower_better,\n    },\n  ];\n\n  return (matchA && Object.keys(matchA).length != 0) ||\n    (matchB && Object.keys(matchB).length != 0) ? (\n    <div className=\"card-content\">\n      <TeamBar\n        midTitle={\"ATS Records\"}\n        {...{ teamA, teamA_Img, teamB, teamB_Img }}\n      />\n      <div className=\"bottom-margin-30px\"></div>\n      {ats_records.map((stat_row) => (\n        <>\n          <div className=\"spacing-10px\"></div>\n\n          <SingleStat\n            statLeft={matchA && matchA[stat_row.key]}\n            statRight={matchB && matchB[stat_row.key]}\n            side={\n              stat_row.side_eval\n                ? stat_row.side_eval(matchA[stat_row.key], matchB[stat_row.key])\n                : -1\n            }\n            show_line={true}\n            statTitle={stat_row.head}\n            {...{ colorA, colorB }}\n          />\n        </>\n      ))}\n\n      <div className=\"bottom-margin-30px\"></div>\n\n      <TeamBar\n        midTitle={\"Team Matchup\"}\n        {...{ teamA, teamA_Img, teamB, teamB_Img }}\n      />\n      {team_matchup.map((stat_row) => (\n        <>\n          <div className=\"spacing-10px\"></div>\n\n          <SingleStat\n            statLeft={matchA && matchA[stat_row.key]}\n            statRight={matchB && matchB[stat_row.key]}\n            side={\n              stat_row.side_eval\n                ? stat_row.side_eval(matchA[stat_row.key], matchB[stat_row.key])\n                : -1\n            }\n            show_line={true}\n            statTitle={stat_row.head}\n            {...{ colorA, colorB }}\n          />\n        </>\n      ))}\n    </div>\n  ) : (\n    <div className=\"card-content\">\n      <p className=\"flow-text center\">No Data Fetched at the moment</p>\n    </div>\n  );\n};\n\nconst OddsTab = ({ statA, statB }) => {\n  const { teamA, teamA_Img, colorA } = statA;\n  const oddsA = (statA && statA?.stats[\"odds\"]) || {};\n  const { teamB, teamB_Img, colorB } = statB;\n  const oddsB = (statB && statB?.stats[\"odds\"]) || {};\n  // console.log(\"odds\", { oddsA, oddsB });\n  const oddsPair_mapping = [\n    // { head: \"Team\", key: \"team\" },\n    // { head: \"Rotation\", key: \"rotation\" },\n    // { head: \"Time\", key: \"time\" },\n    { head: \"Open\", key: \"open\" },\n    { head: \"Consensus\", key: \"consensus\" },\n    { head: \"BetMGM\", key: \"betmgm\" },\n    { head: \"SportsBetting\", key: \"sportsbetting\" },\n    { head: \"Wynn\", key: \"wynn\" },\n    { head: \"WH\", key: \"wh\" },\n    { head: \"DK\", key: \"dk\" },\n    { head: \"Circa\", key: \"circa\" },\n  ];\n\n  return (\n    <div className=\"card-content\">\n      {oddsA && Object.keys(oddsA).length != 0 ? (\n        <>\n          <div className=\"row-flex align-\">\n            <div className=\"col-flex w-200px justify-flex-start\">\n              <LargeLogo image={teamA_Img} />\n              <span className=\"bold center\">{teamA}</span>\n            </div>\n            <h5 className=\"center\">vs</h5>\n            <div className=\"col-flex w-200px justify-flex-start\">\n              <LargeLogo image={teamB_Img} />\n              <span className=\"bold center\">{teamB}</span>\n            </div>\n          </div>\n          <div className=\"spacing-20px\"></div>\n          <h5 className=\"center\">Odds</h5>\n          <div className=\"spacing-20px\"></div>\n          <div className=\"m-auto max_w-250px\">\n            {oddsPair_mapping.map(({ head, key }) => (\n              <>\n                <SingleStat\n                  statLeft={head}\n                  statRight={oddsA[key]}\n                  lval={20}\n                  rval={80}\n                  // statTitle={head}\n                  {...{ colorA, colorB }}\n                />\n                <div className=\"spacing-10px\"></div>\n              </>\n            ))}\n          </div>\n        </>\n      ) : (\n        <h5 className=\"center\">No Odds yet</h5>\n      )}\n    </div>\n  );\n};\n\nconst TrendsTab = ({ statA, statB }) => {\n  const { teamA, teamA_Img, colorA } = statA;\n  const trendsA = (statA && statA?.stats?.trends) || {};\n  const { teamB, teamB_Img, colorB } = statB;\n  const trendsB = (statB && statB?.stats?.trends) || {};\n  // console.log(\"trends\", { trendsA, trendsB }, colorA, colorB);\n\n  const trendsPair_mapping = [\n    // { head: \"Teams\", key: \"teams\" },\n    { head: \"Win Loss\", key: \"win-loss\" },\n    { head: \"Streak\", key: \"streak\" },\n    { head: \"ATS\", key: \"ats\" },\n    { head: \"Open\", key: \"open\" },\n    { head: \"Side\", key: \"side\" },\n    { head: \"Money\", key: \"money\" },\n    { head: \"OU\", key: \"ou\" },\n  ];\n\n  return (trendsA && Object.keys(trendsA).length != 0) ||\n    (trendsB && Object.keys(trendsB).length != 0) ? (\n    <div className=\"card-content\">\n      <TeamBar\n        midTitle={\"Trends\"}\n        {...{ teamA, teamA_Img, teamB, teamB_Img }}\n      />\n      <div className=\"bottom-margin-30px\"></div>\n      <table className=\"hide-on-small-only\">\n        <tbody>\n          <tr>\n            <td>Teams</td>\n            {trendsPair_mapping.map(({ head, key }) => (\n              <td>{head}</td>\n            ))}\n          </tr>\n          <tr>\n            <td style={{ borderBottom: `3px solid ${colorA}` }}>\n              {trendsA[\"teams\"]}\n            </td>\n            {trendsPair_mapping.map(({ head, key }) => (\n              <td>{trendsA[key]}</td>\n            ))}\n          </tr>\n          <tr>\n            <td style={{ borderBottom: `4px solid ${colorB}` }}>\n              {trendsB[\"teams\"]}\n            </td>\n            {trendsPair_mapping.map(({ head, key }) => (\n              <td>{trendsB[key]}</td>\n            ))}\n          </tr>\n        </tbody>\n      </table>\n      <table className=\"hide-on-med-and-up\">\n        <tbody>\n          {trendsPair_mapping.map(({ head, key }) => (\n            <SingleStat\n              statLeft={trendsA[key]}\n              statRight={trendsB[key]}\n              show_line={true}\n              statTitle={head}\n              {...{ colorA, colorB }}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  ) : (\n    <div className=\"card-content\">\n      <p className=\"flow-text center\">No Trends at the moment</p>\n    </div>\n  );\n};\n\nconst InjuriesTab = ({ statA, statB }) => {\n  const { teamA, teamA_Img, colorA } = statA;\n  const injuriesA = (statA && statA?.stats?.injuries) || [];\n  const { teamB, teamB_Img, colorB } = statB;\n  const injuriesB = (statB && statB?.stats?.injuries) || [];\n  // console.log({injuriesA, injuriesB})\n  const key_mapping_injuries = [\n    {\n      key_head: \"Team\",\n      key_init: \"gsx$teamid\",\n      key_final: \"team\",\n    },\n    {\n      key_head: \"Team\",\n      key_init: \"gsx$team\",\n      key_final: \"teams\",\n    },\n    {\n      key_head: \"Player\",\n      key_init: \"gsx$player\",\n      key_final: \"player\",\n    },\n    {\n      key_head: \"Position\",\n      key_init: \"gsx$position\",\n      key_final: \"position\",\n    },\n    {\n      key_head: \"Updated\",\n      key_init: \"gsx$updated\",\n      key_final: \"updated\",\n    },\n    {\n      key_head: \"Injury\",\n      key_init: \"gsx$injury\",\n      key_final: \"injury\",\n    },\n    {\n      key_head: \"Injury Status\",\n      key_init: \"gsx$injurystatus\",\n      key_final: \"injurystatus\",\n    },\n    {\n      key_head: \"PositionNo\",\n      key_init: \"gsx$positionno\",\n      key_final: \"positionno\",\n    },\n  ];\n  return (\n    <div className=\"card-content\">\n      <h5 className=\"center\">Injuries</h5>\n      {[\n        { injuries: injuriesA, team_Img: teamA_Img, team: teamA },\n        { injuries: injuriesB, team_Img: teamB_Img, team: teamB },\n      ].map(({ injuries, team_Img, team }) => (\n        <>\n          <div className=\"row-flex flex-start\">\n            <LargeLogo image={team_Img} />\n            <h5 className=\"bold center\">{team}</h5>\n          </div>\n          <div className=\"spacing-10px\"></div>\n\n          {injuries && injuries.length != 0 ? (\n            <>\n              <div className=\"hide-on-small-only\">\n                <table>\n                  <tbody>\n                    <tr>\n                      <th>Player</th>\n                      <th>Position</th>\n                      <th>Updated</th>\n                      <th>Injury</th>\n                      <th>Injury Status</th>\n                    </tr>\n                    {injuries?.map(\n                      ({\n                        player,\n                        position,\n                        updated,\n                        injury,\n                        injurystatus,\n                        positionno,\n                      }) => (\n                        <>\n                          <tr>\n                            <th>{player}</th>\n                            <td>\n                              {position}/{positionno}\n                            </td>\n                            <td>{updated}</td>\n                            <td>{injury}</td>\n                            <td>{injurystatus}</td>\n                          </tr>\n                        </>\n                      )\n                    )}\n                  </tbody>\n                </table>\n              </div>\n              <div className=\"hide-on-med-and-up\">\n                <table className=\"small-table\">\n                  <tbody>\n                    <tr>\n                      <th>Player</th>\n                      <th>Position</th>\n                      <th>Updated</th>\n                      <th>Injury</th>\n                    </tr>\n                    {injuries?.map(\n                      ({\n                        player,\n                        position,\n                        updated,\n                        injury,\n                        injurystatus,\n                        positionno,\n                      }) => (\n                        <>\n                          <tr>\n                            <th>{player}</th>\n                            <td>\n                              {position}/{positionno}\n                            </td>\n                            <td>{updated}</td>\n                            <td>{injury}</td>\n                          </tr>\n                          <tr>\n                            <td colSpan=\"4\">\n                              <span className=\"head\">Status: </span>\n                              {injurystatus}\n                            </td>\n                          </tr>\n                        </>\n                      )\n                    )}\n                  </tbody>\n                </table>\n              </div>\n            </>\n          ) : (\n            <h6 className=\"center head\">No Injuries</h6>\n          )}\n        </>\n      ))}\n    </div>\n  );\n};\n\nconst StreaksTab = ({ statA, statB, streaks }) => {\n  const { teamA, teamA_Img, colorA } = statA;\n  const { teamB, teamB_Img, colorB } = statB;\n  return (\n    <div className=\"card-content streaks-tab\">\n      <TeamBar\n        midTitle={\"Streaks\"}\n        {...{ teamA, teamA_Img, teamB, teamB_Img }}\n      />\n      {streaks && streaks.length > 0 ? (\n        streaks.map((streak) => (\n          <>\n            <div className=\"spacing-20px\"></div>\n            <p>{streak}</p>\n            <div className=\"spacing-5px\"></div>\n            <hr />\n          </>\n        ))\n      ) : (\n        <h5 className=\"center head\">No Streaks</h5>\n      )}\n    </div>\n  );\n};\n\nconst keyPairs_primary = {\n  team: \"gsx$teams\",\n};\n\nconst keyPairs_matchup = {\n  team: \"gsx$teams\",\n  SU: \"gsx$_d5fpr\",\n  ATS: \"gsx$_d6ua4\",\n  \"avg line\": \"gsx$_d88ul\",\n  \"O/U\": \"gsx$_dkvya\",\n  \"avg total\": \"gsx$_dmair\",\n  FG: \"gsx$teams_2\",\n  \"FG%\": \"gsx$_dp3nl\",\n  FT: \"gsx$_df9om\",\n  \"FT%\": \"gsx$_dgo93\",\n  \"3s\": \"gsx$_di2tg\",\n  \"3s%\": \"gsx$_djhdx\",\n  BLKS: \"gsx$_dw4je\",\n  \"O-RBND\": \"gsx$_dxj3v\",\n  RBND: \"gsx$_dyxo8\",\n  Fouls: \"gsx$_e0c8p\",\n  AST: \"gsx$_dqi9q\",\n  Turnovers: \"gsx$_drwu7\",\n  Q1: \"gsx$_dtbek\",\n  Q2: \"gsx$_dupz1\",\n  Q3: \"gsx$_e7d2q\",\n  Q4: \"gsx$_e8rn7\",\n  \"Avg Score\": \"gsx$_ea67k\",\n  \"Opp FG\": \"gsx$opps\",\n  \"Opp FG%\": \"gsx$_e1qt2\",\n  \"Opp FT\": \"gsx$_e35dj\",\n  \"Opp FT%\": \"gsx$_e4jxw\",\n  \"Opp 3s\": \"gsx$_e5yid\",\n  \"Opp 3s%\": \"gsx$_eilm2\",\n  \"Opp BLKS\": \"gsx$_ek06j\",\n  \"Opp O-RBND\": \"gsx$_eleqw\",\n  \"Opp RBND\": \"gsx$_emtbd\",\n  \"Opp Fouls\": \"gsx$_eczce\",\n  \"Opp AST\": \"gsx$_eedwv\",\n  \"Opp Turnovers\": \"gsx$_efsh8\",\n  \"Opp Q1\": \"gsx$_eh71p\",\n  \"Opp Q2\": \"gsx$_etu5e\",\n  \"Opp Q3\": \"gsx$_ev8pv\",\n  \"Opp Q4\": \"gsx$_ewna8\",\n  \"Opp Avg Score\": \"gsx$_ey1up\",\n};\n\nconst keyPairs_matchup_sag = {\n  team: \"gsx$teams\",\n  rating: \"gsx$rating\",\n  points: \"gsx$points\",\n};\n\nconst keyPairs_trends = {\n  team: \"gsx$team\",\n  teams: \"gsx$teams\",\n  \"win-loss\": \"gsx$win-loss\",\n  streak: \"gsx$streak\",\n  ats: \"gsx$ats\",\n  open: \"gsx$open\",\n  side: \"gsx$side\",\n  money: \"gsx$money\",\n  ou: \"gsx$ou\",\n};\n\nconst keyPairs_odds = {\n  team: \"gsx$team\",\n  rotation: \"gsx$rotation\",\n  time: \"gsx$time\",\n  open: \"gsx$open\",\n  consensus: \"gsx$consensus\",\n  betmgm: \"gsx$betmgm\",\n  sportsbetting: \"gsx$sportsbetting\",\n  wynn: \"gsx$wynn\",\n  wh: \"gsx$wh\",\n  dk: \"gsx$dk\",\n  circa: \"gsx$circa\",\n};\n\nconst keyPairs_injuries = {\n  team: \"gsx$teamid\",\n  teams: \"gsx$team\",\n  player: \"gsx$player\",\n  position: \"gsx$position\",\n  updated: \"gsx$updated\",\n  injury: \"gsx$injury\",\n  injurystatus: \"gsx$injurystatus\",\n  positionno: \"gsx$positionno\",\n};\n\nconst keyPairs_mapping_streaks = [\n  { key_init: \"gsx$game\", key_final: \"game\", key_head: \"Game\" },\n  { key_init: \"gsx$streaks\", key_final: \"streaks\", key_head: \"Streaks\" },\n];\n\nexport const statsPostFetchFn = (data_ar) => {\n  // console.log(\"data_ar =>\", data_ar);\n  // var raw = data_ar.reduce((acc, ea) => [...acc, ...ea?.feed?.entry], []);\n  var teams = data_ar[0].feed.entry.map(\n    (row) => row[keyPairs_primary[\"team\"]][\"$t\"]\n  );\n  teams = Array.from(new Set(teams).add(\"76ers\"))\n    .filter((ea) => ea != \"\")\n    .sort();\n  var structured = teams.reduce((acc, team) => ({ ...acc, [team]: {} }), {});\n  var matchup_raw = data_ar[0].feed.entry;\n  for (var row of matchup_raw) {\n    row = Object.entries(keyPairs_matchup).reduce(\n      (acc, [key_final, key_init]) => ({\n        ...acc,\n        [key_final]: row[key_init]?.$t || \"\",\n      }),\n      {}\n    );\n    var team = row.team;\n    if (team == \"76ers\" || team == \"Seventysixers\") team = \"76ers\";\n    if (teams.includes(team))\n      structured[team][\"matchup\"] = {\n        ...structured[team][\"matchup\"],\n        ...row,\n      };\n  }\n\n  var matchup_sag_raw = data_ar[1].feed.entry;\n  for (var row of matchup_sag_raw) {\n    row = Object.entries(keyPairs_matchup_sag).reduce(\n      (acc, [key_final, key_init]) => ({\n        ...acc,\n        [key_final]: row[key_init]?.$t || \"\",\n      }),\n      {}\n    );\n    var team = row.team;\n    if (team == \"76ers\" || team == \"Seventysixers\") team = \"76ers\";\n    if (teams.includes(team))\n      structured[team][\"matchup\"] = {\n        ...structured[team][\"matchup\"],\n        ...row,\n      };\n  }\n\n  var trends_raw = data_ar[2].feed.entry;\n  // console.log(trends_raw);\n  for (var row of trends_raw) {\n    row = Object.entries(keyPairs_trends).reduce(\n      (acc, [key_final, key_init]) => ({\n        ...acc,\n        [key_final]: row[key_init]?.$t || \"\",\n      }),\n      {}\n    );\n    var team = row.team;\n    if (team == \"76ers\" || team == \"Seventysixers\") team = \"76ers\";\n    // console.log('team', team)\n    if (teams.includes(team)) {\n      // console.log('row trends', team, row)\n      structured[team][\"trends\"] = {\n        ...structured[team][\"trends\"],\n        ...row,\n      };\n    }\n  }\n\n  var odds_raw = data_ar[3].feed.entry;\n  for (var row of odds_raw) {\n    row = Object.entries(keyPairs_odds).reduce(\n      (acc, [key_final, key_init]) => ({\n        ...acc,\n        [key_final]: row[key_init]?.$t || \"\",\n      }),\n      {}\n    );\n    var team = row.team;\n    if (team == \"76ers\" || team == \"Seventysixers\") team = \"76ers\";\n    if (teams.includes(team)) {\n      // console.log('row odds', team, row)\n      structured[team][\"odds\"] = {\n        ...structured[team][\"odds\"],\n        ...row,\n      };\n    }\n  }\n\n  var injuries_raw = data_ar[4].feed.entry;\n  // console.log({injuries_raw});\n  for (var row of injuries_raw) {\n    row = Object.entries(keyPairs_injuries).reduce(\n      (acc, [key_final, key_init]) => ({\n        ...acc,\n        [key_final]: row[key_init]?.$t || \"\",\n      }),\n      {}\n    );\n    var team = row.team;\n    if (team == \"76ers\" || team == \"Seventysixers\") team = \"76ers\";\n    if (teams.includes(team)) {\n      // console.log('row injuries', team, row)\n      structured[team][\"injuries\"] = [\n        ...((structured[team] && structured[team][\"injuries\"]) || []),\n        row,\n      ];\n    }\n  }\n\n  var streaks_raw = data_ar[5].feed.entry.map((row) =>\n    keyPairs_mapping_streaks.reduce(\n      (acc, { key_init, key_final }) => ({\n        ...acc,\n        [key_final]: row[key_init]?.$t,\n      }),\n      {}\n    )\n  );\n  console.log({ streaks_raw });\n  var streaks = streaks_raw.reduce(\n    (acc, { game, streaks }) => ({\n      ...acc,\n      [game]: {\n        ...(acc[game] || {}),\n        streaks: [...((acc[game] && acc[game].streaks) || []), streaks],\n      },\n    }),\n    {}\n  );\n  console.log({ streaks });\n  return { stats: structured, streaks };\n};\n\nfunction StatsTabsCard(props) {\n  const { category, subcategory, GameID, teamsData } = props;\n  var [teamA_mini, teamB_mini] = GameID.split(\"@\").map(\n    (ea) => ea.split(\" \").reverse()[0]\n  );\n  const { stats } = useSelector(({ teamStats }) => {\n    try {\n      return teamStats[category][subcategory];\n    } catch (err) {\n      return {};\n    }\n  });\n  const statA = stats &&\n    Object.keys(stats).includes(teamA_mini) && {\n      stats: stats[teamA_mini],\n      teamA_mini,\n      teamA: teamsData.teamA,\n      teamA_Img: teamsData.teamA_Img,\n      colorA: teamsData.colorA,\n    };\n  const statB = stats &&\n    Object.keys(stats).includes(teamB_mini) && {\n      stats: stats[teamB_mini],\n      teamB_mini,\n      teamB: teamsData.teamB,\n      teamB_Img: teamsData.teamB_Img,\n      colorB: teamsData.colorB,\n    };\n\n  const game_mini = `${teamA_mini}@${teamB_mini}`;\n  const { streaks } = useSelector(({ teamStats }) => {\n    {\n      try {\n        return teamStats[category][subcategory][\"streaks\"][game_mini];\n      } catch (err) {\n        return {};\n      }\n    }\n  });\n  \n  if (!stats) return <></>;\n  return (\n    (Object.keys(stats).includes(teamA_mini) ||\n      Object.keys(stats).includes(teamB_mini)) && (\n      <div className=\"col s12 \">\n        <div className=\"card mb-0px p0 round-card\">\n          <Tabs id=\"StatTabs\" className=\"stats-tabs z-depth-1\">\n            <Tab\n              options={{\n                duration: 300,\n                onShow: null,\n                responsiveThreshold: Infinity,\n                swipeable: false,\n              }}\n              active\n              title=\"Matchup\"\n            >\n              <MatchupTab {...{ statA, statB }} />\n            </Tab>\n            <Tab\n              options={{\n                duration: 300,\n                onShow: null,\n                responsiveThreshold: Infinity,\n                swipeable: false,\n              }}\n              // active\n              title=\"Odds\"\n            >\n              <OddsTab {...{ statA, statB }} />\n            </Tab>\n            <Tab\n              options={{\n                duration: 300,\n                onShow: null,\n                responsiveThreshold: Infinity,\n                swipeable: false,\n              }}\n              // active\n              title=\"Trends\"\n            >\n              <TrendsTab {...{ statA, statB }} />\n            </Tab>\n            <Tab\n              options={{\n                duration: 300,\n                onShow: null,\n                responsiveThreshold: Infinity,\n                swipeable: false,\n              }}\n              // active\n              title=\"Injuries\"\n            >\n              <InjuriesTab {...{ statA, statB }} />\n            </Tab>\n            <Tab\n              options={{\n                duration: 300,\n                onShow: null,\n                responsiveThreshold: Infinity,\n                swipeable: false,\n              }}\n              // active\n              title=\"Streaks\"\n            >\n              <StreaksTab {...{ statA, statB, streaks }} />\n            </Tab>\n          </Tabs>\n        </div>\n      </div>\n    )\n  );\n}\n\nexport default StatsTabsCard;\n","/home/nox/Documents/projects/nba-injuries-report-app/src/store/reducers/teamStatsReducer.js",[],"/home/nox/Documents/projects/nba-injuries-report-app/src/components/StatsCardWrapper.js",["186","187","188","189","190","191","192","193"],"import React, { useEffect, useState } from \"react\";\nimport { connect, useSelector } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { post_fetch_api_at_stat_key } from \"../views/StatsTabsCard2\";\nimport { structure_matchup_data } from \"./stats_cards_components/basketball-nba-tabs/MatchTab\";\n\nconst get_each_config = async ({ config, category, subcategory }) => {\n  const [key, ob] = config;\n  const { apis, structure_data } = ob;\n  var data_ar = [];\n  for (var i = 0; i < apis.length; i++) {\n    await fetch(apis[i])\n      .then((resp) => resp.json())\n      .then((data) => data_ar.push(data))\n      .catch(() => data_ar.push([]));\n  }\n  await post_fetch_api_at_stat_key({\n    data_ar,\n    category,\n    subcategory,\n    structure_data,\n  });\n};\n\nfunction StatsCardWrapper(props) {\n  const {\n    post_fetch_api_at_stat_key,\n    category,\n    subcategory,\n    configs,\n    match_api,\n    sag_api,\n  } = props;\n\n  const [inti_once, set_inti_once] = useState(false);\n  const init_fetch = () => {\n    var data_ar = [];\n    set_inti_once(true);\n    Object.entries(configs).forEach((config) =>\n      get_each_config({ config, category, subcategory })\n    );\n  };\n  useEffect(() => {\n    if (inti_once) return;\n    init_fetch();\n  }, [inti_once]);\n  const [a, set_a] = useState(false);\n  useEffect(() => {\n    setTimeout(() => {\n      set_a(true);\n    }, 3000);\n  }, [a]);\n\n  return <>{props.children}</>;\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(\n  StatsCardWrapper\n);\n","/home/nox/Documents/projects/nba-injuries-report-app/src/store/actions/teamStatsActions.js",["194"],"export const updateTeamStatsAction = (obj) => {\n  return (dispach, getState) => {\n    // console.log('in updateTeamStatsAction', obj)\n    return dispach({\n      type: \"SET_TEAM_STATS_DATA_FOR_SUBCAT\",\n      ...obj,\n    });\n  };\n};\n\nexport const set_stats_at_key_action = (obj) => {\n  return (dispach, getState) => {\n    // console.log('in updateTeamStatsAction', obj)\n    return dispach({ type: \"SET_STATS_AT_KEY\", ...obj });\n  };\n};\n\nexport const updateGameStreaksAction = (obj) => {\n  return (dispach, getState) => {\n    // console.log('in updateGameStreaksAction', obj)\n    return dispach({\n      type: \"SET_GAME_STREAKS_DATA_FOR_SUBCAT\",\n      ...obj,\n    });\n  };\n};\n\nexport const get_team_stats_at_key_only_action = ({ team, category, subcategory, key }) => {\n  return (dispach, getState) => {\n    try {\n      return getState().teamStats[category][subcategory].stats[key][team];\n    } catch (err) {\n      return {};\n    }\n  };\n};\nexport const get_all_team_stats_action = ({ team, category, subcategory, keys }) => {\n  return (dispach, getState) => {\n    const store = getState();\n    try {\n      return Object.fromEntries(\n        ['a', ]\n      )\n    } catch (err) {\n      return {};\n    }\n  };\n};\n","/home/nox/Documents/projects/nba-injuries-report-app/src/views/GamePage.js",["195","196","197","198","199","200"],"import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation, useRouteMatch } from \"react-router\";\nimport LargeLogo from \"../components/LargeLogo\";\nimport StatsCardWrapper from \"../components/StatsCardWrapper\";\nimport { get_team_data } from \"../utils/utils\";\n// import StatsTabsCard, { statsPostFetchFn } from \"./StatsTabsCard\";\nimport StatsTabsCard2, { post_fetch_api_at_stat_key } from \"./StatsTabsCard2\";\nimport {\n  updateGameStreaksAction,\n  updateTeamStatsAction,\n} from \"../store/actions/teamStatsActions\";\nimport { structure_matchup_data } from \"../components/stats_cards_components/basketball-nba-tabs/MatchTab\";\n\nfunction GamePage(props) {\n  const dispatch = useDispatch();\n  const match = useRouteMatch();\n  const { gameid } = match.params;\n  const category = \"basketball\";\n  const subcategory = \"nba\";\n  const GameID = gameid.replaceAll(\"_\", \" \");\n\n  var [teamA_mini, teamB_mini] = GameID.split(\"@\").map(\n    (ea) => ea.split(\" \").reverse()[0]\n  );\n\n  const teamAData = get_team_data(teamA_mini);\n  const teamBData = get_team_data(teamB_mini);\n  const teamsData = {\n    teamA: teamAData.teamName,\n    teamA_Img: teamAData.teamImg,\n    colorA: teamAData.color1,\n    teamB: teamBData.teamName,\n    colorB: teamBData.color1,\n    teamB_Img: teamBData.teamImg,\n  };\n\n  // const { apis } = useSelector(\n  //   ({ teamStats }) => teamStats[category][subcategory]\n  // );\n\n  return (\n    <div className=\"container\">\n      <StatsCardWrapper\n        // {...Object.fromEntries(apis)}\n        {...{\n          configs: {\n            matchup: {\n              apis: [\n                // match_api,\n                \"https://spreadsheets.google.com/feeds/list/1cUcZSRXi5ksKsHqTnQGTtWkhflNbxUpTTwaPmLv-cmk/1/public/values?alt=json\",\n                // sag_api\n                \"https://spreadsheets.google.com/feeds/list/1cUcZSRXi5ksKsHqTnQGTtWkhflNbxUpTTwaPmLv-cmk/4/public/values?alt=json\",\n              ],\n              structure_data: structure_matchup_data,\n            },\n          },\n        }}\n        {...{ category, subcategory, post_fetch_api_at_stat_key }}\n      >\n        <StatsTabsCard2 {...{ category, subcategory, GameID, teamsData }} />\n      </StatsCardWrapper>\n    </div>\n  );\n}\n\nexport default GamePage;\n","/home/nox/Documents/projects/nba-injuries-report-app/src/views/StatsTabsCard2.js",["201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235"],"import { relativeTimeRounding } from \"moment\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Tabs, Tab } from \"react-materialize\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { store } from \"..\";\nimport LargeLogo from \"../components/LargeLogo\";\nimport SmallLogo from \"../components/SmallLogo\";\nimport { MatchupTab, structure_matchup_data } from \"../components/stats_cards_components/basketball-nba-tabs/MatchTab\";\nimport { both, higher_better, lower_better, SingleStat, TeamBar } from \"../components/stats_cards_components/stats_cards_components\";\nimport { get_all_team_stats_action, set_stats_at_key_action} from '../store/actions/teamStatsActions'\n\nconst OddsTab = ({ statA, statB }) => {\n  const { teamA, teamA_Img, colorA } = statA;\n  const oddsA = (statA && statA?.stats[\"odds\"]) || {};\n  const { teamB, teamB_Img, colorB } = statB;\n  const oddsB = (statB && statB?.stats[\"odds\"]) || {};\n  // console.log(\"odds\", { oddsA, oddsB });\n  const oddsPair_mapping = [\n    // { head: \"Team\", key: \"team\" },\n    // { head: \"Rotation\", key: \"rotation\" },\n    // { head: \"Time\", key: \"time\" },\n    { head: \"Open\", key: \"open\" },\n    { head: \"Consensus\", key: \"consensus\" },\n    { head: \"BetMGM\", key: \"betmgm\" },\n    { head: \"SportsBetting\", key: \"sportsbetting\" },\n    { head: \"Wynn\", key: \"wynn\" },\n    { head: \"WH\", key: \"wh\" },\n    { head: \"DK\", key: \"dk\" },\n    { head: \"Circa\", key: \"circa\" },\n  ];\n\n  return (\n    <div className=\"card-content\">\n      {oddsA && Object.keys(oddsA).length != 0 ? (\n        <>\n          <div className=\"row-flex align-\">\n            <div className=\"col-flex w-200px justify-flex-start\">\n              <LargeLogo image={teamA_Img} />\n              <span className=\"bold center\">{teamA}</span>\n            </div>\n            <h5 className=\"center\">vs</h5>\n            <div className=\"col-flex w-200px justify-flex-start\">\n              <LargeLogo image={teamB_Img} />\n              <span className=\"bold center\">{teamB}</span>\n            </div>\n          </div>\n          <div className=\"spacing-20px\"></div>\n          <h5 className=\"center\">Odds</h5>\n          <div className=\"spacing-20px\"></div>\n          <div className=\"m-auto max_w-250px\">\n            {oddsPair_mapping.map(({ head, key }) => (\n              <>\n                <SingleStat\n                  statLeft={head}\n                  statRight={oddsA[key]}\n                  lval={20}\n                  rval={80}\n                  // statTitle={head}\n                  {...{ colorA, colorB }}\n                />\n                <div className=\"spacing-10px\"></div>\n              </>\n            ))}\n          </div>\n        </>\n      ) : (\n        <h5 className=\"center\">No Odds yet</h5>\n      )}\n    </div>\n  );\n};\n\nconst TrendsTab = ({ statA, statB }) => {\n  const { teamA, teamA_Img, colorA } = statA;\n  const trendsA = (statA && statA?.stats?.trends) || {};\n  const { teamB, teamB_Img, colorB } = statB;\n  const trendsB = (statB && statB?.stats?.trends) || {};\n  // console.log(\"trends\", { trendsA, trendsB }, colorA, colorB);\n\n  const trendsPair_mapping = [\n    // { head: \"Teams\", key: \"teams\" },\n    { head: \"Win Loss\", key: \"win-loss\" },\n    { head: \"Streak\", key: \"streak\" },\n    { head: \"ATS\", key: \"ats\" },\n    { head: \"Open\", key: \"open\" },\n    { head: \"Side\", key: \"side\" },\n    { head: \"Money\", key: \"money\" },\n    { head: \"OU\", key: \"ou\" },\n  ];\n\n  return (trendsA && Object.keys(trendsA).length != 0) ||\n    (trendsB && Object.keys(trendsB).length != 0) ? (\n    <div className=\"card-content\">\n      <TeamBar\n        midTitle={\"Trends\"}\n        {...{ teamA, teamA_Img, teamB, teamB_Img }}\n      />\n      <div className=\"bottom-margin-30px\"></div>\n      <table className=\"hide-on-small-only\">\n        <tbody>\n          <tr>\n            <td>Teams</td>\n            {trendsPair_mapping.map(({ head, key }) => (\n              <td>{head}</td>\n            ))}\n          </tr>\n          <tr>\n            <td style={{ borderBottom: `3px solid ${colorA}` }}>\n              {trendsA[\"teams\"]}\n            </td>\n            {trendsPair_mapping.map(({ head, key }) => (\n              <td>{trendsA[key]}</td>\n            ))}\n          </tr>\n          <tr>\n            <td style={{ borderBottom: `4px solid ${colorB}` }}>\n              {trendsB[\"teams\"]}\n            </td>\n            {trendsPair_mapping.map(({ head, key }) => (\n              <td>{trendsB[key]}</td>\n            ))}\n          </tr>\n        </tbody>\n      </table>\n      <table className=\"hide-on-med-and-up\">\n        <tbody>\n          {trendsPair_mapping.map(({ head, key }) => (\n            <SingleStat\n              statLeft={trendsA[key]}\n              statRight={trendsB[key]}\n              show_line={true}\n              statTitle={head}\n              {...{ colorA, colorB }}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  ) : (\n    <div className=\"card-content\">\n      <p className=\"flow-text center\">No Trends at the moment</p>\n    </div>\n  );\n};\n\nconst InjuriesTab = ({ statA, statB }) => {\n  const { teamA, teamA_Img, colorA } = statA;\n  const injuriesA = (statA && statA?.stats?.injuries) || [];\n  const { teamB, teamB_Img, colorB } = statB;\n  const injuriesB = (statB && statB?.stats?.injuries) || [];\n  // console.log({injuriesA, injuriesB})\n  const key_mapping_injuries = [\n    {\n      key_head: \"Team\",\n      key_init: \"gsx$teamid\",\n      key_final: \"team\",\n    },\n    {\n      key_head: \"Team\",\n      key_init: \"gsx$team\",\n      key_final: \"teams\",\n    },\n    {\n      key_head: \"Player\",\n      key_init: \"gsx$player\",\n      key_final: \"player\",\n    },\n    {\n      key_head: \"Position\",\n      key_init: \"gsx$position\",\n      key_final: \"position\",\n    },\n    {\n      key_head: \"Updated\",\n      key_init: \"gsx$updated\",\n      key_final: \"updated\",\n    },\n    {\n      key_head: \"Injury\",\n      key_init: \"gsx$injury\",\n      key_final: \"injury\",\n    },\n    {\n      key_head: \"Injury Status\",\n      key_init: \"gsx$injurystatus\",\n      key_final: \"injurystatus\",\n    },\n    {\n      key_head: \"PositionNo\",\n      key_init: \"gsx$positionno\",\n      key_final: \"positionno\",\n    },\n  ];\n  return (\n    <div className=\"card-content\">\n      <h5 className=\"center\">Injuries</h5>\n      {[\n        { injuries: injuriesA, team_Img: teamA_Img, team: teamA },\n        { injuries: injuriesB, team_Img: teamB_Img, team: teamB },\n      ].map(({ injuries, team_Img, team }) => (\n        <>\n          <div className=\"row-flex flex-start\">\n            <LargeLogo image={team_Img} />\n            <h5 className=\"bold center\">{team}</h5>\n          </div>\n          <div className=\"spacing-10px\"></div>\n\n          {injuries && injuries.length != 0 ? (\n            <>\n              <div className=\"hide-on-small-only\">\n                <table>\n                  <tbody>\n                    <tr>\n                      <th>Player</th>\n                      <th>Position</th>\n                      <th>Updated</th>\n                      <th>Injury</th>\n                      <th>Injury Status</th>\n                    </tr>\n                    {injuries?.map(\n                      ({\n                        player,\n                        position,\n                        updated,\n                        injury,\n                        injurystatus,\n                        positionno,\n                      }) => (\n                        <>\n                          <tr>\n                            <th>{player}</th>\n                            <td>\n                              {position}/{positionno}\n                            </td>\n                            <td>{updated}</td>\n                            <td>{injury}</td>\n                            <td>{injurystatus}</td>\n                          </tr>\n                        </>\n                      )\n                    )}\n                  </tbody>\n                </table>\n              </div>\n              <div className=\"hide-on-med-and-up\">\n                <table className=\"small-table\">\n                  <tbody>\n                    <tr>\n                      <th>Player</th>\n                      <th>Position</th>\n                      <th>Updated</th>\n                      <th>Injury</th>\n                    </tr>\n                    {injuries?.map(\n                      ({\n                        player,\n                        position,\n                        updated,\n                        injury,\n                        injurystatus,\n                        positionno,\n                      }) => (\n                        <>\n                          <tr>\n                            <th>{player}</th>\n                            <td>\n                              {position}/{positionno}\n                            </td>\n                            <td>{updated}</td>\n                            <td>{injury}</td>\n                          </tr>\n                          <tr>\n                            <td colSpan=\"4\">\n                              <span className=\"head\">Status: </span>\n                              {injurystatus}\n                            </td>\n                          </tr>\n                        </>\n                      )\n                    )}\n                  </tbody>\n                </table>\n              </div>\n            </>\n          ) : (\n            <h6 className=\"center head\">No Injuries</h6>\n          )}\n        </>\n      ))}\n    </div>\n  );\n};\n\nconst StreaksTab = ({ statA, statB, streaks }) => {\n  const { teamA, teamA_Img, colorA } = statA;\n  const { teamB, teamB_Img, colorB } = statB;\n  return (\n    <div className=\"card-content streaks-tab\">\n      <TeamBar\n        midTitle={\"Streaks\"}\n        {...{ teamA, teamA_Img, teamB, teamB_Img }}\n      />\n      {streaks && streaks.length > 0 ? (\n        streaks.map((streak) => (\n          <>\n            <div className=\"spacing-20px\"></div>\n            <p>{streak}</p>\n            <div className=\"spacing-5px\"></div>\n            <hr />\n          </>\n        ))\n      ) : (\n        <h5 className=\"center head\">No Streaks</h5>\n      )}\n    </div>\n  );\n};\n\nconst keyPairs_primary = {\n  team: \"gsx$teams\",\n};\n\nconst keyPairs_matchup = {\n  team: \"gsx$teams\",\n  SU: \"gsx$_d5fpr\",\n  ATS: \"gsx$_d6ua4\",\n  \"avg line\": \"gsx$_d88ul\",\n  \"O/U\": \"gsx$_dkvya\",\n  \"avg total\": \"gsx$_dmair\",\n  FG: \"gsx$teams_2\",\n  \"FG%\": \"gsx$_dp3nl\",\n  FT: \"gsx$_df9om\",\n  \"FT%\": \"gsx$_dgo93\",\n  \"3s\": \"gsx$_di2tg\",\n  \"3s%\": \"gsx$_djhdx\",\n  BLKS: \"gsx$_dw4je\",\n  \"O-RBND\": \"gsx$_dxj3v\",\n  RBND: \"gsx$_dyxo8\",\n  Fouls: \"gsx$_e0c8p\",\n  AST: \"gsx$_dqi9q\",\n  Turnovers: \"gsx$_drwu7\",\n  Q1: \"gsx$_dtbek\",\n  Q2: \"gsx$_dupz1\",\n  Q3: \"gsx$_e7d2q\",\n  Q4: \"gsx$_e8rn7\",\n  \"Avg Score\": \"gsx$_ea67k\",\n  \"Opp FG\": \"gsx$opps\",\n  \"Opp FG%\": \"gsx$_e1qt2\",\n  \"Opp FT\": \"gsx$_e35dj\",\n  \"Opp FT%\": \"gsx$_e4jxw\",\n  \"Opp 3s\": \"gsx$_e5yid\",\n  \"Opp 3s%\": \"gsx$_eilm2\",\n  \"Opp BLKS\": \"gsx$_ek06j\",\n  \"Opp O-RBND\": \"gsx$_eleqw\",\n  \"Opp RBND\": \"gsx$_emtbd\",\n  \"Opp Fouls\": \"gsx$_eczce\",\n  \"Opp AST\": \"gsx$_eedwv\",\n  \"Opp Turnovers\": \"gsx$_efsh8\",\n  \"Opp Q1\": \"gsx$_eh71p\",\n  \"Opp Q2\": \"gsx$_etu5e\",\n  \"Opp Q3\": \"gsx$_ev8pv\",\n  \"Opp Q4\": \"gsx$_ewna8\",\n  \"Opp Avg Score\": \"gsx$_ey1up\",\n};\n\nconst keyPairs_matchup_sag = {\n  team: \"gsx$teams\",\n  rating: \"gsx$rating\",\n  points: \"gsx$points\",\n};\n\nconst keyPairs_trends = {\n  team: \"gsx$team\",\n  teams: \"gsx$teams\",\n  \"win-loss\": \"gsx$win-loss\",\n  streak: \"gsx$streak\",\n  ats: \"gsx$ats\",\n  open: \"gsx$open\",\n  side: \"gsx$side\",\n  money: \"gsx$money\",\n  ou: \"gsx$ou\",\n};\n\nconst keyPairs_odds = {\n  team: \"gsx$team\",\n  rotation: \"gsx$rotation\",\n  time: \"gsx$time\",\n  open: \"gsx$open\",\n  consensus: \"gsx$consensus\",\n  betmgm: \"gsx$betmgm\",\n  sportsbetting: \"gsx$sportsbetting\",\n  wynn: \"gsx$wynn\",\n  wh: \"gsx$wh\",\n  dk: \"gsx$dk\",\n  circa: \"gsx$circa\",\n};\n\nconst keyPairs_injuries = {\n  team: \"gsx$teamid\",\n  teams: \"gsx$team\",\n  player: \"gsx$player\",\n  position: \"gsx$position\",\n  updated: \"gsx$updated\",\n  injury: \"gsx$injury\",\n  injurystatus: \"gsx$injurystatus\",\n  positionno: \"gsx$positionno\",\n};\n\nconst keyPairs_mapping_streaks = [\n  { key_init: \"gsx$game\", key_final: \"game\", key_head: \"Game\" },\n  { key_init: \"gsx$streaks\", key_final: \"streaks\", key_head: \"Streaks\" },\n];\n\n// export const statsPostFetchFn = (data_ar) => {\n//   // console.log(\"data_ar =>\", data_ar);\n//   // var raw = data_ar.reduce((acc, ea) => [...acc, ...ea?.feed?.entry], []);\n//   var teams = data_ar[0].feed.entry.map(\n//     (row) => row[keyPairs_primary[\"team\"]][\"$t\"]\n//   );\n//   teams = Array.from(new Set(teams).add(\"76ers\"))\n//     .filter((ea) => ea != \"\")\n//     .sort();\n//   var structured = teams.reduce((acc, team) => ({ ...acc, [team]: {} }), {});\n//   var matchup_raw = data_ar[0].feed.entry;\n//   for (var row of matchup_raw) {\n//     row = Object.entries(keyPairs_matchup).reduce(\n//       (acc, [key_final, key_init]) => ({\n//         ...acc,\n//         [key_final]: row[key_init]?.$t || \"\",\n//       }),\n//       {}\n//     );\n//     var team = row.team;\n//     if (team == \"76ers\" || team == \"Seventysixers\") team = \"76ers\";\n//     if (teams.includes(team))\n//       structured[team][\"matchup\"] = {\n//         ...structured[team][\"matchup\"],\n//         ...row,\n//       };\n//   }\n\n//   var matchup_sag_raw = data_ar[1].feed.entry;\n//   for (var row of matchup_sag_raw) {\n//     row = Object.entries(keyPairs_matchup_sag).reduce(\n//       (acc, [key_final, key_init]) => ({\n//         ...acc,\n//         [key_final]: row[key_init]?.$t || \"\",\n//       }),\n//       {}\n//     );\n//     var team = row.team;\n//     if (team == \"76ers\" || team == \"Seventysixers\") team = \"76ers\";\n//     if (teams.includes(team))\n//       structured[team][\"matchup\"] = {\n//         ...structured[team][\"matchup\"],\n//         ...row,\n//       };\n//   }\n\n//   var trends_raw = data_ar[2].feed.entry;\n//   // console.log(trends_raw);\n//   for (var row of trends_raw) {\n//     row = Object.entries(keyPairs_trends).reduce(\n//       (acc, [key_final, key_init]) => ({\n//         ...acc,\n//         [key_final]: row[key_init]?.$t || \"\",\n//       }),\n//       {}\n//     );\n//     var team = row.team;\n//     if (team == \"76ers\" || team == \"Seventysixers\") team = \"76ers\";\n//     // console.log('team', team)\n//     if (teams.includes(team)) {\n//       // console.log('row trends', team, row)\n//       structured[team][\"trends\"] = {\n//         ...structured[team][\"trends\"],\n//         ...row,\n//       };\n//     }\n//   }\n\n//   var odds_raw = data_ar[3].feed.entry;\n//   for (var row of odds_raw) {\n//     row = Object.entries(keyPairs_odds).reduce(\n//       (acc, [key_final, key_init]) => ({\n//         ...acc,\n//         [key_final]: row[key_init]?.$t || \"\",\n//       }),\n//       {}\n//     );\n//     var team = row.team;\n//     if (team == \"76ers\" || team == \"Seventysixers\") team = \"76ers\";\n//     if (teams.includes(team)) {\n//       // console.log('row odds', team, row)\n//       structured[team][\"odds\"] = {\n//         ...structured[team][\"odds\"],\n//         ...row,\n//       };\n//     }\n//   }\n\n//   var injuries_raw = data_ar[4].feed.entry;\n//   // console.log({injuries_raw});\n//   for (var row of injuries_raw) {\n//     row = Object.entries(keyPairs_injuries).reduce(\n//       (acc, [key_final, key_init]) => ({\n//         ...acc,\n//         [key_final]: row[key_init]?.$t || \"\",\n//       }),\n//       {}\n//     );\n//     var team = row.team;\n//     if (team == \"76ers\" || team == \"Seventysixers\") team = \"76ers\";\n//     if (teams.includes(team)) {\n//       // console.log('row injuries', team, row)\n//       structured[team][\"injuries\"] = [\n//         ...((structured[team] && structured[team][\"injuries\"]) || []),\n//         row,\n//       ];\n//     }\n//   }\n\n//   var streaks_raw = data_ar[5].feed.entry.map((row) =>\n//     keyPairs_mapping_streaks.reduce(\n//       (acc, { key_init, key_final }) => ({\n//         ...acc,\n//         [key_final]: row[key_init]?.$t,\n//       }),\n//       {}\n//     )\n//   );\n//   // console.log({ streaks_raw });\n//   var streaks = streaks_raw.reduce(\n//     (acc, { game, streaks }) => ({\n//       ...acc,\n//       [game]: {\n//         ...(acc[game] || {}),\n//         streaks: [...((acc[game] && acc[game].streaks) || []), streaks],\n//       },\n//     }),\n//     {}\n//   );\n//   // console.log({ streaks });\n//   return { stats: structured, streaks };\n// };\n\nexport const dispatch_structured_data = ({category, subcategory, structured_data})=>{\n  var {stat_key, stat_structure} = structured_data;\n  store.dispatch(set_stats_at_key_action({\n    category, subcategory,\n    stat_key, stat_structure\n  }))\n}\n\nexport const post_fetch_api_at_stat_key= ({data_ar, structure_data, category, subcategory}) => {\n  return dispatch_structured_data({category, subcategory, structured_data:structure_data(data_ar) })\n}\n\nconst get_team_stats = ({team, configs, category, subcategory, stats})=>{\n  if(!stats) return {}\n  var ar = Object.keys(configs).map(([key])=>(\n    [[key], [stats[key][team]] || null]\n  ))\n  return Object.entries(ar);\n}\n\nfunction StatsTabsCard2(props) {\n  console.log('StatsTabCard 2')\n  const { category, subcategory, GameID, teamsData } = props;\n  // console.log(category, subcategory, GameID)\n  var [teamA_mini, teamB_mini] = GameID.split(\"@\").map(\n    (ea) => ea.split(\" \").reverse()[0]\n  );\n  const configs = {\n    matchup: {\n      apis: [\n        // match_api,\n        \"https://spreadsheets.google.com/feeds/list/1cUcZSRXi5ksKsHqTnQGTtWkhflNbxUpTTwaPmLv-cmk/1/public/values?alt=json\",\n        // sag_api\n        \"https://spreadsheets.google.com/feeds/list/1cUcZSRXi5ksKsHqTnQGTtWkhflNbxUpTTwaPmLv-cmk/4/public/values?alt=json\",\n      ],\n      structure_data: structure_matchup_data,\n    }\n  }\n  const dispatch = useDispatch()\n  console.log(teamA_mini)\n  const stats = useSelector(store=>store.teamStats[category][subcategory].stats);\n  if(!stats) return <><h1 className=\"center\">Loading...</h1></>\n  const statA = dispatch(get_all_team_stats_action({team: 'Clippers', category, subcategory, key:'matchup', }));\n  console.log('statA', statA);\n  return <>\n    <h1 className=\"center\">hello</h1>\n  </>\n}\n\nexport default StatsTabsCard2;\n","/home/nox/Documents/projects/nba-injuries-report-app/src/components/stats_cards_components/stats_cards_components.js",["236","237","238","239"],"import React from 'react';\nimport LargeLogo from '../LargeLogo';\n\nexport const BarLine = (props) => {\n  const { left, right, colorA, colorB, side } = props;\n  return (\n    <div className=\"row-flex barline\">\n      <div\n        style={{\n          backgroundColor: colorA,\n          width: `${left - 0.3}%`,\n          opacity: side != -1 ? (side == 0 ? \"1\" : \"0.2\") : \"1\",\n        }}\n        className=\"bar-left mh-10px\"\n      ></div>\n      <div\n        style={{ backgroundColor: \"white\", width: `${0.6}%` }}\n        className=\"bar-left mh-10px\"\n      ></div>\n      <div\n        style={{\n          backgroundColor: colorB,\n          width: `${right - 0.3}%`,\n          opacity: side != -1 ? (side == 1 ? \"1\" : \"0.2\") : \"1\",\n        }}\n        className=\"bar-right mh-10px\"\n      ></div>\n    </div>\n  );\n};\n\nexport const TeamBar = ({ teamA, teamB, teamA_Img, teamB_Img, midTitle }) => {\n  return (\n    <div className=\"row-flex justify-space-between\">\n      <div className=\"col-flex\">\n        <LargeLogo image={teamA_Img} />\n        <span className=\"bold center\">{teamA}</span>\n      </div>\n      <h5 className=\"center\">{midTitle}</h5>\n      <div className=\"col-flex\">\n        <LargeLogo image={teamB_Img} />\n        <span className=\"bold center\">{teamB}</span>\n      </div>\n    </div>\n  );\n};\n\nexport const SingleStat = ({\n  statLeft,\n  statRight,\n  statTitle,\n  barBottomText,\n  colorA,\n  colorB,\n  side = -1,\n  show_line = false,\n  lval = 50,\n  rval = 50,\n}) => {\n  const left = (lval * 100) / (lval + rval);\n  const right = (rval * 100) / (lval + rval);\n  return (\n    <div className=\"SingleStatContainer w-100\">\n      <div className=\"row-flex justify-space-between\">\n        <span>{statLeft}</span>\n        <span className=\"bold\">{statTitle}</span>\n        <span>{statRight}</span>\n      </div>\n      {show_line && <BarLine {...{ left, right, colorA, colorB, side }} />}\n      {barBottomText && <p className=\"center grey-text\">{barBottomText}</p>}\n      {!barBottomText && <div className=\"spacing-5px\"></div>}\n    </div>\n  );\n};\n\nexport const get_n = (n) => parseFloat(n.split(\" \").reverse()[0]);\nexport const higher_better = (a, b) => {\n  a = get_n(a);\n  b = get_n(b);\n  return a > b ? 0 : 1;\n};\nexport const lower_better = (a, b) => {\n  a = get_n(a);\n  b = get_n(b);\n  return b > a ? 0 : 1;\n};\nexport const both = (a, b) => -1;",["240","241"],"/home/nox/Documents/projects/nba-injuries-report-app/src/components/stats_cards_components/basketball-nba-tabs/MatchTab.js",["242","243"],"import _ from 'lodash'\nimport {\n  both,\n  higher_better,\n  lower_better,\n  SingleStat,\n  structure_raw_row_from_key_mapping,\n  TeamBar,\n} from \"../stats_cards_components\";\n\nconst key_mapping_matchup = [\n  {\n    key_head: \"Team\",\n    key_init: \"gsx$teams\",\n    key_final: \"team\",\n    side_eval: null,\n  },\n  {\n    key_head: \"Against The Spread\",\n    key_init: \"gsx$_d6ua4\",\n    key_final: \"ATS\",\n    side_eval: higher_better,\n  },\n  {\n    key_head: \"Straight Up\",\n    key_init: \"gsx$_d5fpr\",\n    key_final: \"SU\",\n    side_eval: higher_better,\n  },\n  {\n    key_head: \"O/U\",\n    key_init: \"gsx$_dkvya\",\n    key_final: \"O/U\",\n    side_eval: both,\n  },\n  {\n    key_head: \"Average Line\",\n    key_init: \"gsx$_d88ul\",\n    key_final: \"avg_line\",\n    side_eval: lower_better,\n  },\n  {\n    key_head: \"Average Total\",\n    key_init: \"gsx$_dmair\",\n    key_final: \"avg_total\",\n    side_eval: both,\n  },\n  {\n    key_head: \"FG\",\n    key_init: \"gsx$teams_2\",\n    key_final: \"FG\",\n    side_eval: higher_better,\n  },\n  {\n    key_head: \"FG%\",\n    key_init: \"gsx$_dp3nl\",\n    key_final: \"FG%\",\n    side_eval: higher_better,\n  },\n  {\n    key_head: \"FT\",\n    key_init: \"gsx$_df9om\",\n    key_final: \"FT\",\n    side_eval: higher_better,\n  },\n  {\n    key_head: \"FT%\",\n    key_init: \"gsx$_dgo93\",\n    key_final: \"FT%\",\n    side_eval: higher_better,\n  },\n  {\n    key_head: \"3s\",\n    key_init: \"gsx$_di2tg\",\n    key_final: \"3s\",\n    side_eval: higher_better,\n  },\n  {\n    key_head: \"3s%\",\n    key_init: \"gsx$_djhdx\",\n    key_final: \"3s%\",\n    side_eval: higher_better,\n  },\n  {\n    key_head: \"BLKS\",\n    key_init: \"gsx$_dw4je\",\n    key_final: \"BLKS\",\n    side_eval: higher_better,\n  },\n  {\n    key_head: \"O-RBND\",\n    key_init: \"gsx$_dxj3v\",\n    key_final: \"O-RBND\",\n    side_eval: higher_better,\n  },\n  {\n    key_head: \"RBND\",\n    key_init: \"gsx$_dyxo8\",\n    key_final: \"RBND\",\n    side_eval: higher_better,\n  },\n  {\n    key_head: \"Fouls\",\n    key_init: \"gsx$_e0c8p\",\n    key_final: \"Fouls\",\n    side_eval: lower_better,\n  },\n  {\n    key_head: \"AST\",\n    key_init: \"gsx$_dqi9q\",\n    key_final: \"AST\",\n    side_eval: higher_better,\n  },\n  {\n    key_head: \"Turnovers\",\n    key_init: \"gsx$_drwu7\",\n    key_final: \"Turnovers\",\n    side_eval: lower_better,\n  },\n  {\n    key_head: \"Q1\",\n    key_init: \"gsx$_dtbek\",\n    key_final: \"Q1\",\n    side_eval: higher_better,\n  },\n  {\n    key_head: \"Q2\",\n    key_init: \"gsx$_dupz1\",\n    key_final: \"Q2\",\n    side_eval: higher_better,\n  },\n  {\n    key_head: \"Q3\",\n    key_init: \"gsx$_e7d2q\",\n    key_final: \"Q3\",\n    side_eval: higher_better,\n  },\n  {\n    key_head: \"Q4\",\n    key_init: \"gsx$_e8rn7\",\n    key_final: \"Q4\",\n    side_eval: higher_better,\n  },\n  {\n    key_head: \"Avg Score\",\n    key_init: \"gsx$_ea67k\",\n    key_final: \"Avg_Score\",\n    side_eval: higher_better,\n  },\n  {\n    key_head: \"Opp FG\",\n    key_init: \"gsx$opps\",\n    key_final: \"Opp FG\",\n    side_eval: lower_better,\n  },\n  {\n    key_head: \"Opp FG%\",\n    key_init: \"gsx$_e1qt2\",\n    key_final: \"Opp FG%\",\n    side_eval: lower_better,\n  },\n  {\n    key_head: \"Opp FT\",\n    key_init: \"gsx$_e35dj\",\n    key_final: \"Opp FT\",\n    side_eval: lower_better,\n  },\n  {\n    key_head: \"Opp FT%\",\n    key_init: \"gsx$_e4jxw\",\n    key_final: \"Opp FT%\",\n    side_eval: lower_better,\n  },\n  {\n    key_head: \"Opp 3s\",\n    key_init: \"gsx$_e5yid\",\n    key_final: \"Opp 3s\",\n    side_eval: lower_better,\n  },\n  {\n    key_head: \"Opp 3s%\",\n    key_init: \"gsx$_eilm2\",\n    key_final: \"Opp 3s%\",\n    side_eval: lower_better,\n  },\n  {\n    key_head: \"Opp BLKS\",\n    key_init: \"gsx$_ek06j\",\n    key_final: \"Opp BLKS\",\n    side_eval: lower_better,\n  },\n  {\n    key_head: \"Opp O-RBND\",\n    key_init: \"gsx$_eleqw\",\n    key_final: \"Opp O-RBND\",\n    side_eval: lower_better,\n  },\n  {\n    key_head: \"Opp RBND\",\n    key_init: \"gsx$_emtbd\",\n    key_final: \"Opp RBND\",\n    side_eval: lower_better,\n  },\n  {\n    key_head: \"Opp Fouls\",\n    key_init: \"gsx$_eczce\",\n    key_final: \"Opp Fouls\",\n    side_eval: higher_better,\n  },\n  {\n    key_head: \"Opp AST\",\n    key_init: \"gsx$_eedwv\",\n    key_final: \"Opp AST\",\n    side_eval: lower_better,\n  },\n  {\n    key_head: \"Opp Turnovers\",\n    key_init: \"gsx$_efsh8\",\n    key_final: \"Opp Turnovers\",\n    side_eval: higher_better,\n  },\n  {\n    key_head: \"Opp Q1\",\n    key_init: \"gsx$_eh71p\",\n    key_final: \"Opp Q1\",\n    side_eval: lower_better,\n  },\n  {\n    key_head: \"Opp Q2\",\n    key_init: \"gsx$_etu5e\",\n    key_final: \"Opp Q2\",\n    side_eval: lower_better,\n  },\n  {\n    key_head: \"Opp Q3\",\n    key_init: \"gsx$_ev8pv\",\n    key_final: \"Opp Q3\",\n    side_eval: lower_better,\n  },\n  {\n    key_head: \"Opp Q4\",\n    key_init: \"gsx$_ewna8\",\n    key_final: \"Opp Q4\",\n    side_eval: lower_better,\n  },\n  {\n    key_head: \"Opp Avg Score\",\n    key_init: \"gsx$_ey1up\",\n    key_final: \"Opp Avg Score\",\n    side_eval: lower_better,\n  },\n];\n\nconst key_mapping_matchup_sag = [\n  {\n    key_head: \"Team\",\n    key_init: \"gsx$teams\",\n    key_final: \"team\",\n    side_eval: null,\n  },\n  {\n    key_head: \"Power Ranking\",\n    key_init: \"gsx$points\",\n    key_final: \"points\",\n    side_eval: lower_better,\n  },\n  {\n    key_head: \"Sagarin Rating\",\n    key_init: \"gsx$rating\",\n    key_final: \"rating\",\n    side_eval: higher_better,\n  },\n];\n\nexport const structure_matchup_data = (data_ar) => {\n  var raw_matchup = data_ar[0].feed.entry;\n  var raw_matchup_sag = data_ar[1].feed.entry;\n  raw_matchup = structure_raw_row_from_key_mapping({raw: raw_matchup, key_mapping: key_mapping_matchup});\n  raw_matchup_sag = structure_raw_row_from_key_mapping({raw: raw_matchup_sag, key_mapping: key_mapping_matchup_sag});\n  // console.log(\"raw_matchup=>\", raw_matchup);\n  \n  var str_matchup =  _.keyBy(\n    _.merge(_.keyBy(raw_matchup, 'team'), _.keyBy(raw_matchup_sag, 'team'), ),\n    'team');\n  delete str_matchup[''];\n  // console.log(\"str_matchup=>\", str_matchup);  \n  return { stat_structure: str_matchup, stat_key: 'matchup' };\n};\n\nexport const MatchupTab = ({ statA, statB }) => {\n  const { teamA, teamA_Img, colorA } = statA;\n  const matchA = (statA && statA?.stats?.matchup) || {};\n  const { teamB, teamB_Img, colorB } = statB;\n  const matchB = (statB && statB?.stats?.matchup) || {};\n\n  const ats_records = key_mapping_matchup.slice(1, 6);\n  const team_matchup = [\n    ...key_mapping_matchup_sag,\n    ...key_mapping_matchup.slice(6),\n  ];\n\n  return (matchA && Object.keys(matchA).length != 0) ||\n    (matchB && Object.keys(matchB).length != 0) ? (\n    <div className=\"card-content\">\n      <TeamBar\n        midTitle={\"ATS Records\"}\n        {...{ teamA, teamA_Img, teamB, teamB_Img }}\n      />\n      <div className=\"bottom-margin-30px\"></div>\n      {ats_records.map((stat_row) => (\n        <>\n          <div className=\"spacing-10px\"></div>\n\n          <SingleStat\n            statLeft={matchA && matchA[stat_row.key]}\n            statRight={matchB && matchB[stat_row.key]}\n            side={\n              stat_row.side_eval\n                ? stat_row.side_eval(matchA[stat_row.key], matchB[stat_row.key])\n                : -1\n            }\n            show_line={true}\n            statTitle={stat_row.head}\n            {...{ colorA, colorB }}\n          />\n        </>\n      ))}\n\n      <div className=\"bottom-margin-30px\"></div>\n\n      <TeamBar\n        midTitle={\"Team Matchup\"}\n        {...{ teamA, teamA_Img, teamB, teamB_Img }}\n      />\n      {team_matchup.map((stat_row) => (\n        <>\n          <div className=\"spacing-10px\"></div>\n\n          <SingleStat\n            statLeft={matchA && matchA[stat_row.key]}\n            statRight={matchB && matchB[stat_row.key]}\n            side={\n              stat_row.side_eval\n                ? stat_row.side_eval(matchA[stat_row.key], matchB[stat_row.key])\n                : -1\n            }\n            show_line={true}\n            statTitle={stat_row.head}\n            {...{ colorA, colorB }}\n          />\n        </>\n      ))}\n    </div>\n  ) : (\n    <div className=\"card-content\">\n      <p className=\"flow-text center\">No Data Fetched at the moment</p>\n    </div>\n  );\n};\n",{"ruleId":"244","severity":1,"message":"245","line":3,"column":17,"nodeType":"246","messageId":"247","endLine":3,"endColumn":25},{"ruleId":"244","severity":1,"message":"248","line":16,"column":20,"nodeType":"246","messageId":"247","endLine":16,"endColumn":31},{"ruleId":"249","replacedBy":"250"},{"ruleId":"251","replacedBy":"252"},{"ruleId":"244","severity":1,"message":"248","line":2,"column":19,"nodeType":"246","messageId":"247","endLine":2,"endColumn":30},{"ruleId":"244","severity":1,"message":"253","line":4,"column":10,"nodeType":"246","messageId":"247","endLine":4,"endColumn":23},{"ruleId":"254","severity":1,"message":"255","line":22,"column":17,"nodeType":"256","endLine":22,"endColumn":76},{"ruleId":"244","severity":1,"message":"257","line":2,"column":10,"nodeType":"246","messageId":"247","endLine":2,"endColumn":18},{"ruleId":"258","severity":1,"message":"259","line":22,"column":6,"nodeType":"260","endLine":22,"endColumn":17,"suggestions":"261"},{"ruleId":"244","severity":1,"message":"262","line":3,"column":7,"nodeType":"246","messageId":"247","endLine":3,"endColumn":17},{"ruleId":"263","severity":1,"message":"264","line":12,"column":14,"nodeType":"265","messageId":"266","endLine":12,"endColumn":16},{"ruleId":"263","severity":1,"message":"264","line":12,"column":33,"nodeType":"265","messageId":"266","endLine":12,"endColumn":35},{"ruleId":"263","severity":1,"message":"264","line":13,"column":14,"nodeType":"265","messageId":"266","endLine":13,"endColumn":16},{"ruleId":"263","severity":1,"message":"264","line":13,"column":35,"nodeType":"265","messageId":"266","endLine":13,"endColumn":37},{"ruleId":"244","severity":1,"message":"267","line":1,"column":10,"nodeType":"246","messageId":"247","endLine":1,"endColumn":21},{"ruleId":"244","severity":1,"message":"268","line":5,"column":8,"nodeType":"246","messageId":"247","endLine":5,"endColumn":17},{"ruleId":"244","severity":1,"message":"269","line":54,"column":7,"nodeType":"246","messageId":"247","endLine":54,"endColumn":14},{"ruleId":"263","severity":1,"message":"264","line":54,"column":54,"nodeType":"265","messageId":"266","endLine":54,"endColumn":56},{"ruleId":"244","severity":1,"message":"270","line":55,"column":7,"nodeType":"246","messageId":"247","endLine":55,"endColumn":22},{"ruleId":"271","severity":1,"message":"272","line":73,"column":7,"nodeType":"273","messageId":"274","endLine":76,"endColumn":9},{"ruleId":"275","severity":1,"message":"276","line":81,"column":30,"nodeType":"273","messageId":"277","endLine":81,"endColumn":32},{"ruleId":"278","severity":1,"message":"279","line":85,"column":12,"nodeType":"246","messageId":"280","endLine":85,"endColumn":15},{"ruleId":"271","severity":1,"message":"281","line":103,"column":11,"nodeType":"273","messageId":"274","endLine":109,"endColumn":14},{"ruleId":"263","severity":1,"message":"264","line":112,"column":55,"nodeType":"265","messageId":"266","endLine":112,"endColumn":57},{"ruleId":"278","severity":1,"message":"282","line":121,"column":12,"nodeType":"246","messageId":"280","endLine":121,"endColumn":16},{"ruleId":"263","severity":1,"message":"283","line":142,"column":40,"nodeType":"265","messageId":"266","endLine":142,"endColumn":42},{"ruleId":"284","severity":1,"message":"285","line":9,"column":13,"nodeType":"256","endLine":9,"endColumn":32},{"ruleId":"284","severity":1,"message":"285","line":7,"column":13,"nodeType":"256","endLine":7,"endColumn":32},{"ruleId":"244","severity":1,"message":"267","line":1,"column":10,"nodeType":"246","messageId":"247","endLine":1,"endColumn":21},{"ruleId":"244","severity":1,"message":"286","line":4,"column":8,"nodeType":"246","messageId":"247","endLine":4,"endColumn":17},{"ruleId":"271","severity":1,"message":"272","line":28,"column":44,"nodeType":"273","messageId":"274","endLine":28,"endColumn":132},{"ruleId":"278","severity":1,"message":"279","line":34,"column":12,"nodeType":"246","messageId":"280","endLine":34,"endColumn":15},{"ruleId":"244","severity":1,"message":"287","line":35,"column":11,"nodeType":"246","messageId":"247","endLine":35,"endColumn":17},{"ruleId":"271","severity":1,"message":"281","line":38,"column":73,"nodeType":"273","messageId":"274","endLine":38,"endColumn":199},{"ruleId":"263","severity":1,"message":"264","line":39,"column":56,"nodeType":"265","messageId":"266","endLine":39,"endColumn":58},{"ruleId":"278","severity":1,"message":"282","line":44,"column":12,"nodeType":"246","messageId":"280","endLine":44,"endColumn":16},{"ruleId":"244","severity":1,"message":"288","line":3,"column":10,"nodeType":"246","messageId":"247","endLine":3,"endColumn":21},{"ruleId":"244","severity":1,"message":"289","line":1,"column":10,"nodeType":"246","messageId":"247","endLine":1,"endColumn":30},{"ruleId":"244","severity":1,"message":"268","line":6,"column":8,"nodeType":"246","messageId":"247","endLine":6,"endColumn":17},{"ruleId":"244","severity":1,"message":"290","line":7,"column":10,"nodeType":"246","messageId":"247","endLine":7,"endColumn":26},{"ruleId":"263","severity":1,"message":"283","line":17,"column":25,"nodeType":"265","messageId":"266","endLine":17,"endColumn":27},{"ruleId":"263","severity":1,"message":"264","line":17,"column":39,"nodeType":"265","messageId":"266","endLine":17,"endColumn":41},{"ruleId":"263","severity":1,"message":"283","line":29,"column":25,"nodeType":"265","messageId":"266","endLine":29,"endColumn":27},{"ruleId":"263","severity":1,"message":"264","line":29,"column":39,"nodeType":"265","messageId":"266","endLine":29,"endColumn":41},{"ruleId":"263","severity":1,"message":"283","line":310,"column":48,"nodeType":"265","messageId":"266","endLine":310,"endColumn":50},{"ruleId":"263","severity":1,"message":"283","line":311,"column":43,"nodeType":"265","messageId":"266","endLine":311,"endColumn":45},{"ruleId":"244","severity":1,"message":"291","line":373,"column":9,"nodeType":"246","messageId":"247","endLine":373,"endColumn":14},{"ruleId":"263","severity":1,"message":"283","line":391,"column":43,"nodeType":"265","messageId":"266","endLine":391,"endColumn":45},{"ruleId":"263","severity":1,"message":"283","line":448,"column":50,"nodeType":"265","messageId":"266","endLine":448,"endColumn":52},{"ruleId":"263","severity":1,"message":"283","line":449,"column":45,"nodeType":"265","messageId":"266","endLine":449,"endColumn":47},{"ruleId":"244","severity":1,"message":"292","line":504,"column":29,"nodeType":"246","messageId":"247","endLine":504,"endColumn":35},{"ruleId":"244","severity":1,"message":"293","line":506,"column":29,"nodeType":"246","messageId":"247","endLine":506,"endColumn":35},{"ruleId":"244","severity":1,"message":"294","line":509,"column":9,"nodeType":"246","messageId":"247","endLine":509,"endColumn":29},{"ruleId":"263","severity":1,"message":"283","line":565,"column":40,"nodeType":"265","messageId":"266","endLine":565,"endColumn":42},{"ruleId":"244","severity":1,"message":"292","line":652,"column":29,"nodeType":"246","messageId":"247","endLine":652,"endColumn":35},{"ruleId":"244","severity":1,"message":"293","line":653,"column":29,"nodeType":"246","messageId":"247","endLine":653,"endColumn":35},{"ruleId":"263","severity":1,"message":"283","line":778,"column":24,"nodeType":"265","messageId":"266","endLine":778,"endColumn":26},{"ruleId":"271","severity":1,"message":"272","line":784,"column":7,"nodeType":"273","messageId":"274","endLine":787,"endColumn":9},{"ruleId":"263","severity":1,"message":"264","line":791,"column":14,"nodeType":"265","messageId":"266","endLine":791,"endColumn":16},{"ruleId":"263","severity":1,"message":"264","line":791,"column":33,"nodeType":"265","messageId":"266","endLine":791,"endColumn":35},{"ruleId":"278","severity":1,"message":"279","line":800,"column":12,"nodeType":"246","messageId":"280","endLine":800,"endColumn":15},{"ruleId":"271","severity":1,"message":"272","line":802,"column":7,"nodeType":"273","messageId":"274","endLine":805,"endColumn":9},{"ruleId":"278","severity":1,"message":"282","line":808,"column":9,"nodeType":"246","messageId":"280","endLine":808,"endColumn":13},{"ruleId":"263","severity":1,"message":"264","line":809,"column":14,"nodeType":"265","messageId":"266","endLine":809,"endColumn":16},{"ruleId":"263","severity":1,"message":"264","line":809,"column":33,"nodeType":"265","messageId":"266","endLine":809,"endColumn":35},{"ruleId":"278","severity":1,"message":"279","line":819,"column":12,"nodeType":"246","messageId":"280","endLine":819,"endColumn":15},{"ruleId":"271","severity":1,"message":"272","line":821,"column":7,"nodeType":"273","messageId":"274","endLine":824,"endColumn":9},{"ruleId":"278","severity":1,"message":"282","line":827,"column":9,"nodeType":"246","messageId":"280","endLine":827,"endColumn":13},{"ruleId":"263","severity":1,"message":"264","line":828,"column":14,"nodeType":"265","messageId":"266","endLine":828,"endColumn":16},{"ruleId":"263","severity":1,"message":"264","line":828,"column":33,"nodeType":"265","messageId":"266","endLine":828,"endColumn":35},{"ruleId":"278","severity":1,"message":"279","line":840,"column":12,"nodeType":"246","messageId":"280","endLine":840,"endColumn":15},{"ruleId":"271","severity":1,"message":"272","line":842,"column":7,"nodeType":"273","messageId":"274","endLine":845,"endColumn":9},{"ruleId":"278","severity":1,"message":"282","line":848,"column":9,"nodeType":"246","messageId":"280","endLine":848,"endColumn":13},{"ruleId":"263","severity":1,"message":"264","line":849,"column":14,"nodeType":"265","messageId":"266","endLine":849,"endColumn":16},{"ruleId":"263","severity":1,"message":"264","line":849,"column":33,"nodeType":"265","messageId":"266","endLine":849,"endColumn":35},{"ruleId":"278","severity":1,"message":"279","line":861,"column":12,"nodeType":"246","messageId":"280","endLine":861,"endColumn":15},{"ruleId":"271","severity":1,"message":"272","line":863,"column":7,"nodeType":"273","messageId":"274","endLine":866,"endColumn":9},{"ruleId":"278","severity":1,"message":"282","line":869,"column":9,"nodeType":"246","messageId":"280","endLine":869,"endColumn":13},{"ruleId":"263","severity":1,"message":"264","line":870,"column":14,"nodeType":"265","messageId":"266","endLine":870,"endColumn":16},{"ruleId":"263","severity":1,"message":"264","line":870,"column":33,"nodeType":"265","messageId":"266","endLine":870,"endColumn":35},{"ruleId":"295","severity":1,"message":"296","line":935,"column":5,"nodeType":"297","messageId":"298","endLine":941,"endColumn":6},{"ruleId":"244","severity":1,"message":"248","line":2,"column":19,"nodeType":"246","messageId":"247","endLine":2,"endColumn":30},{"ruleId":"244","severity":1,"message":"299","line":5,"column":10,"nodeType":"246","messageId":"247","endLine":5,"endColumn":32},{"ruleId":"244","severity":1,"message":"300","line":8,"column":10,"nodeType":"246","messageId":"247","endLine":8,"endColumn":13},{"ruleId":"244","severity":1,"message":"301","line":27,"column":5,"nodeType":"246","messageId":"247","endLine":27,"endColumn":31},{"ruleId":"244","severity":1,"message":"302","line":31,"column":5,"nodeType":"246","messageId":"247","endLine":31,"endColumn":14},{"ruleId":"244","severity":1,"message":"303","line":32,"column":5,"nodeType":"246","messageId":"247","endLine":32,"endColumn":12},{"ruleId":"244","severity":1,"message":"304","line":37,"column":9,"nodeType":"246","messageId":"247","endLine":37,"endColumn":16},{"ruleId":"258","severity":1,"message":"259","line":46,"column":6,"nodeType":"260","endLine":46,"endColumn":17,"suggestions":"305"},{"ruleId":"244","severity":1,"message":"306","line":39,"column":11,"nodeType":"246","messageId":"247","endLine":39,"endColumn":16},{"ruleId":"244","severity":1,"message":"248","line":2,"column":23,"nodeType":"246","messageId":"247","endLine":2,"endColumn":34},{"ruleId":"244","severity":1,"message":"288","line":3,"column":10,"nodeType":"246","messageId":"247","endLine":3,"endColumn":21},{"ruleId":"244","severity":1,"message":"286","line":4,"column":8,"nodeType":"246","messageId":"247","endLine":4,"endColumn":17},{"ruleId":"244","severity":1,"message":"307","line":10,"column":3,"nodeType":"246","messageId":"247","endLine":10,"endColumn":26},{"ruleId":"244","severity":1,"message":"308","line":11,"column":3,"nodeType":"246","messageId":"247","endLine":11,"endColumn":24},{"ruleId":"244","severity":1,"message":"309","line":16,"column":9,"nodeType":"246","messageId":"247","endLine":16,"endColumn":17},{"ruleId":"244","severity":1,"message":"289","line":1,"column":10,"nodeType":"246","messageId":"247","endLine":1,"endColumn":30},{"ruleId":"244","severity":1,"message":"310","line":2,"column":27,"nodeType":"246","messageId":"247","endLine":2,"endColumn":36},{"ruleId":"244","severity":1,"message":"311","line":2,"column":38,"nodeType":"246","messageId":"247","endLine":2,"endColumn":46},{"ruleId":"244","severity":1,"message":"312","line":3,"column":10,"nodeType":"246","messageId":"247","endLine":3,"endColumn":14},{"ruleId":"244","severity":1,"message":"313","line":3,"column":16,"nodeType":"246","messageId":"247","endLine":3,"endColumn":19},{"ruleId":"244","severity":1,"message":"268","line":7,"column":8,"nodeType":"246","messageId":"247","endLine":7,"endColumn":17},{"ruleId":"244","severity":1,"message":"314","line":8,"column":10,"nodeType":"246","messageId":"247","endLine":8,"endColumn":20},{"ruleId":"244","severity":1,"message":"315","line":9,"column":10,"nodeType":"246","messageId":"247","endLine":9,"endColumn":14},{"ruleId":"244","severity":1,"message":"316","line":9,"column":16,"nodeType":"246","messageId":"247","endLine":9,"endColumn":29},{"ruleId":"244","severity":1,"message":"317","line":9,"column":31,"nodeType":"246","messageId":"247","endLine":9,"endColumn":43},{"ruleId":"244","severity":1,"message":"318","line":12,"column":7,"nodeType":"246","messageId":"247","endLine":12,"endColumn":14},{"ruleId":"244","severity":1,"message":"291","line":16,"column":9,"nodeType":"246","messageId":"247","endLine":16,"endColumn":14},{"ruleId":"263","severity":1,"message":"283","line":34,"column":43,"nodeType":"265","messageId":"266","endLine":34,"endColumn":45},{"ruleId":"244","severity":1,"message":"319","line":73,"column":7,"nodeType":"246","messageId":"247","endLine":73,"endColumn":16},{"ruleId":"263","severity":1,"message":"283","line":91,"column":50,"nodeType":"265","messageId":"266","endLine":91,"endColumn":52},{"ruleId":"263","severity":1,"message":"283","line":92,"column":45,"nodeType":"265","messageId":"266","endLine":92,"endColumn":47},{"ruleId":"244","severity":1,"message":"320","line":146,"column":7,"nodeType":"246","messageId":"247","endLine":146,"endColumn":18},{"ruleId":"244","severity":1,"message":"292","line":147,"column":29,"nodeType":"246","messageId":"247","endLine":147,"endColumn":35},{"ruleId":"244","severity":1,"message":"293","line":149,"column":29,"nodeType":"246","messageId":"247","endLine":149,"endColumn":35},{"ruleId":"244","severity":1,"message":"294","line":152,"column":9,"nodeType":"246","messageId":"247","endLine":152,"endColumn":29},{"ruleId":"263","severity":1,"message":"283","line":208,"column":40,"nodeType":"265","messageId":"266","endLine":208,"endColumn":42},{"ruleId":"244","severity":1,"message":"321","line":294,"column":7,"nodeType":"246","messageId":"247","endLine":294,"endColumn":17},{"ruleId":"244","severity":1,"message":"292","line":295,"column":29,"nodeType":"246","messageId":"247","endLine":295,"endColumn":35},{"ruleId":"244","severity":1,"message":"293","line":296,"column":29,"nodeType":"246","messageId":"247","endLine":296,"endColumn":35},{"ruleId":"244","severity":1,"message":"322","line":319,"column":7,"nodeType":"246","messageId":"247","endLine":319,"endColumn":23},{"ruleId":"244","severity":1,"message":"323","line":323,"column":7,"nodeType":"246","messageId":"247","endLine":323,"endColumn":23},{"ruleId":"244","severity":1,"message":"324","line":366,"column":7,"nodeType":"246","messageId":"247","endLine":366,"endColumn":27},{"ruleId":"244","severity":1,"message":"325","line":372,"column":7,"nodeType":"246","messageId":"247","endLine":372,"endColumn":22},{"ruleId":"244","severity":1,"message":"326","line":384,"column":7,"nodeType":"246","messageId":"247","endLine":384,"endColumn":20},{"ruleId":"244","severity":1,"message":"327","line":398,"column":7,"nodeType":"246","messageId":"247","endLine":398,"endColumn":24},{"ruleId":"244","severity":1,"message":"328","line":409,"column":7,"nodeType":"246","messageId":"247","endLine":409,"endColumn":31},{"ruleId":"244","severity":1,"message":"329","line":559,"column":7,"nodeType":"246","messageId":"247","endLine":559,"endColumn":21},{"ruleId":"244","severity":1,"message":"330","line":569,"column":42,"nodeType":"246","messageId":"247","endLine":569,"endColumn":51},{"ruleId":"244","severity":1,"message":"331","line":571,"column":20,"nodeType":"246","messageId":"247","endLine":571,"endColumn":30},{"ruleId":"244","severity":1,"message":"332","line":574,"column":9,"nodeType":"246","messageId":"247","endLine":574,"endColumn":16},{"ruleId":"263","severity":1,"message":"283","line":12,"column":25,"nodeType":"265","messageId":"266","endLine":12,"endColumn":27},{"ruleId":"263","severity":1,"message":"264","line":12,"column":39,"nodeType":"265","messageId":"266","endLine":12,"endColumn":41},{"ruleId":"263","severity":1,"message":"283","line":24,"column":25,"nodeType":"265","messageId":"266","endLine":24,"endColumn":27},{"ruleId":"263","severity":1,"message":"264","line":24,"column":39,"nodeType":"265","messageId":"266","endLine":24,"endColumn":41},{"ruleId":"249","replacedBy":"333"},{"ruleId":"251","replacedBy":"334"},{"ruleId":"263","severity":1,"message":"283","line":302,"column":48,"nodeType":"265","messageId":"266","endLine":302,"endColumn":50},{"ruleId":"263","severity":1,"message":"283","line":303,"column":43,"nodeType":"265","messageId":"266","endLine":303,"endColumn":45},"no-unused-vars","'Children' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","no-native-reassign",["335"],"no-negated-in-lhs",["336"],"'BrowserRouter' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'useQuery' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'init_fetch'. Either include it or remove the dependency array.","ArrayExpression",["337"],"'fetch_data' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'functionsIn' is defined but never used.","'SmallLogo' is defined but never used.","'isEmpty' is assigned a value but never used.","'match_in_search' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'row'.","ArrowFunctionExpression","unsafeRefs","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","no-redeclare","'row' is already defined.","redeclared","Function declared in a loop contains unsafe references to variable(s) 'search_ar'.","'team' is already defined.","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'LargeLogo' is defined but never used.","'player' is assigned a value but never used.","'useLocation' is defined but never used.","'relativeTimeRounding' is defined but never used.","'teamStatsReducer' is defined but never used.","'oddsB' is assigned a value but never used.","'colorA' is assigned a value but never used.","'colorB' is assigned a value but never used.","'key_mapping_injuries' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'structure_matchup_data' is defined but never used.","'key' is assigned a value but never used.","'post_fetch_api_at_stat_key' is assigned a value but never used.","'match_api' is assigned a value but never used.","'sag_api' is assigned a value but never used.","'data_ar' is assigned a value but never used.",["338"],"'store' is assigned a value but never used.","'updateGameStreaksAction' is defined but never used.","'updateTeamStatsAction' is defined but never used.","'dispatch' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'MatchupTab' is defined but never used.","'both' is defined but never used.","'higher_better' is defined but never used.","'lower_better' is defined but never used.","'OddsTab' is assigned a value but never used.","'TrendsTab' is assigned a value but never used.","'InjuriesTab' is assigned a value but never used.","'StreaksTab' is assigned a value but never used.","'keyPairs_primary' is assigned a value but never used.","'keyPairs_matchup' is assigned a value but never used.","'keyPairs_matchup_sag' is assigned a value but never used.","'keyPairs_trends' is assigned a value but never used.","'keyPairs_odds' is assigned a value but never used.","'keyPairs_injuries' is assigned a value but never used.","'keyPairs_mapping_streaks' is assigned a value but never used.","'get_team_stats' is assigned a value but never used.","'teamsData' is assigned a value but never used.","'teamB_mini' is assigned a value but never used.","'configs' is assigned a value but never used.",["335"],["336"],"no-global-assign","no-unsafe-negation",{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},"Update the dependencies array to be: [done_once, init_fetch]",{"range":"343","text":"344"},"Update the dependencies array to be: [init_fetch, inti_once]",{"range":"345","text":"346"},[617,628],"[done_once, init_fetch]",[1239,1250],"[init_fetch, inti_once]"]